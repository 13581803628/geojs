{"version":3,"file":"geo.min.js","sources":["../src/vgl/init.js","../src/core/init.js","../src/core/version.js","../src/vgl/GL.js","../src/vgl/timestamp.js","../src/vgl/object.js","../src/vgl/event.js","../src/vgl/boundingObject.js","../src/vgl/node.js","../src/vgl/groupNode.js","../src/vgl/actor.js","../src/vgl/freezeObject.js","../src/vgl/defaultValue.js","../src/vgl/geojsonReader.js","../src/vgl/data.js","../src/vgl/geomData.js","../src/vgl/mapper.js","../src/vgl/groupMapper.js","../src/vgl/materialAttribute.js","../src/vgl/blend.js","../src/vgl/material.js","../src/vgl/renderer.js","../src/vgl/renderWindow.js","../src/vgl/camera.js","../src/vgl/interactorStyle.js","../src/vgl/trackballInteractorStyle.js","../src/vgl/pvwInteractorStyle.js","../src/vgl/viewer.js","../src/vgl/shader.js","../src/vgl/shaderProgram.js","../src/vgl/texture.js","../src/vgl/uniform.js","../src/vgl/vertexAttribute.js","../src/vgl/source.js","../src/vgl/planeSource.js","../src/vgl/pointSource.js","../src/vgl/lineSource.js","../src/vgl/utils.js","../src/vgl/picker.js","../src/vgl/shapefileReader.js","../src/vgl/vtkReader.js","../src/vgl/DataBuffers.js","../src/util/init.js","../src/util/wigglemaps.js","../src/core/object.js","../src/core/sceneObject.js","../src/core/timestamp.js","../src/core/ellipsoid.js","../src/core/mercator.js","../src/core/latlng.js","../src/core/layer.js","../src/core/featureLayer.js","../src/core/event.js","../src/core/mapInteractor.js","../src/core/clock.js","../src/core/fileReader.js","../src/core/jsonReader.js","../src/core/map.js","../src/core/feature.js","../src/core/pointFeature.js","../src/core/lineFeature.js","../src/core/pathFeature.js","../src/core/polygonFeature.js","../src/core/planeFeature.js","../src/core/vectorFeature.js","../src/core/geomFeature.js","../src/core/graphFeature.js","../src/core/transform.js","../src/core/renderer.js","../src/core/osmLayer.js","../src/gl/init.js","../src/gl/renderer.js","../src/gl/lineFeature.js","../src/gl/pointFeature.js","../src/gl/geomFeature.js","../src/gl/planeFeature.js","../src/gl/polygonFeature.js","../src/gl/vglRenderer.js","../src/d3/init.js","../src/d3/object.js","../src/d3/pointFeature.js","../src/d3/lineFeature.js","../src/d3/pathFeature.js","../src/d3/graphFeature.js","../src/d3/planeFeature.js","../src/d3/vectorFeature.js","../src/d3/d3Renderer.js","../src/ui/init.js","../src/ui/uiLayer.js","../src/ui/widget.js","../src/ui/sliderWidget.js","../src/ui/legendWidget.js","../src/plugin/jquery-plugin.js"],"names":["inherit","C","P","F","prototype","uber","constructor","geo","window","renderers","features","fileReaders","func","registerFileReader","name","undefined","createFileReader","opts","hasOwnProperty","registerRenderer","createRenderer","layer","canvas","ren","_init","registerFeature","category","createFeature","renderer","arg","api","options","$","extend","registerLayer","layers","createLayer","map","registerWidget","widgets","createWidget","requestAnimationFrame","setTimeout","Math","log2","log","apply","arguments","LN2","version","ogs","namespace","ns_string","i","parts","split","parent","slice","length","vgl","Object","size","obj","key","GL","ColorBufferBit","DepthBufferBit","m_globalModifiedTime","timestamp","this","m_modifiedTime","modified","getMTime","object","event","call","keyPress","mousePress","mouseRelease","contextMenu","configure","enable","mouseWheel","keyRelease","middleButtonPress","startInteraction","enter","rightButtonPress","middleButtonRelease","disable","endInteraction","mouseMove","mouseOut","expose","timer","leftButtonPress","leave","rightButtonRelease","leftButtonRelease","click","dblClick","boundingObject","m_bounds","m_computeBoundsTimestamp","m_boundsDirtyTimestamp","bounds","hasValidBounds","Number","MAX_VALUE","setBounds","minX","maxX","minY","maxY","minZ","maxZ","resetBounds","computeBounds","computeBoundsTimestamp","boundsDirtyTimestamp","ReferenceFrame","Relative","Absolute","node","m_parent","m_material","m_visible","m_overlay","accept","visitor","visit","material","setMaterial","visible","setVisible","flag","setParent","removeChild","overlay","setOverlay","ascend","traverse","boundsModified","groupNode","m_children","b_setVisible","addChild","childNode","indexOf","push","index","splice","removeChildren","children","hasChild","child","type","UpdateVisitor","traverseChildrenAndUpdateBounds","CullVisitor","traverseChildren","mode","TraverseAllChildren","updateBounds","vesVisitor","childBounds","istep","jstep","actor","m_transformMatrix","mat4","create","m_referenceFrame","m_mapper","matrix","setMatrix","tmatrix","referenceFrame","setReferenceFrame","mapper","setMapper","computeLocalToWorldMatrix","computeWorldToLocalMatrix","mapperBounds","minPt","maxPt","newBounds","vec3","transformMat4","freezeObject","freezedObject","freeze","o","defaultValue","a","b","EMPTY_OBJECT","geojsonReader","readScalars","coordinates","geom","size_estimate","idx","array","s","r","g","m_scalarFormat","sourceData","vertexAttributeKeys","Scalar","sourceDataSf","m_scalarRange","setScalarRange","data","addSource","pushBack","insertAt","Color","sourceDataC3fv","readPoint","geometryData","vglpoints","points","vglcoords","sourceDataP3fv","indices","Uint16Array","x","y","z","setIndices","addPrimitive","setName","readMultiPoint","pntcnt","estpntcnt","readLineString","vglline","lineStrip","setIndicesPerPrimitive","readMultiLineString","j","thisLineLength","readPolygon","thisPolyLength","vl","vgltriangle","triangles","readMultiPolygon","ccount","numPolys","indexes","vf","flip","flipped","tcount","readGJObjectInt","properties","ScalarFormat","ScalarRange","ret","next","nextset","geometries","readGJObject","geometry","console","linearizeGeoms","geoms","toString","readGeomObject","getPrimitives","buffer","JSON","parse","scalarFormat","scalarRange","raster","point","lineString","polygon","Position","Normal","TextureCoordinate","primitive","m_indicesPerPrimitive","m_primitiveType","m_indicesValueType","m_indices","createIndices","numberOfIndices","sizeInBytes","BYTES_PER_ELEMENT","primitiveType","setPrimitiveType","indicesPerPrimitive","count","indicesValueType","setIndicesValueType","indicesArray","triangleStrip","gl","TRIANGLE_STRIP","UNSIGNED_SHORT","TRIANGLES","lines","LINES","LINE_STRIP","POINTS","vertexDataP3f","m_position","vertexDataP3N3f","m_normal","vertexDataP3T3f","m_texCoordinate","m_attributesMap","m_data","m_name","Date","toISOString","vglAttributeData","m_numberOfComponents","m_dataType","m_dataTypeSize","m_normalized","m_stride","m_offset","getData","dataToFloat32Array","Float32Array","setData","Array","addAttribute","dataType","sizeOfDataType","offset","stride","noOfComponents","normalized","newAttr","sizeOfArray","lengthOfArray","keys","numberOfComponents","sizeOfAttributeDataType","hasKey","numberOfAttributes","attributeNumberOfComponents","attributeDataType","attributeOffset","attributeStride","insert","sourceDataAnyfv","FLOAT","value","sourceDataP3T3f","sourceDataP3N3f","sourceDataT2fv","m_min","m_max","m_fixedmin","m_fixedmax","min","max","sourceDataDf","m_primitives","m_sources","source","sourceName","numberOfSources","numberOfPrimitives","vertexIndex","attr","ib","jb","findClosestVertex","vi","vPos","dx","dy","dz","dist","minDist","minIndex","sqrt","getPosition","getScalar","deleteVertexBufferObjects","m_buffers","deleteBuffer","createVertexBufferObjects","m_geomData","k","ks","bufferId","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","m_dynamicDraw","DYNAMIC_DRAW","STATIC_DRAW","m_bufferVertexAttributeMap","m_glCompileTimestamp","cleanUpDrawObjects","setupDrawObjects","m_dirty","m_color","dynamicDraw","geomBounds","color","setColor","setGeometryData","updateSourceBuffer","values","bufferIndex","bufferSubData","getSourceBuffer","render","renderState","vertexAttrib3fv","noOfPrimitives","bindVertexData","drawArrays","groupMapper","m_createMappersTimestamp","m_mappers","m_geomDataArray","geometryDataArray","setGeometryDataArray","materialAttributeType","Undefined","ShaderProgram","Texture","Blend","Depth","materialAttribute","m_type","m_enabled","enabled","setup","bind","undoBind","setupVertexData","undoBindVertexData","blendFunction","destination","m_source","m_destination","blendFuncSeparate","ONE","ONE_MINUS_SRC_ALPHA","blend","m_wasEnabled","m_blendFunction","SRC_ALPHA","isEnabled","BLEND","m_shaderProgram","shaderProgram","m_binNumber","m_textureAttributes","m_attributes","binNumber","setBinNumber","binNo","exists","uniform","attribute","setAttribute","textureUnit","remove","RenderBin","Base","Default","Opaque","Transparent","Overlay","m_modelViewMatrix","m_normalMatrix","m_projectionMatrix","m_sceneRoot","m_camera","camera","m_nearClippingPlaneTolerance","m_x","m_y","m_width","m_height","m_resizable","m_resetScene","m_layer","m_resetClippingRange","width","height","setLayer","layerNo","isResizable","setResizable","backgroundColor","clearColor","setBackgroundColor","setClearColor","sceneRoot","renSt","sortedActors","mvMatrixInv","DEPTH_TEST","depthFunc","LEQUAL","clearMask","clearDepth","clear","viewport","resetCamera","sort","multiply","viewMatrix","projectionMatrix","ortho","invert","transpose","vn","directionOfProjection","visibleBounds","center","diagonals","radius","aspect","viewAspect","angle","viewAngle","distance","vup","atan","tan","sin","viewUpDirection","abs","dot","setViewUpDirection","setFocalPoint","setPosition","resetCameraClippingRange","viewPlaneNormal","position","c","d","range","vec2","getParameter","DEPTH_BITS","setClippingRange","resize","positionAndResize","setViewAspect","addActor","hasActor","addActors","actors","removeActor","removeActors","removeAllActors","worldToDisplay","worldPt","viewProjectionMatrix","winX","winY","winZ","winW","clipPt","vec4","fromValues","displayToWorld","displayPt","viewProjectionInverse","focusDisplayPoint","focalPoint","focusWorldPt","resetScene","setResetScene","reset","resetClippingRange","setResetClippingRange","renderWindow","m_canvas","m_activeRender","m_renderers","windowSize","setWindowSize","windowPosition","setWindowPosition","activeRenderer","addRenderer","hasRenderer","setClearMask","removeRenderer","getRenderer","createWindow","getContext","e","deleteWindow","m_viewAngle","PI","m_focalPoint","m_centerOfRotation","m_viewUp","m_rightDir","m_near","m_far","m_viewAspect","m_directionOfProjection","m_viewPlaneNormal","m_viewMatrix","m_computeModelViewMatrixTime","m_computeProjectMatrixTime","m_left","m_right","m_top","m_bottom","m_enableTranslation","m_enableRotation","m_enableScale","m_enableParallelProjection","m_clearColor","m_clearDepth","m_clearMask","setViewAngleDegrees","setViewAngle","centerOfRotation","setCenterOfRotation","clippingRange","near","far","enableScale","setEnableScale","enableRotation","setEnableRotation","enableTranslation","setEnableTranslation","isEnabledParallelProjection","enableParallelProjection","setEnnableParallelProjection","setParallelProjection","left","right","top","bottom","computeDirectionOfProjection","computeViewPlaneNormal","computeViewMatrix","computeProjectionMatrix","mask","setClearDepth","depth","subtract","normalize","zoom","dir","pan","computeOrthogonalAxes","cross","rotate","mat","inverseCenterOfRotation","identity","translate","lookAt","perspective","interactorStyle","m_that","m_viewer","viewer","setViewer","on","handleMouseDown","handleMouseUp","handleMouseMove","handleMouseOut","handleMouseWheel","handleKeyPress","mouseContextMenu","handleContextMenu","handleClick","handleDoubleClick","trackballInteractorStyle","m_outsideCanvas","m_leftMouseBtnDown","m_rightMouseBtnDown","m_midMouseBtnDown","m_currPos","m_lastPos","fp","fdp","fwp","dp1","dp2","wp1","wp2","coords","m_zTrans","cam","relMouseCoords","button","view","originalEvent","wheelDelta","pvwInteractorStyle","m_renderer","m_coords","m_currentMousePos","m_focusWorldPt","m_focusDisplayPt","m_displayPt1","m_displayPt2","m_worldPt1","m_worldPt2","m_dx","m_dy","m_dz","m_leftMouseButtonDown","m_rightMouseButtonDown","m_middleMouseButtonDown","m_mouseLastPos","rens","secCameras","deltaxy","m_ready","m_interactorStyle","m_renderWindow","init","setInteractorStyle","style","fixedEvent","fix","preventDefault","state","trigger","pageX","pageY","totalOffsetX","totalOffsetY","canvasX","canvasY","currentElement","offsetLeft","scrollLeft","offsetTop","scrollTop","offsetParent","bindEventHandlers","unbindEventHandlers","off","shader","m_shaderHandle","m_compileTimestamp","m_shaderType","m_shaderSource","shaderHandle","shaderType","shaderSource","setShaderSource","compile","deleteShader","createShader","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","programHandle","m_programHandle","m_shaders","m_uniforms","m_vertexAttributes","m_uniformNameToLocation","m_vertexAttributeNameToLocation","queryUniformLocation","getUniformLocation","queryAttributeLocation","getAttribLocation","addShader","addUniform","addVertexAttribute","uniformLocation","attributeLocation","updateUniforms","callGL","link","linkProgram","getProgramParameter","LINK_STATUS","use","useProgram","cleanUp","deleteVertexAndFragment","deleteProgram","createProgram","bindAttributes","bindUniforms","update","bindAttribLocation","texture","activateTextureUnit","m_textureUnit","activeTexture","TEXTURE0","TEXTURE1","TEXTURE2","TEXTURE3","TEXTURE4","TEXTURE5","TEXTURE6","TEXTURE7","TEXTURE8","TEXTURE9","TEXTURE10","TEXTURE11","TEXTURE12","TEXTURE13","TEXTURE14","TEXTURE15","m_depth","m_textureHandle","m_pixelFormat","m_pixelDataType","m_internalFormat","m_image","m_setupTimestamp","deleteTexture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","pixelStorei","UNPACK_ALIGNMENT","UNPACK_FLIP_Y_WEBGL","updateDimensions","computeInternalFormatUsingImage","texImage2D","image","setImage","setTextureUnit","unit","setWidth","setDepth","textureHandle","internalFormat","setInternalFormat","pixelFormat","setPixelFormat","pixelDataType","setPixelDataType","RGBA","UNSIGNED_BYTE","lookupTable","m_range","m_colorTable","Uint8Array","colorTable","setColorTable","colors","setRange","updateRange","getTypeNumberOfComponents","INT","BOOL","FLOAT_VEC2","INT_VEC2","BOOL_VEC2","FLOAT_VEC3","INT_VEC3","BOOLT_VEC3","FLOAT_VEC4","INT_VEC4","BOOL_VEC4","FLOAT_MAT3","FLOAT_MAT4","m_dataArray","get","set","location","m_numberElements","uniform1iv","uniform1fv","uniform2fv","uniform3fv","uniform4fv","uniformMatrix3fv","FALSE","uniformMatrix4fv","modelViewUniform","projectionUniform","floatUniform","normalMatrixUniform","CountAttributeIndex","vertexAttributeKeysIndexed","Zero","One","Two","Three","Four","Five","Six","Seven","Eight","Nine","vertexAttribute","program","vertexAttribPointer","enableVertexAttribArray","disableVertexAttribArray","planeSource","m_origin","m_point1","m_point2","m_xresolution","m_yresolution","m_geom","setOrigin","setPoint1","setPoint2","ii","numPts","sourceTexCoords","tc","v1","v2","pts","posIndex","normIndex","colorIndex","texCoordIndex","positions","normals","texCoords","tristrip","sourcePositions","sourceColors","pointSource","m_this","m_positions","m_colors","m_textureCoords","m_size","getPositions","setPositions","getColors","setColors","getSize","setSize","setTextureCoordinates","texcoords","pointsPrimitive","sourceSize","lineSource","linesPrimitive","utils","computePowerOfTwo","pow","createTextureVertexShader","vertexShaderSource","join","VERTEX_SHADER","createTextureFragmentShader","fragmentShaderSource","FRAGMENT_SHADER","createRgbaTextureFragmentShader","createVertexShader","createPointVertexShader","createVertexShaderSolidColor","createVertexShaderColorMap","createFragmentShader","createPhongVertexShader","createPhongFragmentShader","createFragmentShaderSolidColor","context","createFragmentShaderColorMap","createPointSpritesVertexShader","createPointSpritesFragmentShader","createTextureMaterial","isRgba","prog","vertexShader","fragmentShader","posVertAttr","texCoordVertAttr","pointsizeUniform","samplerUniform","opacityUniform","createGeometryMaterial","pointSize","opacity","colorVertAttr","createPointGeometryMaterial","sizeVertAttr","createPhongMaterial","normalVertAttr","normalUniform","createColorMaterial","createColorMappedMaterial","lut","scalarVertAttr","lutMinUniform","lutMaxUniform","updateColorMappedMaterial","lutMin","lutMax","createSolidColorMaterial","createPointSpritesMaterial","heightUniform","vertexColorWeightUniform","scalarsToColors","useScalarsToColors","useVertexColors","createPlane","originX","originY","originZ","point1X","point1Y","point1Z","point2X","point2Y","point2Z","createTexturePlane","createPoints","createPointSprites","createLines","createColorLegend","varname","origin","countMajor","countMinor","createLabels","pt1","pt2","delta","axisLabelOffset","create2DTexture","toFixed","createTicksAndLabels","pt1X","pt1Y","pt1Z","pt2X","pt2Y","pt2Z","heightMajor","concat","group","textToWrite","textSize","font","alignment","baseline","bold","document","getElementById","ctx","createElement","display","fillStyle","fillRect","textAlign","textBaseline","fillText","picker","m_actors","getActors","pick","selectionX","selectionY","bb","tmin","tmax","tymin","tymax","tzmin","tzmax","fpoint","focusDisplayPt","cameraPos","ray","shapefileReader","SHP_NULL","SHP_POINT","SHP_POLYGON","SHP_POLYLINE","int8","charCodeAt","bint32","lint32","bint16","lint16","ldbl64","b0","b1","b2","b3","b4","b5","b6","b7","sign","exp","frac","lfloat32","str","chars","readHeader","code","shapetype","xmin","ymin","xmax","ymax","Box","vect","loadShx","appendIndex","Shapefile","path","ajax","url","mimeType","success","dbf_data","loadShp","localShapefile","shxFile","shx","shpFile","shp","dbfFile","dbf","shxReader","FileReader","onloadend","result","shpReader","shpData","dbfReader","dbfData","readAsBinaryString","loadDBF","level","num_entries","header_size","record_size","FIELDS_START","HEADER_LENGTH","header_offset","headers","records","record_offset","declare","record","header","trim","parseFloat","readRing","start","end","ring","readRecord","geom_type","num_parts","num_points","parts_start","points_start","rings","feature","vtkReader","m_base64Chars","m_reverseBase64Chars","m_vtkRenderedList","m_vtkObjectCount","m_vtkScene","m_node","END_OF_INPUT","m_base64Str","m_base64Count","m_pos","ntos","n","unN","unescape","readReverseBase64","nextCharacter","charAt","decode64","inBuffer","done","readNumber","ss","v","readF3Array","numberOfPoints","test","Int8Array","readColorArray","vglcolors","tmp","parseObject","vtkObject","colorMapData","shaderProg","atob","String","fromCharCode","parseLineData","parseMeshData","parsePointData","parseColorMapData","title","hasTransparency","numberOfIndex","temp","m","vgllines","p","copy","tcoord","vgltriangles","pn","vglVertexes","numColors","tmpArray","xrgb","numOfColors","orientation","numOfLabels","parseSceneMetadata","bgc","localWidth","localHeight","sceneRenderer","Renderers","LookAt","Background1","initScene","createViewer","deleteViewer","updateCanvas","numObjects","setVtkScene","scene","DataBuffers","initialSize","current","copyArray","dst","src","min_expand","new_size","newArray","len","oldArray","dirty","alloc","num","write","repeat","elem","setNumeric","isFinite","util","pointInPolygon","outer","inner","inside","forEach","vert","intersect","hole","isFunction","f","ensureFunction","randomString","floor","random","substring","convertColor","cssColors","parseInt","normalizeCoordinates","isArray","latlng","lng","lat","longitude","lon","latitude","elevation","elev","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Vector2D","RangeNode","subtree","xrange","x_in","yrange","y_in","subquery","box","y_left","x_right","search","contains","x_left","RangeTree","root","_box","clone","y_right","area","vertex","intersects","union","centroid","add","sub","scale","div","zero","tol","omega","cos","xp","yp","intersect2dt","denom","Infinity","num_t","t","intersect2dpos","num_s","m_eventHandlers","m_idleHandlers","m_deferredCount","onIdle","handler","addDeferred","defer","geoOn","geoTrigger","args","geoOff","filter","_exit","sceneObject","s_exit","s_trigger","s_addDeferred","s_onIdle","draw","childrenOnly","geoArgs","stopPropagation","_triggeredBy","ellipsoid","m_radii","m_radiiSquared","m_minimumRadius","m_maximumRadius","radii","radiiSquared","maximumRadius","minimumRadius","computeGeodeticSurfaceNormal","cosLatitude","transformPoint","gamma","transformGeometry","sourceDataArray","WGS84","UNIT_SPHERE","mercator","r_major","r_minor","spherical","long2tilex","rad","lat2tiley","long2tilex2","lat2tiley2","tilex2long","tiley2lat","y2lat","lat2y","deg2rad","rad2deg","ll2m","es","eccent","phi","sinphi","con","com","con2","ts","m2ll","pjPhi2","dphi","N_ITER","HALFPI","TOL","eccnth","Phi","arg1","arg2","arg3","m_lat","m_lng","m_elv","elv","val","m_style","bin","m_id","id","newLayerId","m_gcs","m_timeRange","m_map","m_isReference","m_initialized","m_rendererName","m_dataTime","m_updateTime","m_drawTime","m_sticky","sticky","m_active","active","gcs","transform","transformLayer","baseLayer","timeRange","append","dataTime","updateTime","drawTime","query","referenceLayer","initialized","toLocal","input","fromLocal","css","_update","_resize","w","h","currentId","spec","warn","featureLayer","m_features","s_init","s_update","s_draw","featureName","newFeature","deleteFeature","_render","request","layerAdd","layerRemove","drawEnd","mousemove","mouseclick","brush","brushend","brushstart","transitionstart","transitionend","clock","play","stop","pause","change","mouseover","mouseout","mouseon","mouseoff","mapInteractor","eventMatch","modifiers","m_mouse","buttons","alt","meta","shift","ctrl","calcSpeed","doRespond","m_disableThrottle","m_wait","m_wheelQueue","m_throttleTime","modifyVelocity","deltaT","sf","springForce","speed","vx","vy","m_options","momentum","drag","minSpeed","xplus","xminus","yplus","yminus","spring","ul","gcsToDisplay","lr","springConstant","m_keyboard","m_state","$node","m_selectionLayer","m_selectionPlane","panMoveButton","panMoveModifiers","zoomMoveButton","zoomMoveModifiers","panWheelEnabled","panWheelModifiers","zoomWheelEnabled","zoomWheelModifiers","wheelScaleX","wheelScaleY","zoomScale","selectionButton","selectionModifiers","maxSpeed","page","middle","time","deltaTime","velocity","_connectEvents","_disconnectEvents","_handleMouseMove","_handleMouseDown","_handleMouseUp","_handleMouseWheel","_getMousePosition","evt","dt","valueOf","displayToGcs","_getMouseButton","which","_getMouseModifiers","altKey","ctrlKey","metaKey","shiftKey","_getSelection","mouse","upperLeft","lowerRight","upperRight","lowerLeft","cancel","action","out","deleteLayer","screenCoordinates","fillOpacity","_handleMouseMoveDocument","_handleMouseUpDocument","selectionObj","oldAction","springBack","zoomFactor","direction","deltaFactor","deltaX","deltaY","initialVelocity","last","transition","_handleDoubleClick","destroy","keyboard","simulateEvent","Event","m_now","m_start","m_end","m_step","m_rate","m_loop","POSITIVE_INFINITY","m_currentLoop","m_currentAnimation","m_object","_attached","now","previous","step","loop","_animate","framerate","stepForward","_setNextFrame","stepBackward","frame","myAnimation","fileReader","newFileReader","progress","reader","onprogress","error","canRead","read","file","_getString","readAsText","_getArrayBuffer","jsonReader","strokeWidth","strokeColor","strokeOpacity","fillColor","File","match","_featureArray","_readObject","onDone","fileString","fail","_featureType","_getCoordinates","_getStyle","_done","allFeatures","fill","_addFeature","stroke","_buildData","coord","_style","line","resizeSelf","m_uigcs","uigcs","m_center","m_zoom","m_baseLayer","m_fileReader","m_interactor","m_validZoomRange","m_transition","m_queuedTransition","m_clock","autoResize","clampBounds","base","recenter","zoomLevel","screenPosition","eventType","_updateBounds","force","pt","corner1","corner2","screenDelta","newCenter","currentCenter","layerName","newLayer","target","toggle","layerToggle","world","output","save","readerType","addLayer","exit","interactor","dataTransfer","dropEffect","files","zoomRange","interp1","p0","p1","defaultInterp","zoom2z","z2zoom","anim","defaultOpts","duration","ease","interp","zCoord","cancelNavigation","cancelAnimation","l","m_selectionAPI","selectionAPI","m_bin","m_buildTime","m_selectedFeatures","_bindMouseHandlers","_unbindMouseHandlers","_handleMousemove","_handleMouseclick","_handleBrushend","_handleBrush","pointSearch","found","over","newFeatures","oldFeatures","lastTop","eventID","boxSearch","all","toLowerCase","drawables","_drawables","buildTime","_build","pointFeature","m_rangeTree","s_data","s_style","m_maxRadius","_updateRangeTree","ifound","q","pos","_boundingBox","defaultStyle","sprites","sprites_image","lineFeature","lineDist2","u","l2","dist2","ceil","err","partial","strokeStyle","pathFeature","polygonFeature","getCoordinates","posFunc","polyFunc","m_coordinates","poly","d0","m_polygon","coordinate","planeFeature","m_upperLeft","m_lowerRight","m_defaultDepth","m_drawOnAsyncResourceLoad","drawOnAsyncResourceLoad","vectorFeature","geomFeature","point_sprites","point_sprites_image","graphFeature","m_nodes","m_points","m_links","nodes","links","linkType","nodeFeature","linkFeatures","nLinks","osmTransformFeature","destGcs","inplace","yCoord","pointOffset","inPos","outPos","srcGcs","transformFeature","projPoint","projSrcGcs","proj4","Proj","projDestGcs","Point","osmLayer","transformCoordinates","handleLatLngCoordinates","xAcc","yAcc","writer","handleArrayCoordinates","zAcc","handleObjectCoordinates","xCoord","worldToGcs","isTileVisible","tile","m_visibleTilesRange","index_x","startX","endX","index_y","startY","endY","drawTiles","_removeTiles","m_pendingNewTilesStat","m_updateTimerId","updateOSMTiles","m_lastVisibleZoom","_addTiles","m_tileUrl","m_tiles","m_hiddenBinNumber","m_lastVisibleBinNumber","m_visibleBinNumber","m_pendingNewTiles","m_pendingInactiveTiles","m_numberOfCachedTiles","m_tileCacheSize","m_baseUrl","m_imageFormat","m_updateDefer","baseUrl","imageFormat","displayLast","tileUrl","tileCacheSize","_hasTile","_addTile","noOfTilesX","noOfTilesY","totalLatDegrees","lonPerTile","latPerTile","llx","lly","urx","ury","Image","LOADING","LOADED","REMOVED","REMOVING","INVALID","crossOrigin","lastused","currZoom","lastZoom","tileOnLoad","Deferred","updateTimerId","total","resolve","lastStartX","lastStartY","lastEndX","lastEndY","currStartX","currStartY","currEndX","currEndY","distWorldDeltaPerTile","tile1x","tile1y","tile2x","tile2y","invJ","worldPt1","worldPt2","worldDeltaY","displayDeltaY","worldDelta","displayDelta","noOfTilesRequired","worldDeltaPerTile","minDistWorldDeltaPerTile","round","onload","_updateTiles","clearTimeout","updateBaseUrl","contextRenderer","createGLLines","prev","itemIndex","lineItemIndex","lineItem","currIndex","lineSegments","posTmp","strkColor","strkWidthArr","strkColorArr","strkOpacityArr","strkWidthFunc","strkColorFunc","strkOpacityFunc","buffers","posData","prvPosData","nxtPosData","offPosData","strkWidthData","strkColorData","strkOpacityData","order","featureVertices","addVert","prevPos","currPos","nextPos","item","lineItemData","m_actor","m_pixelWidthUnif","verticesPerFeature","vs","fs","posAttr","prvAttr","nxtAttr","offAttr","strkWidthAttr","strkColorAttr","strkOpacityAttr","mviUnif","prjUnif","createGLPoints","radFunc","strokeWidthFunc","fillColorFunc","fillFunc","strokeColorFunc","strokeFunc","fillOpacityFunc","strokeOpactityFunc","pointPolygon","sourceUnits","sourceRadius","sourceStokeWidth","sourceFillColor","sourceFill","sourceStrokeColor","sourceStroke","sourceAlpha","sourceStrokeOpacity","trianglesPrimitive","unitAttr","radAttr","stokeWidthAttr","fillColorAttr","fillAttr","strokeColorAttr","strokeAttr","fillOpacityAttr","strokeOpacityAttr","m_pixelWidthUniform","m_aspectUniform","vpf","m_primitiveShape","primitiveShape","verts","m_scalar","m_noOfPrimitives","m_onloadCallback","or","img","complete","createGLPolygons","polygonItemCoordIndex","fillColorNew","fillOpacityNew","polygonItem","sourceFillOpacity","trianglePrimitive","holes","extRing","extIndex","extLength","intIndex","posInstance","triangulator","PNLTRI","Triangulator","triangList","newTriangList","fillColorInstance","currentIndex","extRingCoords","intRingCoords","triangulate_polygon","newIndices","polygonIndex","polygonItemCoords","_vglViewerInstances","viewers","maps","vglViewerInstance","makeViewer","mapIdx","deleteCache","vglRenderer","m_contextRenderer","_updateRendererCamera","cr","focusPoint","centerDisplay","centerGeo","newCenterDisplay","newCenterGeo","newZ","d3","strLength","uniqueID","strArray","d3Rescale","_d3id","select","_removeFeature","pos_func","attributes","_convertScale","cx","cy","classes","_drawFeatures","svg","wrapStyle","ln","diag","diagonal","trg","selection","fill_color","markerID","updateMarkers","sel","_definitions","selectAll","_convertColor","getScale","scaleFactor","orig_func","size_func","cache","NEGATIVE_INFINITY","x1","y1","x2","y2","marker-end","d3Renderer","setAttrs","attrs","setStyles","styles","getMap","getGroup","m_svg","initCorners","m_corners","setTransform","m_scale","baseToLocal","localToBase","m_defs","rgb","_convertPosition","shadow","dataIndex","__render","gui","uiLayer","widgetName","newWidget","deleteWidget","widget","_deleteFeature","_createFeature","sliderWidget","put_icon","icon","m_xscale","m_yscale","m_plus","m_minus","m_track","m_nub","m_plusIcon","m_minusIcon","m_group","m_lowContrast","m_nubSize","m_highlightDur","respond","trans","zrange","x0","y0","linear","domain","classed","datum","cursor","mouseOver","clamp","legendWidget","m_categories","m_border","m_spacing","m_padding","categories","text","getBBox","applyColor","_scale","labels","nw","margin","stroke-width","fill-opacity","load","isColorKey","makeColorScale","acc","wrap","cannotHandle","doNotHandle","categorical","category10","category20","fn","geojsMap","Error","baseRenderer","_create","_map","element","_baseLayer","_layers","scl","_size","extent","redraw"],"mappings":"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qB,KAAKe,UAAU62D,cAEfC,oBAAoB72D,SAAS6zD,QAAQ/pC,IAAI;QACzC9qB,KAAKe,UAAU82D,sBAEfC,mBAAmB/1D,WAAW8yD,QAAQ/pC,IAAI;QAC1C9qB,KAAKgC,aAAa81D,qBAElBn5D,OAAO0O,gBAAgBrN,OAEvB61D,QAAQj3D,UAAUD;;IAxVpB,MAAM9G,gBAAgB9D,IAAIuS,GAAGkjD,eAC3B,OAAO,IAAIz1D,IAAIuS,GAAGkjD,aAAan0D;IAEjCA,MAAMA,WACNtB,IAAIy1D,aAAarxD,KAAKN,MAAMxC;IAO5B,IAAIs5B,SAAS92B,MACT25C,SAAS35C,KAAKy5C,OACdukB,UAAU,MACV2C,sBAAsB,MACtBC,kBAAkB,MAClBjsD,gBAAoCjY,WAApBc,IAAI4X,eAA4B,IAAQ5X,IAAI4X,aAC5D0rD,mBAAmB,YACnBtgB,SAASxgD,KAAK7C,OACdsjD,WAAWzgD,KAAK+/C;KACO,eAAvBviD,IAAIujE,kBAAwD,aAAvBvjE,IAAIujE,oBAC3CD,mBAAmBtjE,IAAIujE;IAGzB,IAAI5oC,uBACA,uBACA,wBACA,wBACA,6BACA,+BACA,gCACA,gCACA,kCACA,yBACA,2BACA,6BACA,yBACA,iCACA,kCACA,yBACA,8BACA,gCACA,4BACA,iCACA,0BACA,4BACA,mBACA,KACA,mCACA,kDACA,uEACA,wBACA,6BACA,OACA,UACA,wBACA,yDACA,sBACA,UACA,sBAEA,+CACA,uCACA,eACA,OACA,mDACA,yDACA,iCACA,sBACA,0EACA,uBACA,oBACA,OACA,oCACA,uEACA,qCACA,MACAC,KAAK,OASLG,yBACA,gBACA,4BACA,UACA,yBACA,yBACA,8BACA,gCACA,4BACA,iCACA,0BACA,4BACA,kBACA,kCACA,oBACA,kDACA,6CACA,gBACA,kEACA,sCACA,oBACA,gBACA,4EACA,6BACA,mDACA,sBACA,cACA,qCACA,2DACA,OACA,+EACA,yBACA,gDACA,UACA,iCACA,mCACA,oDACA,0BACA,wEACA,0DACA,cACA,gEACA,4EACA,OACA,MACAH,KAAK,OAQLmnC,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","sourcesContent":["//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\nif(typeof ogs === 'undefined') {\n  var ogs = {};\n}\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create namespace for the given name\n *\n * @param ns_string\n * @returns {*|{}}\n */\n//////////////////////////////////////////////////////////////////////////////\nogs.namespace = function(ns_string) {\n  'use strict';\n\n  var parts = ns_string.split('.'), parent = ogs, i;\n\n  // strip redundant leading global\n  if (parts[0] === \"ogs\") {\n    parts = parts.slice(1);\n  }\n  for (i = 0; i < parts.length; i += 1) {\n    // create a property if it doesn't exist\n    if (typeof parent[parts[i]] === \"undefined\") {\n      parent[parts[i]] = {};\n    }\n    parent = parent[parts[i]];\n  }\n  return parent;\n};\n\n/** vgl namespace */\nvar vgl = ogs.namespace(\"gl\");\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convenient function to define JS inheritance\n *\n * @param C\n * @param P\n */\n//////////////////////////////////////////////////////////////////////////////\nfunction inherit(C, P) {\n  \"use strict\";\n\n  var F = function() {\n  };\n  F.prototype = P.prototype;\n  C.prototype = new F();\n  C.uber = P.prototype;\n  C.prototype.constructor = C;\n}\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convenient function to get size of an object\n *\n * @param obj\n * @returns {number} *\n */\n//////////////////////////////////////////////////////////////////////////////\nObject.size = function(obj) {\n  \"use strict\";\n\n  var size = 0, key = null;\n  for (key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      size++;\n    }\n  }\n  return size;\n};\n","/** @namespace */\nvar geo = {};     // jshint ignore: line\nwindow.geo = geo; // jshint ignore: line\n\ngeo.renderers = {};\ngeo.features = {};\ngeo.fileReaders = {};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convenient function to define JS inheritance\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.inherit = function (C, P) { // jshint ignore: line\n  \"use strict\";\n\n  var F = inherit.func();\n  F.prototype = P.prototype;\n  C.prototype = new F();\n  C.prototype.constructor = C;\n};\ngeo.inherit.func = function () {\n  \"use strict\";\n  return function () {};\n};\n\n// Should get rid of this at some point.\nwindow.inherit = geo.inherit;\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Register a new file reader type\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.registerFileReader = function (name, func) {\n  \"use strict\";\n\n  if (geo.fileReaders === undefined) {\n    geo.fileReaders = {};\n  }\n\n  geo.fileReaders[name] = func;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new file reader\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.createFileReader = function (name, opts) {\n  \"use strict\";\n\n  if (geo.fileReaders.hasOwnProperty(name)) {\n    return geo.fileReaders[name](opts);\n  }\n  return null;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Register a new renderer type\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.registerRenderer = function (name, func) {\n  \"use strict\";\n\n  if (geo.renderers === undefined) {\n    geo.renderers = {};\n  }\n\n  geo.renderers[name] = func;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create new instance of the renderer\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.createRenderer  = function (name, layer, canvas) {\n  \"use strict\";\n\n  if (geo.renderers.hasOwnProperty(name)) {\n    var ren = geo.renderers[name](\n      {\"layer\": layer, \"canvas\": canvas}\n    );\n    ren._init();\n    return ren;\n  }\n  return null;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Register a new feature type\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.registerFeature = function (category, name, func) {\n  \"use strict\";\n\n  if (geo.features === undefined) {\n    geo.features = {};\n  }\n\n  if (!(category in geo.features)) {\n    geo.features[category] = {};\n  }\n\n  // TODO Add warning if the name already exists\n  geo.features[category][name] = func;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create new instance of the renderer\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.createFeature  = function (name, layer, renderer, arg) {\n  \"use strict\";\n\n  var category = renderer.api(),\n      options = {\"layer\": layer, \"renderer\": renderer};\n  if (category in geo.features && name in geo.features[category]) {\n    if (arg !== undefined) {\n      $.extend(true, options, arg);\n    }\n    return geo.features[category][name](options);\n  }\n  return null;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Register a new layer type\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.registerLayer = function (name, func) {\n  \"use strict\";\n\n  if (geo.layers === undefined) {\n    geo.layers = {};\n  }\n\n  geo.layers[name] = func;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create new instance of the layer\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.createLayer = function (name, map, arg) {\n  \"use strict\";\n\n  /// Default renderer is vgl\n  var options = {\"map\": map, \"renderer\": \"vgl\"},\n      layer = null;\n\n  if (name in geo.layers) {\n    if (arg !== undefined) {\n      $.extend(true, options, arg);\n    }\n    layer = geo.layers[name](options);\n    layer._init();\n    return layer;\n  } else {\n    return null;\n  }\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Register a new widget type\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.registerWidget = function (category, name, func) {\n  \"use strict\";\n\n  if (geo.widgets === undefined) {\n    geo.widgets = {};\n  }\n\n  if (!(category in geo.widgets)) {\n    geo.widgets[category] = {};\n  }\n\n  // TODO Add warning if the name already exists\n  geo.widgets[category][name] = func;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create new instance of the widget\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.createWidget  = function (name, layer, renderer, arg) {\n  \"use strict\";\n\n  var category = renderer.api(),\n      options = {\"layer\": layer, \"renderer\": renderer};\n  if (category in geo.widgets && name in geo.widgets[category]) {\n    if (arg !== undefined) {\n      $.extend(true, options, arg);\n    }\n    return geo.widgets[category][name](options);\n  }\n  return null;\n};\n\n// Add a polyfill for window.requestAnimationFrame.\nif (!window.requestAnimationFrame) {\n  window.requestAnimationFrame = function (func) {\n    \"use strict\";\n\n    window.setTimeout(func, 15);\n  };\n}\n\n// Add a polyfill for Math.log2\nif (!Math.log2) {\n  Math.log2 = function () {\n    \"use strict\";\n\n    return Math.log.apply(Math, arguments) / Math.LN2;\n  };\n}\n","/*global geo*/\n\ngeo.version = \"0.1.0\";\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2, bitwise: true*/\n\n/*global vgl, gl, ogs, vec3, vec4, mat4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Wrap GL enums. Currently to get values of the enums we need to create\n * or access the context.\n *\n * Using enums from here:\n * https://github.com/toji/dart-gl-enums/blob/master/lib/gl_enums.dart\n *\n * @class\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.GL = {\n   ColorBufferBit : 0x00004000,\n   DepthBufferBit : 0x00000100\n};","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class timestamp\n *\n * @class\n * @returns {vgl.timestamp}\n */\n//////////////////////////////////////////////////////////////////////////////\nvar m_globalModifiedTime = 0;\n\nvgl.timestamp = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.timestamp)) {\n    return new vgl.timestamp();\n  }\n\n  var m_modifiedTime = 0;\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update modified time\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.modified = function() {\n    ++m_globalModifiedTime;\n    m_modifiedTime = m_globalModifiedTime;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get modified time\n   *\n   * @returns {number}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.getMTime = function() {\n    return m_modifiedTime;\n  };\n};\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class object\n *\n * @class\n * @returns {vgl.object}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.object = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.object)) {\n    return new vgl.object();\n  }\n\n  /** @private */\n  var m_modifiedTime = vgl.timestamp();\n  m_modifiedTime.modified();\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Mark the object modified\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.modified = function() {\n    m_modifiedTime.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return modified time of the object\n   *\n   * @returns {*}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.getMTime = function() {\n    return m_modifiedTime.getMTime();\n  };\n\n  return this;\n};","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class event\n *\n * @class event\n * @returns {vgl.event}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.event = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.event)) {\n    return new vgl.event();\n  }\n  vgl.object.call(this);\n\n  return this;\n};\n\ninherit(vgl.event, vgl.object);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n *  types\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.event.keyPress = \"vgl.event.keyPress\";\nvgl.event.mousePress = \"vgl.event.mousePress\";\nvgl.event.mouseRelease = \"vgl.event.mouseRelease\";\nvgl.event.contextMenu = \"vgl.event.contextMenu\";\nvgl.event.configure = \"vgl.event.configure\";\nvgl.event.enable = \"vgl.event.enable\";\nvgl.event.mouseWheel = \"vgl.event.mouseWheel\";\nvgl.event.keyRelease = \"vgl.event.keyRelease\";\nvgl.event.middleButtonPress = \"vgl.event.middleButtonPress\";\nvgl.event.startInteraction = \"vgl.event.startInteraction\";\nvgl.event.enter = \"vgl.event.enter\";\nvgl.event.rightButtonPress = \"vgl.event.rightButtonPress\";\nvgl.event.middleButtonRelease = \"vgl.event.middleButtonRelease\";\nvgl.event.char = \"vgl.event.char\";\nvgl.event.disable = \"vgl.event.disable\";\nvgl.event.endInteraction = \"vgl.event.endInteraction\";\nvgl.event.mouseMove = \"vgl.event.mouseMove\";\nvgl.event.mouseOut = \"vgl.event.mouseOut\";\nvgl.event.expose = \"vgl.event.expose\";\nvgl.event.timer = \"vgl.event.timer\";\nvgl.event.leftButtonPress = \"vgl.event.leftButtonPress\";\nvgl.event.leave = \"vgl.event.leave\";\nvgl.event.rightButtonRelease = \"vgl.event.rightButtonRelease\";\nvgl.event.leftButtonRelease = \"vgl.event.leftButtonRelease\";\nvgl.event.click = \"vgl.event.click\";\nvgl.event.dblClick = \"vgl.event.dblClick\";\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class boundingObject\n *\n * @class\n * @return {vgl.boundingObject}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.boundingObject = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.boundingObject)) {\n    return new vgl.boundingObject();\n  }\n  vgl.object.call(this);\n\n  /** @private */\n  var m_bounds = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0],\n      m_computeBoundsTimestamp = vgl.timestamp(),\n      m_boundsDirtyTimestamp = vgl.timestamp();\n\n  m_computeBoundsTimestamp.modified();\n  m_boundsDirtyTimestamp.modified();\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get current bounds of the object\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.bounds = function() {\n    return m_bounds;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Check if bounds are valid\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.hasValidBounds = function(bounds) {\n    if (bounds[0] == Number.MAX_VALUE ||\n        bounds[1] == -Number.MAX_VALUE ||\n        bounds[2] == Number.MAX_VALUE ||\n        bounds[3] == -Number.MAX_VALUE ||\n        bounds[4] == Number.MAX_VALUE ||\n        bounds[5] == -Number.MAX_VALUE)  {\n      return false;\n    }\n\n    return true;\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set current bounds of the object\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setBounds = function(minX, maxX, minY, maxY, minZ, maxZ) {\n    if (!this.hasValidBounds([minX, maxX, minY, maxY, minZ, maxZ])) {\n      return;\n    }\n\n    m_bounds[0] = minX;\n    m_bounds[1] = maxX;\n    m_bounds[2] = minY;\n    m_bounds[3] = maxY;\n    m_bounds[4] = minZ;\n    m_bounds[5] = maxZ;\n\n    this.modified();\n    m_computeBoundsTimestamp.modified();\n\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Reset bounds to default values\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.resetBounds = function() {\n    m_bounds[0] = Number.MAX_VALUE;\n    m_bounds[1] = -Number.MAX_VALUE;\n    m_bounds[2] = Number.MAX_VALUE;\n    m_bounds[3] = -Number.MAX_VALUE;\n    m_bounds[4] = Number.MAX_VALUE;\n    m_bounds[5] = -Number.MAX_VALUE;\n\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute bounds of the object\n   *\n   * Should be implemented by the concrete class\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeBounds = function() {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return bounds computation modification time\n   *\n   * @returns {vgl.timestamp}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeBoundsTimestamp = function() {\n    return m_computeBoundsTimestamp;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return bounds dirty timestamp\n   *\n   * @returns {vgl.timestamp}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.boundsDirtyTimestamp = function() {\n    return m_boundsDirtyTimestamp;\n  };\n\n  this.resetBounds();\n\n  return this;\n};\n\nvgl.boundingObject.ReferenceFrame = {\n  \"Relative\" : 0,\n  \"Absolute\" : 1\n};\n\ninherit(vgl.boundingObject, vgl.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class node\n *\n * @class\n * @returns {vgl.node}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.node = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.node)) {\n    return new vgl.node();\n  }\n  vgl.boundingObject.call(this);\n\n  /** @private */\n  var m_parent = null,\n      m_material = null,\n      m_visible = true,\n      m_overlay = false;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Accept visitor for scene traversal\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.accept = function(visitor) {\n    visitor.visit(this);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return active material used by the node\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.material = function() {\n    return m_material;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set material to be used the node\n   *\n   * @param material\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setMaterial = function(material) {\n    if (material !== m_material) {\n      m_material = material;\n      this.modified();\n      return true;\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Check if the node is visible or node\n   *\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.visible = function() {\n    return m_visible;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Turn ON/OFF visibility of the node\n   *\n   * @param flag\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setVisible = function(flag) {\n    if (flag !== m_visible) {\n      m_visible = flag;\n      this.modified();\n      return true;\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return current parent of the node\n   *\n   * @returns {null}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.parent = function() {\n    return m_parent;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set parent of the node\n   *\n   * @param parent\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setParent = function(parent) {\n    if (parent !== m_parent) {\n      if (m_parent !== null) {\n        m_parent.removeChild(this);\n      }\n      m_parent = parent;\n      this.modified();\n      return true;\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Check if the node is an overlay node\n   *\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.overlay = function() {\n    return m_overlay;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set if the node is an overlay node or not\n   *\n   * @param flag\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setOverlay = function(flag) {\n    if (m_overlay !== flag) {\n      m_overlay = flag;\n      this.modified();\n      return true;\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /*\n   * Traverse parent and their parent and so on\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.ascend = function(visitor) {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Traverse children\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.traverse = function(visitor) {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Mark that the bounds are modified\n   *\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.boundsModified = function() {\n    // @todo Implement this\n    this.boundsDirtyTimestamp().modified();\n\n    if (m_parent !== null) {\n      m_parent.boundsModified();\n    }\n  };\n\n  return this;\n};\n\ninherit(vgl.node, vgl.boundingObject);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class groupNode\n *\n * @class\n * @returns {vgl.groupNode}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.groupNode = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.groupNode)) {\n    return new vgl.groupNode();\n  }\n  vgl.node.call(this);\n\n  var m_children = [];\n\n  // Reference to base class methods\n  this.b_setVisible = this.setVisible;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Turn on / off visibility\n   *\n   * @param flag\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setVisible = function(flag) {\n    var i;\n\n    if (this.b_setVisible(flag) !== true) {\n      return false;\n    }\n\n    for (i = 0; i < m_children.length; ++i) {\n      m_children[i].setVisible(flag);\n    }\n\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Make the incoming node as child of the group node\n   *\n   * @param childNode\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.addChild = function(childNode) {\n    if (childNode instanceof vgl.node) {\n      if (m_children.indexOf(childNode) === -1) {\n        childNode.setParent(this);\n        m_children.push(childNode);\n        this.boundsDirtyTimestamp().modified();\n        return true;\n      }\n      return false;\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Remove parent-child relationship between the group and incoming node\n   *\n   * @param childNode\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.removeChild = function(childNode) {\n    if (childNode.parent() === this) {\n      var index = m_children.indexOf(childNode);\n      m_children.splice(index, 1);\n      this.boundsDirtyTimestamp().modified();\n      return true;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Remove parent-child relationship between child nodes and the group node\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.removeChildren = function() {\n    var i;\n    for (i = 0; i < m_children.length; ++i) {\n      this.removeChild(m_children[i]);\n    }\n\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return children of this group node\n   *\n   * @returns {Array}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.children = function() {\n    return m_children;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return true if this group node has node as a child, false otherwise.\n   *\n   * @param node\n   * @returns {bool}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.hasChild = function(node) {\n    var i = 0, child = false;\n\n    for (i = 0; i < m_children.length; i++) {\n      if (m_children[i] === node) {\n        child = true;\n        break;\n      }\n    }\n\n    return child;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Accept a visitor and traverse the scene tree\n   *\n   * @param visitor\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.accept = function(visitor) {\n    visitor.visit(this);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Traverse the scene\n   *\n   * @param visitor\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.traverse = function(visitor) {\n    switch (visitor.type()) {\n      case visitor.UpdateVisitor:\n        this.traverseChildrenAndUpdateBounds(visitor);\n        break;\n      case visitor.CullVisitor:\n        this.traverseChildren(visitor);\n        break;\n      default:\n        break;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Traverse all of the children and update the bounds for each\n   *\n   * @param visitor\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.traverseChildrenAndUpdateBounds = function(visitor) {\n    var i;\n\n    if (this.m_parent && this.boundsDirtyTimestamp().getMTime() >\n      this.computeBoundsTimestamp().getMTime()) {\n      // Flag parents bounds dirty.\n      this.m_parent.boundsDirtyTimestamp.modified();\n    }\n\n    this.computeBounds();\n\n    if (visitor.mode() === visitor.TraverseAllChildren) {\n      for (i = 0; i < m_children.length(); ++i) {\n        m_children[i].accept(visitor);\n        this.updateBounds(m_children[i]);\n      }\n    }\n\n    this.computeBoundsTimestamp().modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Traverse children of the group node\n   *\n   * @param visitor\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.traverseChildren = function(visitor) {\n    var i;\n\n    if (visitor.mode() === vgl.vesVisitor.TraverseAllChildren) {\n      for (i = 0; i < m_children.length(); ++i) {\n        m_children[i].accept(visitor);\n      }\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute bounds for the group node\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeBounds = function() {\n    var i = 0;\n\n    if (this.computeBoundsTimestamp().getMTime() >\n        this.boundsDirtyTimestamp().getMTime()) {\n      return;\n    }\n\n    for (i = 0; i < m_children.length; ++i) {\n      this.updateBounds(m_children[i]);\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update bounds for the group node\n   *\n   * This method is used internally to update bounds of the group node by\n   * traversing each of its child.\n   *\n   * @param child\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.updateBounds = function(child) {\n    // FIXME: This check should not be required and possibly is incorrect\n    if (child.overlay()) {\n      return;\n    }\n\n    // Make sure that child bounds are upto date\n    child.computeBounds();\n\n    var bounds = this.bounds(),\n        childBounds = child.bounds(),\n        istep = 0,\n        jstep = 0,\n        i;\n\n    for (i = 0; i < 3; ++i) {\n      istep = i * 2;\n      jstep = i * 2 + 1;\n      if (childBounds[istep] < bounds[istep]) {\n        bounds[istep] = childBounds[istep];\n      }\n      if (childBounds[jstep] > bounds[jstep]) {\n        bounds[jstep] = childBounds[jstep];\n      }\n    }\n\n    this.setBounds(bounds[0], bounds[1], bounds[2], bounds[3],\n                   bounds[4], bounds[5]);\n  };\n\n  return this;\n};\n\ninherit(vgl.groupNode, vgl.node);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec3, vec4, mat4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class actor\n *\n * @class\n * @returns {vgl.actor}\n */\n////////////////////////////////////////////////////////////////////////////\nvgl.actor = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.actor)) {\n    return new vgl.actor();\n  }\n  vgl.node.call(this);\n\n  /** @private */\n  var m_transformMatrix = mat4.create(),\n      m_referenceFrame = vgl.boundingObject.ReferenceFrame.Relative,\n      m_mapper = null;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get transformation matrix used by the actor\n   *\n   * @returns {mat4}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.matrix = function() {\n    return m_transformMatrix;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set transformation matrix for the actor\n   *\n   * @param {mat4} 4X4 transformation matrix\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setMatrix = function(tmatrix) {\n    if (tmatrix !== m_transformMatrix) {\n      m_transformMatrix = tmatrix;\n      this.modified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get reference frame for the transformations\n   *\n   * @returns {String} Possible values are Absolute or Relative\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.referenceFrame = function() {\n    return m_referenceFrame;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set reference frame for the transformations\n   *\n   * @param {vgl.boundingObject.ReferenceFrame}\n   * referenceFrame Possible values are (Absolute | Relative)\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setReferenceFrame = function(referenceFrame) {\n    if (referenceFrame !== m_referenceFrame) {\n      m_referenceFrame = referenceFrame;\n      this.modified();\n      return true;\n    }\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return mapper where actor gets it behavior and data\n   *\n   * @returns {vgl.mapper}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.mapper = function() {\n    return m_mapper;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Connect an actor to its data source\n   *\n   * @param {vgl.mapper}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setMapper = function(mapper) {\n    if (mapper !== m_mapper) {\n      m_mapper = mapper;\n      this.boundsModified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @todo\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.accept = function(visitor) {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @todo\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.ascend = function(visitor) {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute object space to world space matrix\n   * @todo\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeLocalToWorldMatrix = function(matrix, visitor) {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute world space to object space matrix\n   * @todo\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeWorldToLocalMatrix = function(matrix, visitor) {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute actor bounds\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeBounds = function() {\n    if (m_mapper === null || m_mapper === undefined) {\n      this.resetBounds();\n      return;\n    }\n\n    var computeBoundsTimestamp = this.computeBoundsTimestamp(),\n        mapperBounds, minPt, maxPt, actorMatrix, newBounds;\n\n    if (this.boundsDirtyTimestamp().getMTime() > computeBoundsTimestamp.getMTime() ||\n      m_mapper.boundsDirtyTimestamp().getMTime() > computeBoundsTimestamp.getMTime()) {\n\n      m_mapper.computeBounds();\n      mapperBounds = m_mapper.bounds();\n\n      minPt = [mapperBounds[0], mapperBounds[2], mapperBounds[4]];\n      maxPt = [mapperBounds[1], mapperBounds[3], mapperBounds[5]];\n\n      vec3.transformMat4(minPt, minPt, m_transformMatrix);\n      vec3.transformMat4(maxPt, maxPt, m_transformMatrix);\n\n      newBounds = [\n        minPt[0] > maxPt[0] ? maxPt[0] : minPt[0],\n        minPt[0] > maxPt[0] ? minPt[0] : maxPt[0],\n        minPt[1] > maxPt[1] ? maxPt[1] : minPt[1],\n        minPt[1] > maxPt[1] ? minPt[1] : maxPt[1],\n        minPt[2] > maxPt[2] ? maxPt[2] : minPt[2],\n        minPt[2] > maxPt[2] ? minPt[2] : maxPt[2]\n      ];\n\n      this.setBounds(newBounds[0], newBounds[1],\n                     newBounds[2], newBounds[3],\n                     newBounds[4], newBounds[5]);\n\n      computeBoundsTimestamp.modified();\n    }\n  };\n\n  return this;\n};\n\ninherit(vgl.actor, vgl.node);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Freeze javascript object\n *\n * @param obj\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.freezeObject = function(obj) {\n  'use strict';\n\n  /**\n   * Freezes an object, using Object.freeze if available, otherwise returns\n   * the object unchanged.  This function should be used in setup code to prevent\n   * errors from completely halting JavaScript execution in legacy browsers.\n   *\n   * @exports freezeObject\n   */\n  var freezedObject = Object.freeze(obj);\n  if (typeof freezedObject === 'undefined') {\n    freezedObject = function(o) {\n      return o;\n    };\n  }\n\n  return freezedObject;\n};\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Returns the first parameter if not undefined,\n * otherwise the second parameter.\n *\n * @class\n * @returns {vgl.defaultValue}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.defaultValue = function(a, b) {\n  'use strict';\n\n  if (typeof a !== 'undefined') {\n    return a;\n  }\n  return b;\n};\n\nvgl.defaultValue.EMPTY_OBJECT = vgl.freezeObject({});\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $, Uint16Array*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of geojson reader\n *\n * This contains code that reads a geoJSON file and produces rendering\n * primitives from it.\n *\n * @class\n * @returns {vgl.geojsonReader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.geojsonReader = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.geojsonReader)) {\n    return new vgl.geojsonReader();\n  }\n\n  var m_scalarFormat = \"none\",\n      m_scalarRange = null;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Read scalars\n   *\n   * @param coordinates\n   * @param geom\n   * @param size_estimate\n   * @param idx\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.readScalars = function(coordinates, geom, size_estimate, idx) {\n    var array = null,\n        s = null,\n        r  = null,\n        g = null,\n        b = null;\n\n    if (this.m_scalarFormat === \"values\" && coordinates.length === 4)\n    {\n      s = coordinates[3];\n      array = geom.sourceData(vgl.vertexAttributeKeys.Scalar);\n\n      if (!array) {\n        array = new vgl.sourceDataSf();\n        if (this.m_scalarRange) {\n          array.setScalarRange(this.m_scalarRange[0],this.m_scalarRange[1]);\n        }\n        if (size_estimate !== undefined) {\n          //array.length = size_estimate; //no, slow on Safari\n          array.data().length = size_estimate;\n        }\n        geom.addSource(array);\n      }\n      if (size_estimate === undefined) {\n        array.pushBack(s);\n      } else {\n        array.insertAt(idx, s);\n      }\n    } else if (this.m_scalarFormat === \"rgb\" && coordinates.length === 6) {\n      array = geom.sourceData(vgl.vertexAttributeKeys.Color);\n      if (!array) {\n        array = new vgl.sourceDataC3fv();\n        if (size_estimate !== undefined) {\n          array.length = size_estimate*3;\n        }\n        geom.addSource(array);\n      }\n      r = coordinates[3];\n      g = coordinates[4];\n      b = coordinates[5];\n      if (size_estimate === undefined) {\n        array.pushBack([r,g,b]);\n      } else {\n        array.insertAt(idx, [r,g,b]);\n      }\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Read point data\n   *\n   * @param coordinates\n   * @returns {vgl.geometryData}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.readPoint = function(coordinates) {\n    var geom = new vgl.geometryData(),\n        vglpoints = new vgl.points(),\n        vglcoords = new vgl.sourceDataP3fv(),\n        indices = new Uint16Array(1),\n        x = null,\n        y = null,\n        z = null,\n        i = null;\n\n    geom.addSource(vglcoords);\n    for (i = 0; i < 1; i++) {\n      indices[i] = i;\n\n      x = coordinates[0];\n      y = coordinates[1];\n      z = 0.0;\n      if (coordinates.length>2) {\n        z = coordinates[2];\n      }\n\n      //console.log(\"read \" + x + \",\" + y + \",\" + z);\n      vglcoords.pushBack([x,y,z]);\n\n      //attributes\n      this.readScalars(coordinates, geom);\n    }\n\n    vglpoints.setIndices(indices);\n    geom.addPrimitive(vglpoints);\n    geom.setName(\"aPoint\");\n    return geom;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Read multipoint data\n   *\n   * @param coordinates\n   * @returns {vgl.geometryData}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.readMultiPoint = function(coordinates) {\n    var geom = new vgl.geometryData(),\n        vglpoints = new vgl.points(),\n        vglcoords = new vgl.sourceDataP3fv(),\n        indices = new Uint16Array(coordinates.length),\n        pntcnt = 0,\n        estpntcnt = coordinates.length,\n        x = null,\n        y = null,\n        z = null,\n        i;\n\n    //preallocate with size estimate\n    vglcoords.data().length = estpntcnt * 3; //x,y,z\n\n    for (i = 0; i < coordinates.length; i++) {\n      indices[i] = i;\n      x = coordinates[i][0];\n      y = coordinates[i][1];\n      z = 0.0;\n      if (coordinates[i].length>2) {\n        z = coordinates[i][2];\n      }\n\n      //console.log(\"read \" + x + \",\" + y + \",\" + z);\n      vglcoords.insertAt(pntcnt, [x,y,z]);\n\n      //attributes\n      this.readScalars(coordinates[i], geom, estpntcnt, pntcnt);\n\n      pntcnt++;\n    }\n\n    vglpoints.setIndices(indices);\n    geom.addPrimitive(vglpoints);\n    geom.addSource(vglcoords);\n    geom.setName(\"manyPoints\");\n    return geom;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Read line string data\n   *\n   * @param coordinates\n   * @returns {vgl.geometryData}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.readLineString = function(coordinates) {\n    var geom = new vgl.geometryData(),\n        vglline = new vgl.lineStrip(),\n        vglcoords = new vgl.sourceDataP3fv(),\n        indices = [],\n        i = null,\n        x = null,\n        y = null,\n        z = null;\n\n    vglline.setIndicesPerPrimitive(coordinates.length);\n\n    for (i = 0; i < coordinates.length; i++) {\n      indices.push(i);\n      x = coordinates[i][0];\n      y = coordinates[i][1];\n      z = 0.0;\n      if (coordinates[i].length>2) {\n        z = coordinates[i][2];\n      }\n\n      //console.log(\"read \" + x + \",\" + y + \",\" + z);\n      vglcoords.pushBack([x,y,z]);\n\n      //attributes\n      this.readScalars(coordinates[i], geom);\n    }\n\n    vglline.setIndices(indices);\n    geom.addPrimitive(vglline);\n    geom.addSource(vglcoords);\n    geom.setName(\"aLineString\");\n    return geom;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Read multi line string\n   *\n   * @param coordinates\n   * @returns {vgl.geometryData}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.readMultiLineString = function(coordinates) {\n    var geom = new vgl.geometryData(),\n        vglcoords = new vgl.sourceDataP3fv(),\n        pntcnt = 0,\n        //lines should be at least 2 verts long, underest OK\n        estpntcnt = coordinates.length * 2,\n        i = null,\n        j = null,\n        x = null,\n        y = null,\n        z = null,\n        indices = null,\n        vglline = null,\n        thisLineLength = null;\n\n    // Preallocate with size estimate\n    vglcoords.data().length = estpntcnt*3; //x,y,z\n\n    for (j = 0; j < coordinates.length; j++) {\n      indices = [];\n      //console.log(\"getting line \" + j);\n      vglline = new vgl.lineStrip();\n      thisLineLength = coordinates[j].length;\n      vglline.setIndicesPerPrimitive(thisLineLength);\n      for (i = 0; i < thisLineLength; i++) {\n        indices.push(pntcnt);\n        x = coordinates[j][i][0];\n        y = coordinates[j][i][1];\n        z = 0.0;\n        if (coordinates[j][i].length>2) {\n          z = coordinates[j][i][2];\n        }\n\n        //console.log(\"read \" + x + \",\" + y + \",\" + z);\n        vglcoords.insertAt(pntcnt, [x,y,z]);\n\n        //attributes\n        this.readScalars(coordinates[j][i], geom, estpntcnt*2, pntcnt);\n\n        pntcnt++;\n      }\n\n      vglline.setIndices(indices);\n      geom.addPrimitive(vglline);\n    }\n\n    geom.setName(\"aMultiLineString\");\n    geom.addSource(vglcoords);\n    return geom;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Read polygon data\n   *\n   * @param coordinates\n   * @returns {vgl.geometryData}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.readPolygon = function(coordinates) {\n    //TODO: ignoring holes given in coordinates[1...]\n    //TODO: ignoring convex\n    //TODO: implement ear clipping in VGL instead of this to handle both\n    var geom = new vgl.geometryData(),\n        vglcoords = new vgl.sourceDataP3fv(),\n        x = null,\n        y = null,\n        z  = null,\n        thisPolyLength = coordinates[0].length,\n        vl = 1,\n        i = null,\n        indices = null,\n        vgltriangle = null;\n\n\n    for (i = 0; i < thisPolyLength; i++) {\n      x = coordinates[0][i][0];\n      y = coordinates[0][i][1];\n      z = 0.0;\n      if (coordinates[0][i].length>2) {\n        z = coordinates[0][i][2];\n      }\n\n      //console.log(\"read \" + x + \",\" + y + \",\" + z);\n      vglcoords.pushBack([x,y,z]);\n\n      //attributes\n      this.readScalars(coordinates[0][i], geom);\n\n      if (i > 1) {\n        //console.log(\"Cutting new triangle 0,\"+ vl+ \",\"+ i);\n        indices = new Uint16Array([0,vl,i]);\n        vgltriangle = new vgl.triangles();\n        vgltriangle.setIndices(indices);\n        geom.addPrimitive(vgltriangle);\n        vl = i;\n      }\n    }\n\n    geom.setName(\"POLY\");\n    geom.addSource(vglcoords);\n    return geom;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Read multi polygon data\n   *\n   * @param coordinates\n   * @returns {vgl.geometryData}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.readMultiPolygon = function(coordinates) {\n    var geom = new vgl.geometryData(),\n        vglcoords = new vgl.sourceDataP3fv(),\n        ccount = 0,\n        numPolys = coordinates.length,\n        pntcnt = 0,\n        estpntcnt = numPolys* 3, // assume triangles, underest is fine\n        vgltriangle = new vgl.triangles(),\n        indexes = [],\n        i = null,\n        j = null,\n        x = null,\n        y = null,\n        z  = null,\n        thisPolyLength = null,\n        vf = null,\n        vl = null,\n        flip = null,\n        flipped = false,\n        tcount = 0;\n\n\n    //var time1 = new Date().getTime()\n    //var a = 0;\n    //var b = 0;\n    //var c = 0;\n    //var d = 0;\n\n    //preallocate with size estimate\n    vglcoords.data().length = numPolys*3; //x,y,z\n    for (j = 0; j < numPolys; j++) {\n      //console.log(\"getting poly \" + j);\n\n      thisPolyLength = coordinates[j][0].length;\n      vf = ccount;\n      vl = ccount+1;\n      flip = [false,false,false];\n      for (i = 0; i < thisPolyLength; i++) {\n        //var timea = new Date().getTime()\n\n        x = coordinates[j][0][i][0];\n        y = coordinates[j][0][i][1];\n        z = 0.0;\n        if (coordinates[j][0][i].length>2) {\n          z = coordinates[j][0][i][2];\n        }\n        flipped = false;\n        if (x > 180) {\n          flipped = true;\n          x = x - 360;\n        }\n        if (i === 0) {\n          flip[0] = flipped;\n        } else {\n          flip[1+(i-1)%2] = flipped;\n        }\n        //var timeb = new Date().getTime();\n        //console.log(\"read \" + x + \",\" + y + \",\" + z);\n\n        vglcoords.insertAt(pntcnt, [x,y,z]);\n        //var timec = new Date().getTime();\n\n        //attributes\n        this.readScalars(coordinates[j][0][i], geom, estpntcnt, pntcnt);\n        pntcnt++;\n        //var timed = new Date().getTime()\n\n        if (i > 1) {\n          //if (vl < 50) {\n            //console.log(\"Cutting new triangle \" + tcount + \":\" + vf + \",\" + vl + \",\" + ccount);\n            //console.log(indexes);\n          //}\n          if (flip[0] === flip[1] && flip[1] === flip[2]) {\n              //indexes = indexes.concat([vf,vl,ccount]); //no, very slow in Safari\n              indexes[tcount*3+0] = vf\n              indexes[tcount*3+1] = vl\n              indexes[tcount*3+2] = ccount\n              tcount++;\n          }\n          //else {\n          //  //TODO: duplicate triangles that straddle boundary on either side\n          //}\n\n          vl = ccount;\n        }\n        ccount++;\n        //var timee = new Date().getTime()\n        //a = a + (timeb-timea)\n        //b = b + (timec-timeb)\n        //c = c + (timed-timec)\n        //d = d + (timee-timed)\n      }\n    }\n    vgltriangle.setIndices(indexes);\n    geom.addPrimitive(vgltriangle);\n\n    //console.log(\"NUMPOLYS \" + pntcnt);\n    //console.log(\"RMP: \", a, \",\", b, \",\", c, \",\", d)\n    //var time2 = new Date().getTime()\n\n    geom.setName(\"aMultiPoly\");\n    geom.addSource(vglcoords);\n    //var time3 = new Date().getTime()\n    //console.log(\"RMP: \", time2-time1, \",\", time3-time2)\n\n    return geom;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @param object\n   * @returns {*}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.readGJObjectInt = function(object) {\n    if (!object.hasOwnProperty('type')) {\n      //console.log(\"uh oh, not a geojson object\");\n      return null;\n    }\n\n    //look for properties type annotation\n    if (object.properties &&\n        object.properties.ScalarFormat &&\n        object.properties.ScalarFormat === \"values\") {\n      this.m_scalarFormat = \"values\";\n      if (object.properties.ScalarRange) {\n        this.m_scalarRange = object.properties.ScalarRange;\n      }\n    }\n    if (object.properties &&\n        object.properties.ScalarFormat &&\n        object.properties.ScalarFormat === \"rgb\") {\n      this.m_scalarFormat = \"rgb\";\n    }\n\n    //TODO: ignoring \"crs\" and \"bbox\" and misc meta data on all of these,\n    //best to handle as references into original probably\n    var ret,\n        type = object.type,\n        next = null,\n        nextset = null,\n        i = null;\n\n    switch (type) {\n      case \"Point\":\n        //console.log(\"parsed Point\");\n        ret = this.readPoint(object.coordinates);\n        break;\n      case \"MultiPoint\":\n        //console.log(\"parsed MultiPoint\");\n        ret = this.readMultiPoint(object.coordinates);\n        break;\n      case \"LineString\":\n        //console.log(\"parsed LineString\");\n        ret = this.readLineString(object.coordinates);\n        break;\n      case \"MultiLineString\":\n        //console.log(\"parsed MultiLineString\");\n        ret = this.readMultiLineString(object.coordinates);\n        break;\n      case \"Polygon\":\n        //console.log(\"parsed Polygon\");\n        ret = this.readPolygon(object.coordinates);\n        break;\n      case \"MultiPolygon\":\n        //console.log(\"parsed MultiPolygon\");\n        ret = this.readMultiPolygon(object.coordinates);\n        break;\n      case \"GeometryCollection\":\n        //console.log(\"parsed GeometryCollection\");\n        nextset = [];\n        for (i = 0; i < object.geometries.length; i++) {\n          next = this.readGJObject(object.geometries[i]);\n          nextset.push(next);\n        }\n        ret = nextset;\n        break;\n      case \"Feature\":\n        //console.log(\"parsed Feature\");\n        next = this.readGJObject(object.geometry);\n        ret = next;\n        break;\n      case \"FeatureCollection\":\n        //console.log(\"parsed FeatureCollection\");\n        nextset = [];\n        for (i = 0; i < object.features.length; i++) {\n          next = this.readGJObject(object.features[i]);\n          nextset.push(next);\n        }\n        ret = nextset;\n        break;\n      default:\n        console.log(\"Don't understand type \" + type);\n        ret = null;\n      break;\n    }\n    return ret;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @param object\n   * @returns {*}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.readGJObject = function(object) {\n    //var time1, time2;\n    var ret;\n    //time1 = new Date().getTime()\n    ret = this.readGJObjectInt(object);\n    //time2 = new Date().getTime()\n    //console.log(\"ELAPSED: \", time2-time1)\n    return ret;\n  };\n\n  /**\n   * Linearize geometries\n   *\n   * @param geoms\n   * @param geom\n   */\n  this.linearizeGeoms = function(geoms, geom) {\n    var i = null;\n\n    if( Object.prototype.toString.call( geom ) === '[object Array]' ) {\n      for (i = 0; i < geom.length; i++) {\n        this.linearizeGeoms(geoms, geom[i]);\n      }\n    }\n    else {\n     geoms.push(geom);\n   }\n };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Read geometries from geojson object\n   *\n   * @param object\n   * @returns {Array}\n   */\n ////////////////////////////////////////////////////////////////////////////\n this.readGeomObject = function(object) {\n    var geom,\n        geoms = [];\n\n    geom = this.readGJObject(object);\n    this.linearizeGeoms(geoms, geom);\n    return geoms;\n };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Given a buffer get rendering primitives\n   *\n   * @param buffer\n   * @returns {*}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.getPrimitives = function(buffer) {\n    //console.log(\"Parsing geoJSON\");\n    if (!buffer) {\n      return [];\n    }\n\n    var obj = JSON.parse(buffer),\n      geom = this.readGJObject(obj),\n      geoms = [];\n\n    this.m_scalarFormat = \"none\";\n    this.m_scalarRange = null;\n\n    this.linearizeGeoms(geoms, geom);\n\n    return { \"geoms\":geoms,\n             \"scalarFormat\":this.m_scalarFormat,\n             \"scalarRange\":this.m_scalarRange };\n  };\n\n  return this;\n};\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\nvgl.data = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.data)) {\n    return new vgl.data();\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return data type. Should be implemented by the derived class\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.type = function() {\n  };\n};\n\nvgl.data.raster = 0;\nvgl.data.point = 1;\nvgl.data.lineString = 2;\nvgl.data.polygon = 3;\nvgl.data.geometry = 10;","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, Uint16Array, gl, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Vertex attribute keys\n *\n * @type {{Position: number, Normal: number, TextureCoordinate: number,\n *         Color: number, Scalar: number}}\n */\n//////////////////////////////////////////////////////////////////////////////\nvar vertexAttributeKeys = {\n  \"Position\" : 0,\n  \"Normal\" : 1,\n  \"TextureCoordinate\" : 2,\n  \"Color\" : 3,\n  \"Scalar\" : 4\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class primitive\n *\n * @class\n * @return {vgl.primitive}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.primitive = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.primitive)) {\n    return new vgl.primitive();\n  }\n\n  /** @private */\n  var m_indicesPerPrimitive = 0,\n      m_primitiveType = 0,\n      m_indicesValueType = 0,\n      m_indices = null;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get indices of the primitive\n   *\n   * @returns {null}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.indices = function() {\n    return m_indices;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create indices array for the primitive\n   * @param type\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.createIndices = function(type) {\n    // TODO Check for the type\n    m_indices = new Uint16Array();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return the number of indices\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.numberOfIndices = function() {\n    return m_indices.length;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return size of indices in bytes\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.sizeInBytes = function() {\n    return m_indices.length * Uint16Array.BYTES_PER_ELEMENT;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /*\n   * Return primitive type g\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.primitiveType = function() {\n    return m_primitiveType;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set primitive type\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setPrimitiveType = function(type) {\n    m_primitiveType = type;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return count of indices that form a primitives\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.indicesPerPrimitive = function() {\n    return m_indicesPerPrimitive;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set count of indices that form a primitive\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setIndicesPerPrimitive = function(count) {\n    m_indicesPerPrimitive = count;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return indices value type\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.indicesValueType = function() {\n    return m_indicesValueType;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set indices value type\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setIndicesValueType = function(type) {\n    m_indicesValueType = type;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set indices from a array\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setIndices = function(indicesArray) {\n    // TODO Check for the type\n    m_indices = new Uint16Array(indicesArray);\n  };\n\n  return this;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class triangleStrip\n *\n * @returns {vgl.triangleStrip}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.triangleStrip = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.triangleStrip)) {\n    return new vgl.triangleStrip();\n  }\n\n  vgl.primitive.call(this);\n\n  this.setPrimitiveType(gl.TRIANGLE_STRIP);\n  this.setIndicesValueType(gl.UNSIGNED_SHORT);\n  this.setIndicesPerPrimitive(3);\n\n  return this;\n};\n\ninherit(vgl.triangleStrip, vgl.primitive);\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class triangles\n *\n * @returns {vgl.triangles}\n */\n////////////////////////////////////////////////////////////////////////////\nvgl.triangles = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.triangles)) {\n    return new vgl.triangles();\n  }\n  vgl.primitive.call(this);\n\n  this.setPrimitiveType(gl.TRIANGLES);\n  this.setIndicesValueType(gl.UNSIGNED_SHORT);\n  this.setIndicesPerPrimitive(3);\n\n  return this;\n};\n\ninherit(vgl.triangles, vgl.primitive);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * create a instance of lines primitive type\n *\n * @returns {vgl.lines}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.lines = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.lines)) {\n    return new vgl.lines();\n  }\n  vgl.primitive.call(this);\n\n  this.setPrimitiveType(gl.LINES);\n  this.setIndicesValueType(gl.UNSIGNED_SHORT);\n  this.setIndicesPerPrimitive(2);\n\n  return this;\n};\ninherit(vgl.lines, vgl.primitive);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * create a instance of line strip primitive type\n *\n * @returns {vgl.lineStrip}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.lineStrip = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.lineStrip)) {\n    return new vgl.lineStrip();\n  }\n  vgl.primitive.call(this);\n\n  this.setPrimitiveType(gl.LINE_STRIP);\n  this.setIndicesValueType(gl.UNSIGNED_SHORT);\n  this.setIndicesPerPrimitive(2);\n\n  return this;\n};\ninherit(vgl.lineStrip, vgl.primitive);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class points\n *\n * @returns {vgl.points}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.points = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.points)) {\n    return new vgl.points();\n  }\n  vgl.primitive.call(this);\n\n  this.setPrimitiveType(gl.POINTS);\n  this.setIndicesValueType(gl.UNSIGNED_SHORT);\n  this.setIndicesPerPrimitive(1);\n\n  return this;\n};\n\ninherit(vgl.points, vgl.primitive);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class vertexDataP3f\n *\n * @returns {vgl.vertexDataP3f}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.vertexDataP3f = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.vertexDataP3f)) {\n    return new vgl.vertexDataP3f();\n  }\n\n  /** @private */\n  this.m_position = [];\n\n  return this;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class vertexDataP3N3f\n *\n * @class\n * @returns {vgl.vertexDataP3N3f}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.vertexDataP3N3f = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.vertexDataP3N3f)) {\n    return new vgl.vertexDataP3N3f();\n  }\n\n  this.m_position = [];\n  this.m_normal = [];\n\n  return this;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class vertexDataP3T3f\n *\n * @class\n * @returns {vgl.vertexDataP3T3f}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.vertexDataP3T3f = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.vertexDataP3T3f)) {\n    return new vgl.vertexDataP3T3f();\n  }\n\n  this.m_position = [];\n  this.m_texCoordinate = [];\n\n  return this;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class sourceData\n * @class\n * @returns {vgl.sourceData}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.sourceData = function(arg) {\n  'use strict';\n\n  if (!(this instanceof vgl.sourceData)) {\n    return new vgl.sourceData(arg);\n  }\n\n  arg = arg || {};\n  var m_attributesMap = {},\n      m_data = [],\n      m_name = arg.name || \"Source \" + new Date().toISOString(),\n\n      ////////////////////////////////////////////////////////////////////////////\n      /**\n       * Attribute data for the source\n       */\n      ////////////////////////////////////////////////////////////////////////////\n      vglAttributeData = function() {\n        // Number of components per group\n        // Type of data type (GL_FLOAT etc)\n        this.m_numberOfComponents = 0;\n            // Size of data type\n        this.m_dataType = 0;\n        this.m_dataTypeSize = 0;\n        // Specifies whether fixed-point data values should be normalized\n        // (true) or converted directly as fixed-point values (false)\n        // when they are accessed.\n        this.m_normalized = false;\n        // Strides for each attribute.\n        this.m_stride = 0;\n        // Offset\n        this.m_offset = 0;\n      };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return raw data for this source\n   *\n   * @returns {Array or Float32Array}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.data = function() {\n    return m_data;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n /**\n   * Return raw data for this source\n   *\n   * @returns {Array or Float32Array}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.getData = function() {\n    return data();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * If the raw data is not a Float32Array, convert it to one.  Then, return\n   * raw data for this source\n   *\n   * @returns {Float32Array}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.dataToFloat32Array = function () {\n    if (!(m_data instanceof Float32Array)) {\n      m_data = new Float32Array(m_data);\n    }\n    return m_data;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set data for this source\n   *\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setData = function(data) {\n    if (!(data instanceof Array)) {\n      console.log(\"[error] Requires array\");\n      return;\n    }\n    m_data = data.slice(0);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Add new attribute data to the source\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.addAttribute = function(key, dataType, sizeOfDataType, offset, stride,\n                               noOfComponents, normalized) {\n\n    if (!m_attributesMap.hasOwnProperty(key)) {\n      var newAttr = new vglAttributeData();\n      newAttr.m_dataType = dataType;\n      newAttr.m_dataTypeSize = sizeOfDataType;\n      newAttr.m_offset = offset;\n      newAttr.m_stride = stride;\n      newAttr.m_numberOfComponents = noOfComponents;\n      newAttr.m_normalized = normalized;\n      m_attributesMap[key] = newAttr;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return size of the source data\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.sizeOfArray = function() {\n    return Object.size(m_data);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return length of array\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.lengthOfArray = function() {\n    return m_data.length;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return size of the source data in bytes\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  /*\n    * TODO: code below is probably wrong.\n    *   Example:\n    *            format P3N3f\n    *            m_data = [ 1, 2, 3, 4, 5, 6 ]; // contains one vertex, one normal, m_data.length == 6\n    *\n    *       The inner loop computes:\n    *             sizeInBytes += 3 * 4; // for position\n    *             sizeInBytes += 3 * 4; // for normal\n    *\n    *        Then sizeInBytes *= 6; // m_data.length == 6\n    *        which gives sizeInBytes == 144 bytes when it should have been 4*6 = 24\n    */\n  this.sizeInBytes = function() {\n    var sizeInBytes = 0,\n        keys = this.keys(), i;\n\n    for (i = 0; i < keys.length(); ++i) {\n      sizeInBytes += this.numberOfComponents(keys[i])\n                     * this.sizeOfAttributeDataType(keys[i]);\n    }\n\n    sizeInBytes *= this.sizeOfArray();\n\n    return sizeInBytes;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Check if there is attribute exists of a given key type\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.hasKey = function(key) {\n    return m_attributesMap.hasOwnProperty(key);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return keys of all attributes\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.keys = function() {\n    return Object.keys(m_attributesMap);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return number of attributes of source data\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.numberOfAttributes = function() {\n    return Object.size(m_attributesMap);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return number of components of the attribute data\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.attributeNumberOfComponents = function(key) {\n    if (m_attributesMap.hasOwnProperty(key)) {\n      return m_attributesMap[key].m_numberOfComponents;\n    }\n\n    return 0;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return if the attribute data is normalized\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.normalized = function(key) {\n    if (m_attributesMap.hasOwnProperty(key)) {\n      return m_attributesMap[key].m_normalized;\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return size of the attribute data type\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.sizeOfAttributeDataType = function(key) {\n    if (m_attributesMap.hasOwnProperty(key)) {\n      return m_attributesMap[key].m_dataTypeSize;\n    }\n\n    return 0;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return attribute data type\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.attributeDataType = function(key) {\n    if (m_attributesMap.hasOwnProperty(key)) {\n      return m_attributesMap[key].m_dataType;\n    }\n\n    return undefined;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return attribute offset\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.attributeOffset = function(key) {\n    if (m_attributesMap.hasOwnProperty(key)) {\n      return m_attributesMap[key].m_offset;\n    }\n\n    return 0;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return attribute stride\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.attributeStride = function(key) {\n    if (m_attributesMap.hasOwnProperty(key)) {\n      return m_attributesMap[key].m_stride;\n    }\n\n    return 0;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Virtual function to insert new vertex data at the end\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.pushBack = function(vertexData) {\n    // Should be implemented by the base class\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Insert new data block to the raw data\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.insert = function(data) {\n    var i;\n\n    //m_data = m_data.concat(data); //no, slow on Safari\n    /* If we will are given a Float32Array and don't have any other data, use\n     * it directly. */\n    if (!m_data.length && data.length && data instanceof Float32Array) {\n      m_data = data;\n      return;\n    }\n    /* If our internal array is immutable and we will need to change it, create\n     * a regular mutable array from it. */\n    if (!m_data.slice && (m_data.length || !data.slice)) {\n      m_data = Array.prototype.slice.call(m_data);\n    }\n    if (!data.length) {\n      /* data is a singular value, so append it to our array */\n      m_data[m_data.length] = data;\n    } else {\n      /* We don't have any data currently, so it is faster to copy the data\n       * using slice. */\n      if (!m_data.length && data.slice) {\n        m_data = data.slice(0);\n      } else {\n        for (i = 0; i < data.length; i++) {\n          m_data[m_data.length] = data[i];\n        }\n      }\n    }\n  };\n\n  this.insertAt = function(index, data) {\n    var i;\n\n    if (!data.length) {\n      m_data[index] = data;\n    } else {\n      for (i = 0; i < data.length; i++) {\n        m_data[index*data.length+i] = data[i];\n      }\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return name of the source data\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.name = function() {\n    return m_name;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set name of the source data\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setName = function(name) {\n    m_name = name;\n  };\n\n\n  return this;\n};\n\n\nvgl.sourceDataAnyfv = function(size, key, arg) {\n  if (!(this instanceof vgl.sourceDataAnyfv)) {\n      return new vgl.sourceDataAnyfv(size, key, arg);\n    }\n\n    vgl.sourceData.call(this, arg);\n    this.addAttribute(key, gl.FLOAT,\n                      4, 0, size * 4, size, false);\n\n    this.pushBack = function(value) {\n      this.insert(value);\n    };\n\n    return this;\n};\ninherit(vgl.sourceDataAnyfv, vgl.sourceData);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class sourceDataP3T3f\n *\n * @returns {vgl.sourceDataP3T3f}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.sourceDataP3T3f = function(arg) {\n  'use strict';\n\n  if (!(this instanceof vgl.sourceDataP3T3f)) {\n    return new vgl.sourceDataP3T3f(arg);\n  }\n  vgl.sourceData.call(this, arg);\n\n  this.addAttribute(vgl.vertexAttributeKeys.Position, gl.FLOAT, 4, 0, 6 * 4, 3,\n                    false);\n  this.addAttribute(vgl.vertexAttributeKeys.TextureCoordinate, gl.FLOAT, 4, 12,\n                    6 * 4, 3, false);\n\n  this.pushBack = function(value) {\n    this.insert(value.m_position);\n    this.insert(value.m_texCoordinate);\n  };\n\n  return this;\n};\n\ninherit(vgl.sourceDataP3T3f, vgl.sourceData);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class sourceDataP3N3f\n *\n * @returns {vgl.sourceDataP3N3f}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.sourceDataP3N3f = function(arg) {\n  'use strict';\n\n  if (!(this instanceof vgl.sourceDataP3N3f)) {\n    return new vgl.sourceDataP3N3f(arg);\n  }\n\n  vgl.sourceData.call(this, arg);\n\n  this.addAttribute(vgl.vertexAttributeKeys.Position, gl.FLOAT, 4, 0, 6 * 4, 3,\n                    false);\n  this.addAttribute(vgl.vertexAttributeKeys.Normal, gl.FLOAT, 4, 12, 6 * 4, 3,\n                    false);\n\n  this.pushBack = function(value) {\n    this.insert(value.m_position);\n    this.insert(value.m_normal);\n  };\n\n  return this;\n};\n\ninherit(vgl.sourceDataP3N3f, vgl.sourceData);\n\n/////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class sourceDataP3fv\n *\n * @returns {vgl.sourceDataP3fv}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.sourceDataP3fv = function(arg) {\n  'use strict';\n\n  if (!(this instanceof vgl.sourceDataP3fv)) {\n    return new vgl.sourceDataP3fv(arg);\n  }\n\n  vgl.sourceData.call(this, arg);\n\n  this.addAttribute(vgl.vertexAttributeKeys.Position, gl.FLOAT, 4, 0, 3 * 4, 3,\n                    false);\n\n  this.pushBack = function(value) {\n    this.insert(value);\n  };\n\n  return this;\n};\n\ninherit(vgl.sourceDataP3fv, vgl.sourceData);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class sourceDataT2fv\n *\n * @returns {vgl.sourceDataT2fv}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.sourceDataT2fv = function(arg) {\n  'use strict';\n\n  if (!(this instanceof vgl.sourceDataT2fv)) {\n    return new vgl.sourceDataT2fv(arg);\n  }\n\n  vgl.sourceData.call(this, arg);\n\n  this.addAttribute(vgl.vertexAttributeKeys.TextureCoordinate, gl.FLOAT, 4, 0,\n                    2 * 4, 2, false);\n\n  this.pushBack = function(value) {\n    this.insert(value);\n  };\n\n  return this;\n};\n\ninherit(vgl.sourceDataT2fv, vgl.sourceData);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class sourceDataC3fv\n *\n * @returns {vgl.sourceDataC3fv}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.sourceDataC3fv = function(arg) {\n  'use strict';\n\n  if (!(this instanceof vgl.sourceDataC3fv)) {\n    return new vgl.sourceDataC3fv(arg);\n  }\n\n  vgl.sourceData.call(this, arg);\n\n  this.addAttribute(vgl.vertexAttributeKeys.Color, gl.FLOAT, 4, 0, 3 * 4, 3, false);\n\n  this.pushBack = function(value) {\n    this.insert(value);\n  };\n\n  return this;\n};\n\ninherit(vgl.sourceDataC3fv, vgl.sourceData);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class sourceDataSf meant to hold scalar float values\n *\n * @class\n * @returns {vgl.sourceDataSf}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.sourceDataSf = function(arg) {\n  'use strict';\n\n  if (!(this instanceof vgl.sourceDataSf)) {\n    return new vgl.sourceDataSf(arg);\n  }\n\n  var m_min = null,\n      m_max = null,\n      m_fixedmin = null,\n      m_fixedmax = null;\n\n  vgl.sourceData.call(this, arg);\n\n  this.addAttribute(vgl.vertexAttributeKeys.Scalar, gl.FLOAT, 4, 0, 4, 1, false);\n\n  this.pushBack = function(value) {\n    if (m_max === null || value > m_max) {\n      m_max = value;\n    }\n    if (m_min === null || value < m_min) {\n      m_min = value;\n    }\n    //this.insert(value); //no, slow on Safari\n    this.data()[this.data().length] = value;\n  };\n\n  this.insertAt = function(index, value) {\n    if (m_max === null || value > m_max) {\n      m_max = value;\n    }\n    if (m_min === null || value < m_min) {\n      m_min = value;\n    }\n    //call superclass ??\n    //vgl.sourceData.insertAt.call(this, index, value);\n    this.data()[index] = value;\n  };\n\n  this.scalarRange = function() {\n    if (m_fixedmin === null || m_fixedmax === null) {\n      return [m_min, m_max];\n    }\n\n    return [m_fixedmin, m_fixedmax];\n  };\n\n  this.setScalarRange = function(min, max) {\n    m_fixedmin = min;\n    m_fixedmax = max;\n  };\n\n  return this;\n};\n\ninherit(vgl.sourceDataSf, vgl.sourceData);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class sourceDataDf meant to hold data float values\n *\n * This source array is the best way to pass a array of floats to the shader\n * that has one entry for each of the vertices.\n *\n * @class\n * @returns {vgl.sourceDataDf}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.sourceDataDf = function(arg) {\n  'use strict';\n\n  if (!(this instanceof vgl.sourceDataDf)) {\n    return new vgl.sourceDataDf(arg);\n  }\n\n  var m_min = null,\n      m_max = null,\n      m_fixedmin = null,\n      m_fixedmax = null;\n\n  vgl.sourceData.call(this, arg);\n\n  this.addAttribute(vgl.vertexAttributeKeys.Scalar, gl.FLOAT,\n                    4, 0, 4, 1, false);\n\n  this.pushBack = function(value) {\n    this.data()[this.data().length] = value;\n  };\n\n  this.insertAt = function(index, value) {\n    this.data()[index] = value;\n  };\n\n  return this;\n};\n\ninherit(vgl.sourceDataDf, vgl.sourceData);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class geometryData\n *\n * @class\n * @returns {vgl.geometryData}\n */\n /////////////////////////////////////////////////////////////////////////////\nvgl.geometryData = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.geometryData)) {\n    return new vgl.geometryData();\n  }\n  vgl.data.call(this);\n\n  /** @private */\n  var m_name = \"\",\n      m_primitives = [],\n      m_sources = [],\n      m_bounds = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0],\n      m_computeBoundsTimestamp = vgl.timestamp(),\n      m_boundsDirtyTimestamp = vgl.timestamp();\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return type\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.type = function() {\n    return vgl.data.geometry;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return ID of the geometry data\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.name = function() {\n    return m_name;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set name of the geometry data\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setName = function(name) {\n    m_name = name;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Add new source\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.addSource = function(source, sourceName) {\n    // @todo Check if the incoming source has duplicate keys\n\n    if (sourceName !== undefined) {\n        source.setName(sourceName);\n    }\n    // NOTE This might not work on IE8 or lower\n    if (m_sources.indexOf(source) === -1) {\n      m_sources.push(source);\n\n      if (source.hasKey(vgl.vertexAttributeKeys.Position)) {\n        m_boundsDirtyTimestamp.modified();\n      }\n      return true;\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return source for a given index. Returns 0 if not found.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.source = function(index) {\n    if (index < m_sources.length) {\n      return m_sources[index];\n    }\n\n    return 0;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return number of sources\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.numberOfSources = function() {\n    return m_sources.length;\n  };\n\n  /**\n   * Return source data given a key\n   */\n  this.sourceData = function(key) {\n    var i;\n\n    for (i = 0; i < m_sources.length; ++i) {\n      if (m_sources[i].hasKey(key)) {\n        return m_sources[i];\n      }\n    }\n\n    return null;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Add new primitive\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.addPrimitive = function(primitive) {\n    m_primitives.push(primitive);\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return primitive for a given index. Returns null if not found.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.primitive = function(index) {\n    if (index < m_primitives.length) {\n      return m_primitives[index];\n    }\n\n    return null;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return number of primitives\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.numberOfPrimitives = function() {\n    return m_primitives.length;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return bounds [minX, maxX, minY, maxY, minZ, maxZ]\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.bounds = function() {\n    if (m_boundsDirtyTimestamp.getMTime() > m_computeBoundsTimestamp.getMTime()) {\n      this.computeBounds();\n    }\n    return m_bounds;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Reset bounds\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.resetBounds = function() {\n    m_bounds[0] = 0.0;\n    m_bounds[1] = 0.0;\n    m_bounds[2] = 0.0;\n    m_bounds[3] = 0.0;\n    m_bounds[4] = 0.0;\n    m_bounds[5] = 0.0;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set bounds\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setBounds = function(minX, maxX, minY, maxY, minZ, maxZ) {\n    m_bounds[0] = minX;\n    m_bounds[1] = maxX;\n    m_bounds[2] = minY;\n    m_bounds[3] = maxY;\n    m_bounds[4] = minZ;\n    m_bounds[5] = maxZ;\n\n    m_computeBoundsTimestamp.modified();\n\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute bounds\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeBounds = function() {\n    if (m_boundsDirtyTimestamp.getMTime() > m_computeBoundsTimestamp.getMTime()) {\n      var attr = vgl.vertexAttributeKeys.Position,\n          sourceData = this.sourceData(attr),\n          data = sourceData.data(),\n          numberOfComponents = sourceData.attributeNumberOfComponents(attr),\n          stride = sourceData.attributeStride(attr),\n          offset = sourceData.attributeOffset(attr),\n          sizeOfDataType = sourceData.sizeOfAttributeDataType(attr),\n          count = data.length,\n          ib = 0,\n          jb = 0,\n          value = null,\n          vertexIndex,\n          j;\n\n      // We advance by index, not by byte\n      stride /= sizeOfDataType;\n      offset /= sizeOfDataType;\n\n      this.resetBounds();\n\n      for (vertexIndex = offset; vertexIndex < count; vertexIndex += stride) {\n        for (j = 0; j < numberOfComponents; ++j) {\n          value = data[vertexIndex + j];\n          ib = j * 2;\n          jb = j * 2 + 1;\n\n          if (vertexIndex === offset) {\n            m_bounds[ib] = value;\n            m_bounds[jb] = value;\n          } else {\n            if (value > m_bounds[jb]) {\n              m_bounds[jb] = value;\n            }\n            if (value < m_bounds[ib]) {\n              m_bounds[ib] = value;\n            }\n          }\n        }\n      }\n\n      m_computeBoundsTimestamp.modified();\n    }\n  };\n\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Returns the vertex closest to a given position\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.findClosestVertex = function(point) {\n    var attr = vgl.vertexAttributeKeys.Position,\n        sourceData = this.sourceData(attr),\n        sizeOfDataType = sourceData.sizeOfAttributeDataType(attr),\n        numberOfComponents = sourceData.attributeNumberOfComponents(attr),\n        data = sourceData.data(),\n        stride = sourceData.attributeStride(attr) / sizeOfDataType,\n        offset = sourceData.attributeOffset(attr) / sizeOfDataType,\n        minDist = Number.MAX_VALUE,\n        minIndex = null,\n        vi, vPos, dx, dy, dz, dist, i;\n\n    // assume positions are always triplets\n    if (numberOfComponents !== 3) {\n      console.log('[warning] Find closest vertex assumes three' +\n        'component vertex ');\n    }\n\n    if (!point.z) {\n      point = {x:point.x, y:point.y, z:0};\n    }\n\n    for (vi = offset, i = 0; vi < data.length; vi += stride, i++) {\n      vPos = [data[vi],\n              data[vi + 1],\n              data[vi + 2]];\n\n      dx = vPos[0] - point.x;\n      dy = vPos[1] - point.y;\n      dz = vPos[2] - point.z;\n      dist = Math.sqrt(dx*dx + dy*dy + dz*dz);\n      if (dist < minDist) {\n        minDist = dist;\n        minIndex = i;\n      }\n    }\n    return minIndex;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Returns the requested vertex position\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.getPosition = function(index) {\n    var attr = vgl.vertexAttributeKeys.Position,\n        sourceData = this.sourceData(attr),\n        sizeOfDataType = sourceData.sizeOfAttributeDataType(attr),\n        numberOfComponents = sourceData.attributeNumberOfComponents(attr),\n        data = sourceData.data(),\n        stride = sourceData.attributeStride(attr) / sizeOfDataType,\n        offset = sourceData.attributeOffset(attr) / sizeOfDataType;\n\n    // assume positions are always triplets\n    if (numberOfComponents !== 3) {\n      console.log(\"[warning] getPosition assumes three component data\");\n    }\n\n    return [ data[offset + index*stride],\n             data[offset + index*stride + 1],\n             data[offset + index*stride + 2] ];\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Returns the scalar corresponding to a given vertex index\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.getScalar = function(index) {\n    var attr = vgl.vertexAttributeKeys.Scalar,\n        sourceData = this.sourceData(attr),\n        numberOfComponents, sizeOfDataType, data, stride, offset;\n\n    if (!sourceData) {\n      return null;\n    }\n\n    numberOfComponents = sourceData.attributeNumberOfComponents(attr);\n    sizeOfDataType = sourceData.sizeOfAttributeDataType(attr);\n    data = sourceData.data();\n    stride = sourceData.attributeStride(attr) / sizeOfDataType;\n    offset = sourceData.attributeOffset(attr) / sizeOfDataType;\n\n    //console.log(\"index for scalar is \" + index);\n    //console.log(\"offset for scalar is \" + offset);\n    //console.log(\"stride for scalar is \" + stride);\n\n    //console.log(\"have \" + data.length + \" scalars\");\n\n    if (index * stride + offset >= data.length) {\n      console.log(\"access out of bounds in getScalar\");\n    }\n\n    return data[index * stride + offset];\n  };\n\n  return this;\n};\n\ninherit(vgl.geometryData, vgl.data);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, gl, ogs, vec4, Float32Array, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class mapper\n *\n * @class\n * @returns {vgl.mapper}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.mapper = function(arg) {\n  'use strict';\n\n  if (!(this instanceof vgl.mapper)) {\n    return new vgl.mapper(arg);\n  }\n  vgl.boundingObject.call(this);\n\n  /** @private */\n  arg = arg || {};\n\n  var m_dirty = true,\n      m_color = [ 0.0, 1.0, 1.0 ],\n      m_geomData = null,\n      m_buffers = [],\n      m_bufferVertexAttributeMap = {},\n      m_dynamicDraw = arg.dynamicDraw === undefined ? false : arg.dynamicDraw,\n      m_glCompileTimestamp = vgl.timestamp();\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Delete cached VBO if any\n   *\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function deleteVertexBufferObjects() {\n    var i;\n    for (i = 0; i < m_buffers.length; ++i) {\n      gl.deleteBuffer(m_buffers[i]);\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create new VBO for all its geometryData sources and primitives\n   *\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function createVertexBufferObjects() {\n    if (m_geomData) {\n      var numberOfSources = m_geomData.numberOfSources(),\n          i, j, k, bufferId = null, keys, ks, numberOfPrimitives, data;\n\n      for (i = 0; i < numberOfSources; ++i) {\n        bufferId = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, bufferId);\n        data = m_geomData.source(i).data();\n        if (!(data instanceof Float32Array)) {\n          data = new Float32Array(data);\n        }\n        gl.bufferData(gl.ARRAY_BUFFER, data,\n                      m_dynamicDraw ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW);\n\n        keys = m_geomData.source(i).keys();\n        ks = [];\n\n        for (j = 0; j < keys.length; ++j) {\n          ks.push(keys[j]);\n        }\n\n        m_bufferVertexAttributeMap[i] = ks;\n        m_buffers[i] = bufferId;\n      }\n\n      numberOfPrimitives = m_geomData.numberOfPrimitives();\n      for (k = 0; k < numberOfPrimitives; ++k) {\n        bufferId = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, bufferId);\n        gl.bufferData(gl.ARRAY_BUFFER, m_geomData.primitive(k)\n            .indices(), gl.STATIC_DRAW);\n        m_buffers[i++] = bufferId;\n      }\n\n      m_glCompileTimestamp.modified();\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Clear cache related to buffers\n   *\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function cleanUpDrawObjects() {\n    m_bufferVertexAttributeMap = {};\n    m_buffers = [];\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Setup draw objects; Delete old ones and create new ones\n   *\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function setupDrawObjects() {\n    // Delete buffer objects from past if any.\n    deleteVertexBufferObjects();\n\n    // Clear any cache related to buffers\n    cleanUpDrawObjects();\n\n    // Now construct the new ones.\n    createVertexBufferObjects();\n\n    m_dirty = false;\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute bounds of the data\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeBounds = function() {\n    if (m_geomData === null || typeof m_geomData === 'undefined') {\n      this.resetBounds();\n      return;\n    }\n\n    var computeBoundsTimestamp = this.computeBoundsTimestamp(),\n        boundsDirtyTimestamp = this.boundsDirtyTimestamp(),\n        geomBounds = null;\n\n    if (boundsDirtyTimestamp.getMTime() > computeBoundsTimestamp.getMTime()) {\n      geomBounds = m_geomData.bounds();\n\n      this.setBounds(geomBounds[0], geomBounds[1], geomBounds[2],\n        geomBounds[3], geomBounds[4], geomBounds[5]) ;\n\n      computeBoundsTimestamp.modified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get solid color of the geometry\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.color = function() {\n    return m_color;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set solid color of the geometry. Default is teal [1.0, 1.0, 1.0]\n   *\n   * @param r Red component of the color [0.0 - 1.0]\n   * @param g Green component of the color [0.0 - 1.0]\n   * @param b Blue component of the color [0.0 - 1.0]\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setColor = function(r, g, b) {\n    m_color[0] = r;\n    m_color[1] = g;\n    m_color[2] = b;\n\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return stored geometry data if any\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.geometryData = function() {\n    return m_geomData;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Connect mapper to its geometry data\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setGeometryData = function(geom) {\n    if (m_geomData !== geom) {\n      m_geomData = geom;\n\n      this.modified();\n      this.boundsDirtyTimestamp().modified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update the buffer used for a named source.\n   *\n   * @param {String} sourceName The name of the source to update.\n   * @param {Object[] or Float32Array} values The values to use for the source.\n   *    If not specified, use the source's own buffer.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.updateSourceBuffer = function (sourceName, values) {\n    var bufferIndex = -1;\n    for (var i = 0; i < m_geomData.numberOfSources(); i += 1) {\n      if (m_geomData.source(i).name() === sourceName) {\n        bufferIndex = i;\n        break;\n      }\n    }\n    if (bufferIndex < 0 || bufferIndex >= m_buffers.length) {\n      return false;\n    }\n    if (!values) {\n      values = m_geomData.source(i).dataToFloat32Array();\n    }\n    gl.bindBuffer(gl.ARRAY_BUFFER, m_buffers[bufferIndex]);\n    if (values instanceof Float32Array) {\n      gl.bufferSubData(gl.ARRAY_BUFFER, 0, values);\n    } else {\n      gl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(values));\n    }\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get the buffer used for a named source.  If the current buffer isn't a\n   * Float32Array, it is converted to one.  This array can then be modified\n   * directly, after which updateSourceBuffer can be called to update the\n   * GL array.\n   *\n   * @param {String} sourceName The name of the source to update.\n   * @returns {Float32Array} An array used for this source.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.getSourceBuffer = function (sourceName) {\n    var bufferIndex = -1;\n    for (var i = 0; i < m_geomData.numberOfSources(); i += 1) {\n      if (m_geomData.source(i).name() === sourceName) {\n        bufferIndex = i;\n        break;\n      }\n    }\n    if (bufferIndex < 0 || bufferIndex >= m_buffers.length) {\n      return new Float32Array();\n    }\n    return m_geomData.source(i).dataToFloat32Array();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Render the mapper\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.render = function(renderState) {\n    if (this.getMTime() > m_glCompileTimestamp.getMTime()) {\n      setupDrawObjects(renderState);\n    }\n\n    // Fixed vertex color\n    gl.vertexAttrib3fv(vgl.vertexAttributeKeys.Color, this.color());\n\n    // TODO Use renderState\n    var bufferIndex = 0,\n        j = 0, i, noOfPrimitives = null, primitive = null;\n\n    for (i in m_bufferVertexAttributeMap) {\n      if (m_bufferVertexAttributeMap.hasOwnProperty(i)) {\n        gl.bindBuffer(gl.ARRAY_BUFFER, m_buffers[bufferIndex]);\n        for (j = 0; j < m_bufferVertexAttributeMap[i].length; ++j) {\n          renderState.m_material\n              .bindVertexData(renderState, m_bufferVertexAttributeMap[i][j]);\n        }\n        ++bufferIndex;\n      }\n    }\n\n    noOfPrimitives = m_geomData.numberOfPrimitives();\n    for (j = 0; j < noOfPrimitives; ++j) {\n      gl.bindBuffer(gl.ARRAY_BUFFER, m_buffers[bufferIndex++]);\n      primitive = m_geomData.primitive(j);\n      switch(primitive.primitiveType()) {\n        case gl.POINTS:\n          gl.drawArrays (gl.TRIANGLES, 0, primitive.numberOfIndices());\n          break;\n        case gl.LINES:\n          gl.drawArrays (gl.LINES, 0, primitive.numberOfIndices());\n          break;\n        case gl.LINE_STRIP:\n          gl.drawArrays (gl.LINE_STRIP, 0, primitive.numberOfIndices());\n          break;\n        case gl.TRIANGLES:\n          gl.drawArrays (gl.TRIANGLES, 0, primitive.numberOfIndices());\n          break;\n        case gl.TRIANGLE_STRIP:\n          gl.drawArrays (gl.TRIANGLE_STRIP, 0, primitive.numberOfIndices());\n          break;\n      }\n      gl.bindBuffer (gl.ARRAY_BUFFER, null);\n    }\n  };\n\n  return this;\n};\n\ninherit(vgl.mapper, vgl.boundingObject);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\nvgl.groupMapper = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.groupMapper)) {\n    return new vgl.groupMapper();\n  }\n  vgl.mapper.call(this);\n\n  /** @private */\n  var m_createMappersTimestamp = vgl.timestamp(),\n      m_mappers = [],\n      m_geomDataArray = [];\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return stored geometry data if any\n   *\n   * @param index optional\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.geometryData = function(index) {\n    if (index !== undefined && index < m_geomDataArray.length ) {\n      return m_geomDataArray[index];\n    }\n\n    if (m_geomDataArray.length > 0) {\n      return m_geomDataArray[0];\n    }\n\n    return null;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Connect mapper to its geometry data\n   *\n   * @param geom {vgl.geomData}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setGeometryData = function(geom) {\n    if (m_geomDataArray.length === 1) {\n      if (m_geomDataArray[0] === geom) {\n        return;\n      }\n    }\n    m_geomDataArray = [];\n    m_geomDataArray.push(geom);\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return stored geometry data array if any\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.geometryDataArray = function() {\n    return m_geomDataArray;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Connect mapper to its geometry data\n   *\n   * @param geoms {Array}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setGeometryDataArray = function(geoms) {\n    if (geoms instanceof Array) {\n      if (m_geomDataArray !== geoms) {\n        m_geomDataArray = [];\n        m_geomDataArray = geoms;\n        this.modified();\n        return true;\n      }\n    } else {\n      console.log('[error] Requies array of geometry data');\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute bounds of the data\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeBounds = function() {\n    if (m_geomDataArray === null ||\n        m_geomDataArray === undefined) {\n      this.resetBounds();\n      return;\n    }\n\n    var computeBoundsTimestamp = this.computeBoundsTimestamp(),\n        boundsDirtyTimestamp = this.boundsDirtyTimestamp(),\n        m_bounds = this.bounds(),\n        geomBounds = null,\n        i = null;\n\n    if (boundsDirtyTimestamp.getMTime() >\n        computeBoundsTimestamp.getMTime()) {\n\n      for (i = 0; i < m_geomDataArray.length; ++i) {\n        geomBounds = m_geomDataArray[i].bounds();\n\n        if (m_bounds[0] > geomBounds[0]) {\n          m_bounds[0] = geomBounds[0];\n        }\n        if (m_bounds[1] < geomBounds[1]) {\n          m_bounds[1] = geomBounds[1];\n        }\n        if (m_bounds[2] > geomBounds[2]) {\n          m_bounds[2] = geomBounds[2];\n        }\n        if (m_bounds[3] < geomBounds[3]) {\n          m_bounds[3] = geomBounds[3];\n        }\n        if (m_bounds[4] > geomBounds[4]) {\n          m_bounds[4] = geomBounds[4];\n        }\n        if (m_bounds[5] < geomBounds[5]) {\n          m_bounds[5] = geomBounds[5];\n        }\n      }\n\n      this.modified();\n      computeBoundsTimestamp.modified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Render the mapper\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.render = function(renderState) {\n    var i = null;\n\n    if (this.getMTime() > m_createMappersTimestamp.getMTime()) {\n      // NOTE Hoping that it will release the graphics resources\n      for (i = 0; i < m_geomDataArray.length; ++i) {\n        m_mappers.push(vgl.mapper());\n        m_mappers[i].setGeometryData(m_geomDataArray[i]);\n      }\n        m_createMappersTimestamp.modified();\n    }\n\n    for (i = 0; i < m_mappers.length; ++i) {\n      m_mappers[i].render(renderState);\n    }\n  };\n\n  return this;\n};\n\ninherit(vgl.groupMapper, vgl.mapper);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\nvgl.materialAttributeType = {\n  \"Undefined\" : 0x0,\n  \"ShaderProgram\" : 0x1,\n  \"Texture\" : 0x2,\n  \"Blend\" : 0x3,\n  \"Depth\" : 0x4\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class materialAttribute\n *\n * @class\n * @param type\n * @returns {vgl.materialAttribute}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.materialAttribute = function(type) {\n  'use strict';\n\n  if (!(this instanceof vgl.materialAttribute)) {\n    return new vgl.materialAttribute();\n  }\n  vgl.object.call(this);\n\n  /** @private */\n  var m_type = type,\n      m_enabled = true;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return tyep of the material attribute\n   *\n   * @returns {*}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.type = function() {\n    return m_type;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return if material attribute is enabled or not\n   *\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.enabled = function() {\n    return m_enabled;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Setup (initialize) the material attribute\n   *\n   * @param renderState\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setup = function(renderState) {\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Bind and activate the material attribute\n   *\n   * @param renderState\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.bind = function(renderState) {\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Undo bind and deactivate the material\n   *\n   * @param renderState\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.undoBind = function(renderState) {\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize vertex data for the material attribute\n   *\n   * @param renderState\n   * @param key\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setupVertexData = function(renderState, key) {\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Bind and activate vertex specific data\n   *\n   * @param renderState\n   * @param key\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.bindVertexData = function(renderState, key) {\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Undo bind and deactivate vertex specific data\n   *\n   * @param renderState\n   * @param key\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.undoBindVertexData = function(renderState, key) {\n    return false;\n  };\n\n  return this;\n};\n\ninherit(vgl.materialAttribute, vgl.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, gl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of clas blendFunction\n *\n * @class\n * @param source\n * @param destination\n * @returns {vgl.blendFunction}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.blendFunction = function(source, destination) {\n  'use strict';\n\n  if (!(this instanceof vgl.blendFunction)) {\n    return new vgl.blendFunction(source, destination);\n  }\n\n  /** @private */\n  var m_source = source,\n      m_destination = destination;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Apply blend function to the current state\n   *\n   * @param {vgl.renderState}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.apply = function(renderState) {\n    gl.blendFuncSeparate(m_source, m_destination, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n  };\n\n  return this;\n};\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class blend\n *\n * @returns {vgl.blend}\n */\n////////////////////////////////////////////////////////////////////////////\nvgl.blend = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.blend)) {\n    return new vgl.blend();\n  }\n  vgl.materialAttribute.call(\n    this, vgl.materialAttributeType.Blend);\n\n  /** @private */\n  var m_wasEnabled = false,\n      m_blendFunction = vgl.blendFunction(gl.SRC_ALPHA,\n                                                gl.ONE_MINUS_SRC_ALPHA);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Bind blend attribute\n   *\n   * @param {vgl.renderState}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.bind = function(renderState) {\n    m_wasEnabled = gl.isEnabled(gl.BLEND);\n\n    if (this.enabled()) {\n      gl.enable(gl.BLEND);\n      m_blendFunction.apply(renderState);\n    }\n    else {\n      gl.disable(gl.BLEND);\n    }\n\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Undo bind blend attribute\n   *\n   * @param {vgl.renderState}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.undoBind = function(renderState) {\n    if (m_wasEnabled) {\n      gl.enable(gl.BLEND);\n    }\n    else {\n      gl.disable(gl.BLEND);\n    }\n\n    return true;\n  };\n\n  return this;\n};\n\ninherit(vgl.blend, vgl.materialAttribute);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class material\n *\n * @class\n * @returns {vgl.material}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.material = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.material)) {\n    return new vgl.material();\n  }\n  vgl.object.call(this);\n\n  // / Private member variables\n  var m_shaderProgram = new vgl.shaderProgram(),\n      m_binNumber = 100,\n      m_textureAttributes = {},\n      m_attributes = {};\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return bin number for the material\n   *\n   * @default 100\n   * @returns {number}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.binNumber = function() {\n    return m_binNumber;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set bin number for the material\n   *\n   * @param binNo\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setBinNumber = function(binNo) {\n    m_binNumber = binNo;\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Check if incoming attribute already exists in the material\n   *\n   * @param attr\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.exists = function(attr) {\n    if (attr.type() === vgl.materialAttribute.Texture) {\n      return m_textureAttributes.hasOwnProperty(attr);\n    }\n\n    return m_attributes.hasOwnProperty(attr);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get uniform given a name\n\n   * @param name Uniform name\n   * @returns {vgl.uniform}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.uniform = function(name) {\n    if (m_shaderProgram) {\n      return m_shaderProgram.uniform(name);\n    }\n\n    return null;\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get material attribute\n\n   * @param attr Attribute name\n   * @returns {vgl.materialAttribute}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.attribute = function(name) {\n    if (m_attributes.hasOwnProperty(name)) {\n      return m_attributes[name];\n    }\n\n    if (m_textureAttributes.hasOwnProperty(name)) {\n      return m_textureAttributes[name];\n    }\n\n    return null;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set a new attribute for the material\n   *\n   * This method replace any existing attribute except for textures as\n   * materials can have multiple textures.\n   *\n   * @param attr\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setAttribute = function(attr) {\n    if (attr.type() === vgl.materialAttributeType.Texture &&\n        m_textureAttributes[attr.textureUnit()] !== attr) {\n      m_textureAttributes[attr.textureUnit()] = attr;\n      this.modified();\n      return true;\n    }\n\n    if (m_attributes[attr.type()] === attr) {\n      return false;\n    }\n\n    // Shader is a very special attribute\n    if (attr.type() === vgl.materialAttributeType.ShaderProgram) {\n      m_shaderProgram = attr;\n    }\n\n    m_attributes[attr.type()] = attr;\n    this.modified();\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Add a new attribute to the material.\n   *\n   * @param attr\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.addAttribute = function(attr) {\n    if (this.exists(attr)) {\n      return false;\n    }\n\n    if (attr.type() === vgl.materialAttributeType.Texture) {\n      // TODO Currently we don't check if we are replacing or not.\n      // It would be nice to have a flag for it.\n      m_textureAttributes[attr.textureUnit()] = attr;\n      this.modified();\n      return true;\n    }\n\n    // Shader is a very special attribute\n    if (attr.type() === vgl.materialAttributeType.ShaderProgram) {\n      m_shaderProgram = attr;\n    }\n\n    m_attributes[attr.type()] = attr;\n    this.modified();\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return shader program used by the material\n   *\n   * @returns {vgl.shaderProgram}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.shaderProgram = function() {\n    return m_shaderProgram;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Activate the material\n   *\n   * @param renderState\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.render = function(renderState) {\n    this.bind(renderState);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Deactivate the material\n   *\n   * @param renderState\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.remove = function(renderState) {\n    this.undoBind(renderState);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Bind and activate material states\n   *\n   * @param renderState\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.bind = function(renderState) {\n    var key = null;\n\n    for (key in m_attributes) {\n      if (m_attributes.hasOwnProperty(key)) {\n        m_attributes[key].bind(renderState);\n      }\n    }\n\n    for (key in m_textureAttributes) {\n      if (m_textureAttributes.hasOwnProperty(key)) {\n        m_textureAttributes[key].bind(renderState);\n      }\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Undo-bind and de-activate material states\n   *\n   * @param renderState\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.undoBind = function(renderState) {\n    var key = null;\n    for (key in m_attributes) {\n      if (m_attributes.hasOwnProperty(key)) {\n        m_attributes[key].undoBind(renderState);\n      }\n    }\n\n    for (key in m_textureAttributes) {\n      if (m_textureAttributes.hasOwnProperty(key)) {\n        m_textureAttributes[key].undoBind(renderState);\n      }\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Bind vertex data\n   *\n   * @param renderState\n   * @param key\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.bindVertexData = function(renderState, key) {\n    var i = null;\n\n    for (i in m_attributes) {\n      if (m_attributes.hasOwnProperty(i)) {\n        m_attributes[i].bindVertexData(renderState, key);\n      }\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Undo bind vertex data\n   *\n   * @param renderState\n   * @param key\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.undoBindVertexData = function(renderState, key) {\n    var i = null;\n\n    for (i in m_attributes) {\n      if (m_attributes.hasOwnProperty(i)) {\n        m_attributes.undoBindVertexData(renderState, key);\n      }\n    }\n  };\n\n  return this;\n};\n\nvgl.material.RenderBin = {\n  \"Base\" : 0,\n  \"Default\" : 100,\n  \"Opaque\" : 100,\n  \"Transparent\" : 1000,\n  \"Overlay\" : 10000\n};\n\ninherit(vgl.material, vgl.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, bitwise:true, indent: 2*/\n\n/*global vgl, gl, ogs, vec2, vec3, vec4, mat4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class renderState\n *\n * @returns {vgl.renderState}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.renderState = function() {\n  'use strict';\n\n  this.m_modelViewMatrix = mat4.create();\n  this.m_normalMatrix = mat4.create();\n  this.m_projectionMatrix = null;\n  this.m_material = null;\n  this.m_mapper = null;\n};\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class renderer *\n *\n * @returns {vgl.renderer}\n */\n////////////////////////////////////////////////////////////////////////////\nvgl.renderer = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.renderer)) {\n    return new vgl.renderer();\n  }\n  vgl.object.call(this);\n\n  /** @private */\n  var m_sceneRoot = new vgl.groupNode(),\n      m_camera = new vgl.camera(),\n      m_nearClippingPlaneTolerance = null,\n      m_x = 0,\n      m_y = 0,\n      m_width = 0,\n      m_height = 0,\n      m_resizable = true,\n      m_resetScene = true,\n      m_layer = 0,\n      m_resetClippingRange = true;\n\n  m_camera.addChild(m_sceneRoot);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get width of the renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.width = function() {\n    return m_width;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get height of the renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.height = function() {\n    return m_height;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get layer this renderer is associated with\n   *\n   * @return {Number}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.layer = function () {\n     return m_layer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set the layer this renderer is associated with.\n   *\n   * @param layerNo\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setLayer = function(layerNo) {\n    m_layer = layerNo;\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   *\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.isResizable = function() {\n    return m_resizable;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   *\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setResizable = function(r) {\n    m_resizable = r;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get background color\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.backgroundColor = function() {\n    return m_camera.clearColor();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set background color of the renderer\n   *\n   * @param r\n   * @param g\n   * @param b\n   * @param a\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setBackgroundColor = function(r, g, b, a) {\n    m_camera.setClearColor(r, g, b, a);\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get scene root\n   *\n   * @returns {vgl.groupNode}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.sceneRoot = function() {\n    return m_sceneRoot;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get main camera of the renderer\n   *\n   * @returns {vgl.camera}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.camera = function() {\n    return m_camera;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Render the scene\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.render = function() {\n    var i, renSt, children, actor = null, sortedActors = [],\n        mvMatrixInv = mat4.create(), clearColor = null;\n\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthFunc(gl.LEQUAL);\n\n    if (m_camera.clearMask() & vgl.GL.ColorBufferBit) {\n      clearColor = m_camera.clearColor();\n      gl.clearColor(clearColor[0], clearColor[1], clearColor[2], clearColor[3]);\n    }\n\n    if (m_camera.clearMask() & vgl.GL.DepthBufferBit) {\n      gl.clearDepth(m_camera.clearDepth());\n    }\n\n    gl.clear(m_camera.clearMask());\n\n    // Set the viewport for this renderer\n    gl.viewport(m_x, m_y, m_width, m_height);\n\n    renSt = new vgl.renderState();\n    children = m_sceneRoot.children();\n\n    if (children.length > 0 && m_resetScene) {\n      this.resetCamera();\n      m_resetScene = false;\n    }\n\n    for ( i = 0; i < children.length; ++i) {\n      actor = children[i];\n\n      // Compute the bounds even if the actor is not visible\n      actor.computeBounds();\n\n      // If bin number is < 0, then don't even bother\n      // rendering the data\n      if (!actor.visible() || actor.material().binNumber() < 0) {\n        continue;\n      }\n\n      sortedActors.push([actor.material().binNumber(), actor]);\n    }\n\n    // Now perform sorting\n    sortedActors.sort(function(a, b) {return a[0] - b[0];});\n\n    for ( i = 0; i < sortedActors.length; ++i) {\n      actor = sortedActors[i][1];\n      if (actor.referenceFrame() ===\n          vgl.boundingObject.ReferenceFrame.Relative) {\n        mat4.multiply(renSt.m_modelViewMatrix, m_camera.viewMatrix(),\n          actor.matrix());\n        renSt.m_projectionMatrix = m_camera.projectionMatrix();\n      } else {\n        renSt.m_modelViewMatrix = actor.matrix();\n        renSt.m_projectionMatrix = mat4.create();\n        mat4.ortho(renSt.m_projectionMatrix, 0, m_width, 0, m_height, -1, 1);\n      }\n\n      mat4.invert(mvMatrixInv, renSt.m_modelViewMatrix);\n      mat4.transpose(renSt.m_normalMatrix, mvMatrixInv);\n      renSt.m_material = actor.material();\n      renSt.m_mapper = actor.mapper();\n\n      // TODO Fix this shortcut\n      renSt.m_material.render(renSt);\n      renSt.m_mapper.render(renSt);\n      renSt.m_material.remove(renSt);\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Automatically set up the camera based on visible actors\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.resetCamera = function() {\n    m_camera.computeBounds();\n\n    var vn = m_camera.directionOfProjection(),\n        visibleBounds = m_camera.bounds(),\n        center = [\n          (visibleBounds[0] + visibleBounds[1]) / 2.0,\n          (visibleBounds[2] + visibleBounds[3]) / 2.0,\n          (visibleBounds[4] + visibleBounds[5]) / 2.0\n        ],\n        diagonals = [\n          visibleBounds[1] - visibleBounds[0],\n          visibleBounds[3] - visibleBounds[2],\n          visibleBounds[5] - visibleBounds[4]\n        ],\n        radius = 0.0,\n        aspect = m_camera.viewAspect(),\n        angle = m_camera.viewAngle(),\n        distance = null,\n        vup = null;\n\n    if (diagonals[0] > diagonals[1]) {\n      if (diagonals[0] > diagonals[2]) {\n        radius = diagonals[0] / 2.0;\n      } else {\n        radius = diagonals[2] / 2.0;\n      }\n    } else {\n      if (diagonals[1] > diagonals[2]) {\n        radius = diagonals[1] / 2.0;\n      } else {\n        radius = diagonals[2] / 2.0;\n      }\n    }\n\n    // @todo Need to figure out what's happening here\n    if (aspect >= 1.0) {\n      angle = 2.0 * Math.atan(Math.tan(angle * 0.5) / aspect);\n    } else {\n      angle = 2.0 * Math.atan(Math.tan(angle * 0.5) * aspect);\n    }\n\n    distance = radius / Math.sin(angle * 0.5);\n    vup = m_camera.viewUpDirection();\n\n    if (Math.abs(vec3.dot(vup, vn)) > 0.999) {\n      m_camera.setViewUpDirection(-vup[2], vup[0], vup[1]);\n    }\n\n    m_camera.setFocalPoint(center[0], center[1], center[2]);\n    m_camera.setPosition(center[0] + distance * -vn[0],\n      center[1] + distance * -vn[1], center[2] + distance * -vn[2]);\n\n    this.resetCameraClippingRange(visibleBounds);\n  };\n\n  this.hasValidBounds = function(bounds) {\n    if (bounds[0] == Number.MAX_VALUE ||\n        bounds[1] == -Number.MAX_VALUE ||\n        bounds[2] == Number.MAX_VALUE ||\n        bounds[3] == -Number.MAX_VALUE ||\n        bounds[4] == Number.MAX_VALUE ||\n        bounds[5] == -Number.MAX_VALUE)  {\n      return false;\n    }\n\n    return true;\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Recalculate camera's clipping range\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.resetCameraClippingRange = function(bounds) {\n    if (typeof bounds === 'undefined') {\n      m_camera.computeBounds();\n      bounds = m_camera.bounds();\n    }\n\n    if (!this.hasValidBounds(bounds)) {\n      return;\n    }\n\n    var vn = m_camera.viewPlaneNormal(),\n        position = m_camera.position(),\n        a = -vn[0],\n        b = -vn[1],\n        c = -vn[2],\n        d = -(a*position[0] + b*position[1] + c*position[2]),\n        range = vec2.create(),\n        dist = null,\n        i = null,\n        j = null,\n        k = null;\n\n    if (!m_resetClippingRange) {\n        return;\n    }\n\n    // Set the max near clipping plane and the min far clipping plane\n    range[0] = a * bounds[0] + b * bounds[2] + c * bounds[4] + d;\n    range[1] = 1e-18;\n\n    // Find the closest / farthest bounding box vertex\n    for (k = 0; k < 2; k++ ) {\n      for (j = 0; j < 2; j++) {\n        for (i = 0; i < 2; i++) {\n          dist = a * bounds[i] + b * bounds[2 + j] + c * bounds[4 + k] + d;\n          range[0] = (dist < range[0]) ? (dist) : (range[0]);\n          range[1] = (dist > range[1]) ? (dist) : (range[1]);\n        }\n      }\n    }\n\n    // Do not let the range behind the camera throw off the calculation.\n    if (range[0] < 0.0) {\n      range[0] = 0.0;\n    }\n\n    // Give ourselves a little breathing room\n    range[0] = 0.99 * range[0] - (range[1] - range[0]) * 0.5;\n    range[1] = 1.01 * range[1] + (range[1] - range[0]) * 0.5;\n\n    // Make sure near is not bigger than far\n    range[0] = (range[0] >= range[1]) ? (0.01 * range[1]) : (range[0]);\n\n    // Make sure near is at least some fraction of far - this prevents near\n    // from being behind the camera or too close in front. How close is too\n    // close depends on the resolution of the depth buffer.\n    if (!m_nearClippingPlaneTolerance) {\n      m_nearClippingPlaneTolerance = 0.01;\n\n      if (gl !== null && gl.getParameter(gl.DEPTH_BITS) > 16) {\n        m_nearClippingPlaneTolerance = 0.001;\n      }\n    }\n\n    // make sure the front clipping range is not too far from the far clippnig\n    // range, this is to make sure that the zbuffer resolution is effectively\n    // used.\n    if (range[0] < m_nearClippingPlaneTolerance*range[1]) {\n       range[0] = m_nearClippingPlaneTolerance*range[1];\n    }\n\n    m_camera.setClippingRange(range[0], range[1]);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Resize viewport given a width and height\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.resize = function(width, height) {\n    // @note: where do m_x and m_y come from?\n    this.positionAndResize(m_x, m_y, width, height);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Resize viewport given a position, width and height\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.positionAndResize = function(x, y, width, height) {\n    // TODO move this code to camera\n    if (x < 0 || y < 0 || width < 0 || height < 0) {\n      console.log('[error] Invalid position and resize values',\n        x, y, width, height);\n    }\n\n    //If we're allowing this renderer to resize ...\n    if (m_resizable) {\n      m_width = width;\n      m_height = height;\n\n      m_camera.setViewAspect(m_width / m_height);\n      this.modified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Add new actor to the collection\n   *\n   * @param actor\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.addActor = function(actor) {\n    if (actor instanceof vgl.actor) {\n      m_sceneRoot.addChild(actor);\n      this.modified();\n      return true;\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return true if this renderer has this actor attached, false otherwise.\n   *\n   * @param actor\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.hasActor = function(actor) {\n      return m_sceneRoot.hasChild(actor);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Add an array of actors to the collection\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.addActors = function(actors) {\n    var i = null;\n    if (actors instanceof Array) {\n      for (i = 0; i < actors.length; ++i) {\n        m_sceneRoot.addChild(actors[i]);\n      }\n      this.modified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Remove the actor from the collection\n   *\n   * @param actor\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.removeActor = function(actor) {\n    if (m_sceneRoot.children().indexOf(actor) !== -1) {\n      m_sceneRoot.removeChild(actor);\n      this.modified();\n      return true;\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Remove actors from the collection\n   *\n   * @param actors\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.removeActors = function(actors) {\n    if (!(actors instanceof Array)) {\n      return false;\n    }\n\n    var i;\n    for (i = 0; i < actors.length; ++i) {\n      m_sceneRoot.removeChild(actors[i]);\n    }\n    this.modified();\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Remove all actors for a renderer\n   *\n   * @returns {*}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.removeAllActors = function() {\n    return m_sceneRoot.removeChildren();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Transform a point in the world space to display space\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.worldToDisplay = function(worldPt, viewMatrix, projectionMatrix, width,\n                                 height) {\n    var viewProjectionMatrix = mat4.create(),\n        winX = null,\n        winY = null,\n        winZ = null,\n        winW = null,\n        clipPt = null;\n\n\n    mat4.multiply(viewProjectionMatrix, projectionMatrix, viewMatrix);\n\n    // Transform world to clipping coordinates\n    clipPt = vec4.create();\n    vec4.transformMat4(clipPt, worldPt, viewProjectionMatrix);\n\n    if (clipPt[3] !== 0.0) {\n      clipPt[0] = clipPt[0] / clipPt[3];\n      clipPt[1] = clipPt[1] / clipPt[3];\n      clipPt[2] = clipPt[2] / clipPt[3];\n      clipPt[3] = 1.0;\n    }\n\n    winX = (((clipPt[0]) + 1) / 2.0) * width;\n    // We calculate -point3D.getY() because the screen Y axis is\n    // oriented top->down\n    winY = ((1 - clipPt[1]) / 2.0) * height;\n    winZ = clipPt[2];\n    winW = clipPt[3];\n\n    return vec4.fromValues(winX, winY, winZ, winW);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Transform a point in display space to world space\n   * @param displayPt\n   * @param viewMatrix\n   * @param projectionMatrix\n   * @param width\n   * @param height\n   * @returns {vec4}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.displayToWorld = function(displayPt, viewMatrix, projectionMatrix,\n                                 width, height) {\n    var x = (2.0 * displayPt[0] / width) - 1,\n        y = -(2.0 * displayPt[1] / height) + 1,\n        z = displayPt[2],\n        viewProjectionInverse = mat4.create(),\n        worldPt = null;\n\n    mat4.multiply(viewProjectionInverse, projectionMatrix, viewMatrix);\n    mat4.invert(viewProjectionInverse, viewProjectionInverse);\n\n    worldPt = vec4.fromValues(x, y, z, 1);\n    vec4.transformMat4(worldPt, worldPt, viewProjectionInverse);\n    if (worldPt[3] !== 0.0) {\n      worldPt[0] = worldPt[0] / worldPt[3];\n      worldPt[1] = worldPt[1] / worldPt[3];\n      worldPt[2] = worldPt[2] / worldPt[3];\n      worldPt[3] = 1.0;\n    }\n\n    return worldPt;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get the focusDisplayPoint\n   * @returns {vec4}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.focusDisplayPoint = function() {\n    var focalPoint = m_camera.focalPoint(),\n      focusWorldPt = vec4.fromValues(\n        focalPoint[0], focalPoint[1], focalPoint[2], 1);\n\n    return this.worldToDisplay(\n      focusWorldPt, m_camera.viewMatrix(),\n      m_camera.projectionMatrix(), m_width, m_height);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Will the scene be reset.\n   * @returns {bool}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.resetScene = function() {\n    return m_resetScene;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * If true the scene will be reset, otherwise the scene will not be\n   * automatically reset.\n   *\n   * @param reset\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setResetScene = function(reset) {\n     if (m_resetScene !== reset) {\n       m_resetScene = reset;\n       this.modified()\n     }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Will the clipping range be reset\n   * @returns {bool}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.resetClippingRange = function() {\n    return m_resetClippingRange;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * If true the camera clipping range will be reset, otherwise the scene will\n   * not be automatically reset.\n   *\n   * @param reset\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setResetClippingRange = function(reset) {\n     if (m_resetClippingRange !== reset) {\n       m_resetClippingRange = reset;\n       this.modified()\n     }\n  };\n\n  return this;\n};\n\ninherit(vgl.renderer, vgl.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n// TODO Current we support only one context\nvar gl = null;\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class renderWindow\n *\n * @class\n * @returns {vgl.renderWindow}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.renderWindow = function(canvas) {\n  'use strict';\n\n  if (!(this instanceof vgl.renderWindow)) {\n    return new vgl.renderWindow(canvas);\n  }\n  vgl.object.call(this);\n\n  /** @private */\n  var m_x = 0,\n      m_y = 0,\n      m_width = 400,\n      m_height = 400,\n      m_canvas = canvas,\n      m_activeRender = null,\n      m_renderers = [];\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get size of the render window\n   *\n   * @returns {Array}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.windowSize = function() {\n    return [ m_width, m_height ];\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set size of the render window\n   *\n   * @param width\n   * @param height\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setWindowSize = function(width, height) {\n\n    if (m_width !== width || m_height !== height) {\n      m_width = width;\n      m_height = height;\n\n      this.modified();\n\n      return true;\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get window position (top left coordinates)\n   *\n   * @returns {Array}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.windowPosition = function() {\n    return [ m_x, m_y ];\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set window position (top left coordinates)\n   *\n   * @param x\n   * @param y\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setWindowPosition = function(x, y) {\n    if ((m_x !== x) || (m_y !== y)) {\n      m_x = x;\n      m_y = y;\n      this.modified();\n      return true;\n    }\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return all renderers contained in the render window\n   * @returns {Array}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.renderers = function() {\n    return m_renderers;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get active renderer of the the render window\n   *\n   * @returns vgl.renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.activeRenderer = function() {\n    return m_activeRender;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Add renderer to the render window\n   *\n   * @param ren\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.addRenderer = function(ren) {\n    if (this.hasRenderer(ren) === false) {\n      m_renderers.push(ren);\n      if (m_activeRender === null) {\n        m_activeRender = ren;\n      }\n      if (ren.layer() !== 0) {\n        ren.camera().setClearMask(vgl.GL.DepthBufferBit);\n      }\n      this.modified();\n      return true;\n    }\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Remove renderer from the render window\n   *\n   * @param ren\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.removeRenderer = function(ren) {\n    var index = m_renderers.indexOf(ren);\n    if (index !== -1) {\n      if (m_activeRender === ren) {\n        m_activeRender = null;\n      }\n      m_renderers.splice(index, 1);\n      this.modified();\n      return true;\n    }\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return a renderer at a given index\n   *\n   * @param index\n   * @returns {vgl.renderer}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.getRenderer = function(index) {\n    if (index < m_renderers.length) {\n      return m_renderers[index];\n    }\n\n    console.log(\"[WARNING] Out of index array\");\n    return null;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Check if the renderer exists\n   *\n   * @param ren\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.hasRenderer = function(ren) {\n    var i;\n    for (i = 0; i < m_renderers.length; ++i) {\n      if (ren === m_renderers[i]) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Resize window\n   *\n   * @param width\n   * @param height\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.resize = function(width, height) {\n    this.positionAndResize(m_x, m_y, width, height);\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Resize and reposition the window\n   *\n   * @param x\n   * @param y\n   * @param width\n   * @param height\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.positionAndResize = function(x, y, width, height) {\n    m_x = x;\n    m_y = y;\n    m_width = width;\n    m_height = height;\n    var i;\n    for (i = 0; i < m_renderers.length; ++i) {\n      m_renderers[i].positionAndResize(m_x, m_y, m_width, m_height);\n    }\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create the window\n   *\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.createWindow = function() {\n    // Initialize the global variable gl to null.\n    gl = null;\n\n    try {\n      // Try to grab the standard context. If it fails, fallback to\n      // experimental.\n      gl = m_canvas.getContext(\"webgl\")\n           || m_canvas.getContext(\"experimental-webgl\");\n\n      // Set width and height of renderers if not set already\n      var i;\n      for (i = 0; i < m_renderers.length; ++i) {\n        if ((m_renderers[i].width() > m_width) || m_renderers[i].width() === 0\n            || (m_renderers[i].height() > m_height)\n            || m_renderers[i].height() === 0) {\n          m_renderers[i].resize(m_x, m_y, m_width, m_height);\n        }\n      }\n\n      return true;\n    }\n    catch (e) {\n    }\n\n    // If we don't have a GL context, give up now\n    if (!gl) {\n      console(\"[ERROR] Unable to initialize WebGL. Your browser may not support it.\");\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Delete this window and release any graphics resources\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.deleteWindow = function() {\n    // TODO\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Render the scene\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.render = function() {\n    var i;\n    m_renderers.sort(function(a, b) {return a.layer() - b.layer();});\n    for (i = 0; i < m_renderers.length; ++i) {\n      m_renderers[i].render();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get the focusDisplayPoint from the activeRenderer\n   * @returns {vec4}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.focusDisplayPoint = function() {\n    return m_activeRender.focusDisplayPoint();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Transform a point in display space to world space\n   * @param {Number} x\n   * @param {Number} y\n   * @param {vec4} focusDisplayPoint\n   * @returns {vec4}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.displayToWorld = function(x, y, focusDisplayPoint, ren) {\n    ren = ren === undefined ? ren = m_activeRender : ren;\n\n    var camera = ren.camera();\n    if(!focusDisplayPoint) {\n      focusDisplayPoint = ren.focusDisplayPoint();\n    }\n\n    return ren.displayToWorld(\n      vec4.fromValues(x, y, focusDisplayPoint[2], 1.0), camera.viewMatrix(),\n      camera.projectionMatrix(), m_width, m_height);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Transform a point in display space to world space\n   * @param {Number} x\n   * @param {Number} y\n   * @param {vec4} focusDisplayPoint\n   * @returns {vec4}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.worldToDisplay = function(x, y, z, ren) {\n    ren = ren === undefined ? ren = m_activeRender : ren;\n\n    var camera = ren.camera();\n\n    return ren.worldToDisplay(\n      vec4.fromValues(x, y, z, 1.0), camera.viewMatrix(),\n      camera.projectionMatrix(), m_width, m_height);\n  };\n\n  return this;\n};\n\ninherit(vgl.renderWindow, vgl.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2, bitwise: true*/\n\n/*global vgl, gl, ogs, vec3, vec4, mat4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class camera\n *\n * @class\n * @returns {vgl.camera}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.camera = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.camera)) {\n    return new vgl.camera();\n  }\n  vgl.groupNode.call(this);\n\n  /** @private */\n  var m_viewAngle = (Math.PI * 30) / 180.0,\n      m_position = vec4.fromValues(0.0, 0.0, 1.0, 1.0),\n      m_focalPoint = vec4.fromValues(0.0, 0.0, 0.0, 1.0),\n      m_centerOfRotation = vec3.fromValues(0.0, 0.0, 0.0),\n      m_viewUp = vec4.fromValues(0.0, 1.0, 0.0, 0.0),\n      m_rightDir = vec4.fromValues(1.0, 0.0, 0.0, 0.0),\n      m_near = 0.01,\n      m_far = 10000.0,\n      m_viewAspect = 1.0,\n      m_directionOfProjection = vec4.fromValues(0.0, 0.0, -1.0, 0.0),\n      m_viewPlaneNormal = vec4.fromValues(0.0, 0.0, 1.0, 0.0),\n      m_viewMatrix = mat4.create(),\n      m_projectionMatrix = mat4.create(),\n      m_computeModelViewMatrixTime = vgl.timestamp(),\n      m_computeProjectMatrixTime = vgl.timestamp(),\n      m_left = -1.0,\n      m_right = 1.0,\n      m_top = +1.0,\n      m_bottom = -1.0,\n      m_enableTranslation = true,\n      m_enableRotation = true,\n      m_enableScale = true,\n      m_enableParallelProjection = false,\n      m_clearColor = [1.0, 1.0, 1.0, 1.0],\n      m_clearDepth = 1.0,\n      m_clearMask = vgl.GL.ColorBufferBit |\n                    vgl.GL.DepthBufferBit;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get view angle of the camera\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.viewAngle = function() {\n    return m_viewAngle;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set view angle of the camera in degrees, which is converted to radians.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setViewAngleDegrees = function(a) {\n    m_viewAngle = (Math.PI * a) / 180.0;\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set view angle of the camera in degrees, which is converted to radians.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setViewAngle = function(a) {\n    if (m_enableScale) {\n      m_viewAngle = a;\n      this.modified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get position of the camera\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.position = function() {\n    return m_position;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set position of the camera\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setPosition = function(x, y, z) {\n    if (m_enableTranslation) {\n      m_position = vec4.fromValues(x, y, z, 1.0);\n      this.modified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get focal point of the camera\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.focalPoint = function() {\n    return m_focalPoint;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set focal point of the camera\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setFocalPoint = function(x, y, z) {\n    if (m_enableRotation && m_enableTranslation) {\n      m_focalPoint = vec4.fromValues(x, y, z, 1.0);\n      this.modified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get view-up direction of camera\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.viewUpDirection = function() {\n    return m_viewUp;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set view-up direction of the camera\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setViewUpDirection = function(x, y, z) {\n    m_viewUp = vec4.fromValues(x, y, z, 0);\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get center of rotation for camera\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.centerOfRotation = function() {\n    return m_centerOfRotation;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set center of rotation for camera\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setCenterOfRotation = function(centerOfRotation) {\n    m_centerOfRotation = centerOfRotation;\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get clipping range of the camera\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.clippingRange = function() {\n    return [m_near, m_far];\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set clipping range of the camera\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setClippingRange = function(near, far) {\n    m_near = near;\n    m_far = far;\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get view aspect\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.viewAspect = function() {\n    return m_viewAspect;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set view aspect\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setViewAspect = function(aspect) {\n    m_viewAspect = aspect;\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return active mode for scaling (enabled / disabled)\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.enableScale = function(flag) {\n    return m_enableScale;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Enable/disable scaling\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setEnableScale = function(flag) {\n    if (flag !== m_enableScale) {\n      m_enableScale = flag;\n      this.modified();\n      return true;\n    }\n\n    return m_enableScale;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return active mode for rotation (enabled / disabled)\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.enableRotation = function(f) {\n    return m_enableRotation;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Enable / disable rotation\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setEnableRotation = function(flag) {\n    if (flag !== m_enableRotation) {\n      m_enableRotation = flag;\n      this.modified();\n      return true;\n    }\n\n    return m_enableRotation;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return active mode for translation (enabled/disabled)\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.enableTranslation = function(flag) {\n    return m_enableTranslation;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Enable / disable translation\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setEnableTranslation = function(flag) {\n    if (flag !== m_enableTranslation) {\n      m_enableTranslation = flag;\n      this.modified();\n      return true;\n    }\n\n    return m_enableTranslation;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return if parallel projection is enabled\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.isEnabledParallelProjection = function() {\n    return m_enableParallelProjection;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Enable / disable parallel projection\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.enableParallelProjection = function(flag) {\n    if (flag !== m_enableParallelProjection) {\n      m_enableParallelProjection = flag;\n      this.modified();\n      return true;\n    }\n\n    return m_enableParallelProjection;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Enable / disable parallel projection\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setEnnableParallelProjection = function(flag) {\n    return enableParallelProjection();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set parallel projection parameters\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setParallelProjection = function(left, right, top, bottom) {\n    m_left = left;\n    m_right = right;\n    m_top = top;\n    m_bottom = bottom;\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return direction of projection\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.directionOfProjection = function() {\n    this.computeDirectionOfProjection();\n    return m_directionOfProjection;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return view plane normal direction\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.viewPlaneNormal = function() {\n    this.computeViewPlaneNormal();\n    return m_viewPlaneNormal;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return view-matrix for the camera This method does not compute the\n   * view-matrix for the camera. It is assumed that a call to computeViewMatrix\n   * has been made earlier.\n   *\n   * @returns {mat4}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.viewMatrix = function() {\n    return this.computeViewMatrix();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return camera projection matrix This method does not compute the\n   * projection-matrix for the camera. It is assumed that a call to\n   * computeProjectionMatrix has been made earlier.\n   *\n   * @returns {mat4}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.projectionMatrix = function() {\n    return this.computeProjectionMatrix();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return clear mask used by this camera\n   *\n   * @returns {number}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.clearMask = function() {\n    return m_clearMask;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set clear mask for camera\n   *\n   * @param mask\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setClearMask = function(mask) {\n    m_clearMask = mask;\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get clear color (background color) of the camera\n   *\n   * @returns {Array}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.clearColor = function() {\n    return m_clearColor;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set clear color (background color) for the camera\n   *\n   * @param color RGBA\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setClearColor = function(r, g, b, a) {\n    m_clearColor[0] = r;\n    m_clearColor[1] = g;\n    m_clearColor[2] = b;\n    m_clearColor[3] = a;\n\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   *\n   * @returns {{1.0: null}}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.clearDepth = function() {\n    return m_clearDepth;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   *\n   * @param depth\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setClearDepth = function(depth) {\n    m_clearDepth = depth;\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute direction of projection\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeDirectionOfProjection = function() {\n    vec3.subtract(m_directionOfProjection, m_focalPoint, m_position);\n    vec3.normalize(m_directionOfProjection, m_directionOfProjection);\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute view plane normal\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeViewPlaneNormal = function() {\n    m_viewPlaneNormal[0] = -m_directionOfProjection[0];\n    m_viewPlaneNormal[1] = -m_directionOfProjection[1];\n    m_viewPlaneNormal[2] = -m_directionOfProjection[2];\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Move camera closer or further away from the scene\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.zoom = function(d, dir) {\n    if (d === 0) {\n      return;\n    }\n\n    if (!m_enableTranslation) {\n      return;\n    }\n\n    d = d * vec3.distance(m_focalPoint, m_position);\n    if (!dir) {\n      dir = m_directionOfProjection;\n      m_position[0] = m_focalPoint[0] - d * dir[0];\n      m_position[1] = m_focalPoint[1] - d * dir[1];\n      m_position[2] = m_focalPoint[2] - d * dir[2];\n    } else {\n      m_position[0] = m_position[0]  + d * dir[0];\n      m_position[1] = m_position[1]  + d * dir[1];\n      m_position[2] = m_position[2]  + d * dir[2];\n    }\n\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Move camera sideways\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.pan = function(dx, dy, dz) {\n    if (!m_enableTranslation) {\n      return;\n    }\n\n    m_position[0] += dx;\n    m_position[1] += dy;\n    m_position[2] += dz;\n\n    m_focalPoint[0] += dx;\n    m_focalPoint[1] += dy;\n    m_focalPoint[2] += dz;\n\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute camera coordinate axes\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeOrthogonalAxes = function() {\n    this.computeDirectionOfProjection();\n    vec3.cross(m_rightDir, m_directionOfProjection, m_viewUp);\n    vec3.normalize(m_rightDir, m_rightDir);\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Rotate camera around center of rotation\n   * @param dx Rotation around vertical axis in degrees\n   * @param dy Rotation around horizontal axis in degrees\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.rotate = function(dx, dy) {\n    if (!m_enableRotation) {\n      return;\n    }\n\n    // Convert degrees into radians\n    dx = 0.5 * dx * (Math.PI / 180.0);\n    dy = 0.5 * dy * (Math.PI / 180.0);\n\n    var mat = mat4.create(),\n        inverseCenterOfRotation = new vec3.create();\n\n    mat4.identity(mat);\n\n    inverseCenterOfRotation[0] = -m_centerOfRotation[0];\n    inverseCenterOfRotation[1] = -m_centerOfRotation[1];\n    inverseCenterOfRotation[2] = -m_centerOfRotation[2];\n\n    mat4.translate(mat, mat, m_centerOfRotation);\n    mat4.rotate(mat, mat, dx, m_viewUp);\n    mat4.rotate(mat, mat, dy, m_rightDir);\n    mat4.translate(mat, mat, inverseCenterOfRotation);\n\n    vec4.transformMat4(m_position, m_position, mat);\n    vec4.transformMat4(m_focalPoint, m_focalPoint, mat);\n\n    // Update viewup vector\n    vec4.transformMat4(m_viewUp, m_viewUp, mat);\n    vec4.normalize(m_viewUp, m_viewUp);\n\n    // Update direction of projection\n    this.computeOrthogonalAxes();\n\n    // Mark modified\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute camera view matrix\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeViewMatrix = function() {\n    if (m_computeModelViewMatrixTime.getMTime() < this.getMTime()) {\n      mat4.lookAt(m_viewMatrix, m_position, m_focalPoint, m_viewUp);\n      m_computeModelViewMatrixTime.modified();\n    }\n    return m_viewMatrix;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute camera projection matrix\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeProjectionMatrix = function() {\n    if (m_computeProjectMatrixTime.getMTime() < this.getMTime()) {\n      if (!m_enableParallelProjection) {\n        mat4.perspective(m_projectionMatrix, m_viewAngle, m_viewAspect, m_near, m_far);\n      } else {\n        console.log('paralle projection');\n        mat4.ortho(m_projectionMatrix,\n          m_left, m_right, m_bottom, m_top, m_near, m_far);\n      }\n\n      m_computeProjectMatrixTime.modified();\n    }\n\n    return m_projectionMatrix;\n  };\n\n  this.computeDirectionOfProjection();\n\n  return this;\n};\n\ninherit(vgl.camera, vgl.groupNode);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class interactorStyle\n *\n * @class vgl.interactorStyle\n * interactorStyle is a base class for all interactor styles\n * @returns {vgl.interactorStyle}\n */\n////////////////////////////////////////////////////////////////////////////\nvgl.interactorStyle = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.interactorStyle)) {\n    return new vgl.interactorStyle();\n  }\n  vgl.object.call(this);\n\n  // Private member variables\n  var m_that = this,\n      m_viewer = null;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return viewer referenced by the interactor style\n   *\n   * @returns {null}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.viewer = function() {\n    return m_viewer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set viewer for the interactor style\n   *\n   * @param viewer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setViewer = function(viewer) {\n    if (viewer !== m_viewer) {\n      m_viewer = viewer;\n      $(m_viewer).on(vgl.event.mousePress, m_that.handleMouseDown);\n      $(m_viewer).on(vgl.event.mouseRelease, m_that.handleMouseUp);\n      $(m_viewer).on(vgl.event.mouseMove, m_that.handleMouseMove);\n      $(m_viewer).on(vgl.event.mouseOut, m_that.handleMouseOut);\n      $(m_viewer).on(vgl.event.mouseWheel, m_that.handleMouseWheel);\n      $(m_viewer).on(vgl.event.keyPress, m_that.handleKeyPress);\n      $(m_viewer).on(vgl.event.mouseContextMenu, m_that.handleContextMenu);\n      $(m_viewer).on(vgl.event.click, m_that.handleClick);\n      $(m_viewer).on(vgl.event.dblClick, m_that.handleDoubleClick);\n      this.modified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse down event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleMouseDown = function(event) {\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse up event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleMouseUp = function(event) {\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse move event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleMouseMove = function(event) {\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse move event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleMouseOut = function(event) {\n    return true;\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse wheel event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleMouseWheel = function(event) {\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle click event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleClick = function(event) {\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle double click event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleDoubleClick = function(event) {\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle key press event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleKeyPress = function(event) {\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle context menu event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleContextMenu = function(event) {\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Reset to default\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.reset = function() {\n    return true;\n  };\n\n  return this;\n};\n\ninherit(vgl.interactorStyle, vgl.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of trackballInteractorStyle\n *\n * @class vgl.trackballInteractorStyle\n * @returns {vgl.trackballInteractorStyle}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.trackballInteractorStyle = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.trackballInteractorStyle)) {\n    return new vgl.trackballInteractorStyle();\n  }\n  vgl.interactorStyle.call(this);\n  var m_that = this,\n      m_leftMouseBtnDown = false,\n      m_rightMouseBtnDown = false,\n      m_midMouseBtnDown = false,\n      m_outsideCanvas,\n      m_currPos = {x: 0, y: 0},\n      m_lastPos = {x: 0, y: 0};\n\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse move event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.handleMouseMove = function(event) {\n    var canvas = m_that.viewer().canvas(),\n        width = m_that.viewer().renderWindow().windowSize()[0],\n        height = m_that.viewer().renderWindow().windowSize()[1],\n        ren = m_that.viewer().renderWindow().activeRenderer(),\n        cam = ren.camera(), coords = m_that.viewer().relMouseCoords(event),\n        fp, fdp, fwp, dp1, dp2, wp1, wp2, coords, dx, dy, dz,\n        coords, m_zTrans;\n\n    m_outsideCanvas = false;\n    m_currPos = {x: 0, y: 0};\n\n    if ((coords.x < 0) || (coords.x > width)) {\n      m_currPos.x = 0;\n      m_outsideCanvas = true;\n    } else {\n      m_currPos.x = coords.x;\n    }\n    if ((coords.y < 0) || (coords.y > height)) {\n      m_currPos.y = 0;\n      m_outsideCanvas = true;\n    } else {\n      m_currPos.y = coords.y;\n    }\n    if (m_outsideCanvas === true) {\n      return;\n    }\n\n    fp = cam.focalPoint();\n    fwp = vec4.fromValues(fp[0], fp[1], fp[2], 1);\n    fdp = ren.worldToDisplay(fwp, cam.viewMatrix(),\n                              cam.projectionMatrix(), width, height);\n\n    dp1 = vec4.fromValues(m_currPos.x, m_currPos.y, fdp[2], 1.0);\n    dp2 = vec4.fromValues(m_lastPos.x, m_lastPos.y, fdp[2], 1.0);\n\n    wp1 = ren.displayToWorld(dp1, cam.viewMatrix(), cam.projectionMatrix(),\n                             width, height);\n    wp2 = ren.displayToWorld(dp2, cam.viewMatrix(), cam.projectionMatrix(),\n                             width, height);\n\n    dx = wp1[0] - wp2[0];\n    dy = wp1[1] - wp2[1];\n    dz = wp1[2] - wp2[2];\n\n    if (m_midMouseBtnDown) {\n      cam.pan(-dx, -dy, -dz);\n      m_that.viewer().render();\n    }\n    if (m_leftMouseBtnDown) {\n      cam.rotate((m_lastPos.x - m_currPos.x),\n      (m_lastPos.y - m_currPos.y));\n      ren.resetCameraClippingRange();\n      m_that.viewer().render();\n    }\n    if (m_rightMouseBtnDown) {\n      /// 2.0 is the speed up factor\n      m_zTrans = 2.0 * (m_currPos.y - m_lastPos.y) / height;\n\n      // Calculate zoom scale here\n      if (m_zTrans > 0) {\n        cam.zoom(1 - Math.abs(m_zTrans));\n      } else {\n        cam.zoom(1 + Math.abs(m_zTrans));\n      }\n      ren.resetCameraClippingRange();\n      m_that.viewer().render();\n    }\n    m_lastPos.x = m_currPos.x;\n    m_lastPos.y = m_currPos.y;\n    return false;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse down event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.handleMouseDown = function(event) {\n    var coords;\n\n    if (event.button === 0) {\n      m_leftMouseBtnDown = true;\n    }\n    if (event.button === 1) {\n      m_midMouseBtnDown = true;\n    }\n    if (event.button === 2) {\n      m_rightMouseBtnDown = true;\n    }\n    coords = m_that.view.relMouseCoords(event);\n    if (coords.x < 0) {\n      m_lastPos.x = 0;\n    } else {\n      m_lastPos.x = coords.x;\n    }\n    if (coords.y < 0) {\n      m_lastPos.y = 0;\n    } else {\n      m_lastPos.y = coords.y;\n    }\n    return false;\n  };\n\n  // @note We never get mouse up from scroll bar: See the bug report here\n  // http://bugs.jquery.com/ticket/8184\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse up event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.handleMouseUp = function(event) {\n    if (event.button === 0) {\n      m_leftMouseBtnDown = false;\n    }\n    if (event.button === 1) {\n      m_midMouseBtnDown = false;\n    }\n    if (event.button === 2) {\n      m_rightMouseBtnDown = false;\n    }\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse wheel event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleMouseWheel = function(event) {\n    var ren = m_that.viewer().renderWindow().activeRenderer(),\n        cam = ren.camera();\n\n    // TODO Compute zoom factor intelligently\n    if (event.originalEvent.wheelDelta < 0) {\n      cam.zoom(0.9);\n    } else {\n      cam.zoom(1.1);\n    }\n    ren.resetCameraClippingRange();\n    m_that.viewer().render();\n    return true;\n  };\n\n  return this;\n};\ninherit(vgl.trackballInteractorStyle, vgl.interactorStyle);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of pvwInteractorStyle (for ParaViewWeb)\n *\n * @class vgl.pvwInteractorStyle\n * @returns {vgl.pvwInteractorStyle}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.pvwInteractorStyle = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.pvwInteractorStyle)) {\n    return new vgl.pvwInteractorStyle();\n  }\n  vgl.trackballInteractorStyle.call(this);\n  var m_that = this,\n      m_leftMouseButtonDown = false,\n      m_rightMouseButtonDown = false,\n      m_middleMouseButtonDown = false,\n      m_width,\n      m_height,\n      m_renderer,\n      m_camera,\n      m_outsideCanvas,\n      m_coords,\n      m_currentMousePos,\n      m_focalPoint,\n      m_focusWorldPt,\n      m_focusDisplayPt,\n      m_displayPt1,\n      m_displayPt2,\n      m_worldPt1,\n      m_worldPt2,\n      m_dx,\n      m_dy,\n      m_dz,\n      m_zTrans,\n      m_mouseLastPos = {\n        x: 0,\n        y: 0\n      };\n\n  function render() {\n    m_renderer.resetCameraClippingRange();\n    m_that.viewer().render();\n  }\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse move event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.handleMouseMove = function(event) {\n    var rens = [], i = null, secCameras = [], deltaxy = null;\n        m_width = m_that.viewer().renderWindow().windowSize()[0];\n        m_height = m_that.viewer().renderWindow().windowSize()[1];\n        m_renderer = m_that.viewer().renderWindow().activeRenderer();\n        m_camera = m_renderer.camera();\n        m_outsideCanvas = false;\n        m_coords = m_that.viewer().relMouseCoords(event);\n        m_currentMousePos = {\n          x: 0,\n          y: 0\n        };\n\n    // Get secondary cameras\n    rens = m_that.viewer().renderWindow().renderers();\n    for (i = 0; i < rens.length; ++i) {\n      if (m_renderer !== rens[i]) {\n        secCameras.push(rens[i].camera());\n      }\n    }\n\n    if ((m_coords.x < 0) || (m_coords.x > m_width)) {\n      m_currentMousePos.x = 0;\n      m_outsideCanvas = true;\n    } else {\n      m_currentMousePos.x = m_coords.x;\n    }\n    if ((m_coords.y < 0) || (m_coords.y > m_height)) {\n      m_currentMousePos.y = 0;\n      m_outsideCanvas = true;\n    } else {\n      m_currentMousePos.y = m_coords.y;\n    }\n    if (m_outsideCanvas === true) {\n      return;\n    }\n    m_focalPoint = m_camera.focalPoint();\n    m_focusWorldPt = vec4.fromValues(m_focalPoint[0], m_focalPoint[1], m_focalPoint[2], 1);\n    m_focusDisplayPt = m_renderer.worldToDisplay(m_focusWorldPt, m_camera.viewMatrix(),\n      m_camera.projectionMatrix(), m_width, m_height);\n    m_displayPt1 = vec4.fromValues(\n      m_currentMousePos.x, m_currentMousePos.y, m_focusDisplayPt[2], 1.0);\n    m_displayPt2 = vec4.fromValues(\n      m_mouseLastPos.x, m_mouseLastPos.y, m_focusDisplayPt[2], 1.0);\n    m_worldPt1 = m_renderer.displayToWorld(\n      m_displayPt1, m_camera.viewMatrix(), m_camera.projectionMatrix(), m_width, m_height);\n    m_worldPt2 = m_renderer.displayToWorld(\n      m_displayPt2, m_camera.viewMatrix(), m_camera.projectionMatrix(), m_width, m_height);\n\n    m_dx = m_worldPt1[0] - m_worldPt2[0];\n    m_dy = m_worldPt1[1] - m_worldPt2[1];\n    m_dz = m_worldPt1[2] - m_worldPt2[2];\n\n    if (m_middleMouseButtonDown) {\n      m_camera.pan(-m_dx, -m_dy, -m_dz);\n      render();\n    }\n    if (m_leftMouseButtonDown) {\n      deltaxy = [(m_mouseLastPos.x - m_currentMousePos.x),\n      (m_mouseLastPos.y - m_currentMousePos.y)];\n      m_camera.rotate(deltaxy[0], deltaxy[1]);\n\n      // Apply rotation to all other cameras\n      for (i = 0; i < secCameras.length; ++i) {\n        secCameras[i].rotate(deltaxy[0], deltaxy[1]);\n      }\n\n      // Apply rotation to all other cameras\n      for (i = 0; i < rens.length; ++i) {\n        rens[i].resetCameraClippingRange();\n      }\n      render();\n    }\n    if (m_rightMouseButtonDown) {\n      /// 2.0 is the speed up factor.\n      m_zTrans = 2.0 * (m_currentMousePos.y - m_mouseLastPos.y) / m_height;\n\n      // Calculate zoom scale here\n      if (m_zTrans > 0) {\n        m_camera.zoom(1 - Math.abs(m_zTrans));\n      } else {\n        m_camera.zoom(1 + Math.abs(m_zTrans));\n      }\n      render();\n    }\n    m_mouseLastPos.x = m_currentMousePos.x;\n    m_mouseLastPos.y = m_currentMousePos.y;\n    return false;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse down event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.handleMouseDown = function(event) {\n    if (event.button === 0) {\n      m_leftMouseButtonDown = true;\n    }\n    if (event.button === 1) {\n      m_middleMouseButtonDown = true;\n    }\n    if (event.button === 2) {\n      m_rightMouseButtonDown = true;\n    }\n    m_coords = m_that.viewer().relMouseCoords(event);\n    if (m_coords.x < 0) {\n      m_mouseLastPos.x = 0;\n    } else {\n      m_mouseLastPos.x = m_coords.x;\n    }\n    if (m_coords.y < 0) {\n      m_mouseLastPos.y = 0;\n    } else {\n      m_mouseLastPos.y = m_coords.y;\n    }\n    return false;\n  };\n\n  // @note We never get mouse up from scroll bar: See the bug report here\n  // http://bugs.jquery.com/ticket/8184\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse up event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.handleMouseUp = function(event) {\n    var canvas = m_that.viewer().canvas();\n    if (event.button === 0) {\n      m_leftMouseButtonDown = false;\n    }\n    if (event.button === 1) {\n      m_middleMouseButtonDown = false;\n    }\n    if (event.button === 2) {\n      m_rightMouseButtonDown = false;\n    }\n    return false;\n  };\n\n  return this;\n};\ninherit(vgl.pvwInteractorStyle, vgl.trackballInteractorStyle);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global window, vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class viewer\n *\n * @param canvas\n * @returns {vgl.viewer}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.viewer = function(canvas) {\n  'use strict';\n\n  if (!(this instanceof vgl.viewer)) {\n    return new vgl.viewer(canvas);\n  }\n\n  vgl.object.call(this);\n\n  var m_that = this,\n      m_canvas = canvas,\n      m_ready = true,\n      m_interactorStyle = null,\n      m_renderer = vgl.renderer(),\n      m_renderWindow = vgl.renderWindow(m_canvas);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get canvas of the viewer\n   *\n   * @returns {*}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.canvas = function() {\n    return m_canvas;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return render window of the viewer\n   *\n   * @returns {vgl.renderWindow}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.renderWindow = function() {\n    return m_renderWindow;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize the viewer\n   *\n   * This is a must call or otherwise render context may not initialized\n   * properly.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.init = function() {\n    if (m_renderWindow !== null) {\n      m_renderWindow.createWindow();\n    }\n    else {\n      console.log(\"[ERROR] No render window attached\");\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get interactor style of the viewer\n   *\n   * @returns {vgl.interactorStyle}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.interactorStyle = function() {\n    return m_interactorStyle;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set interactor style to be used by the viewer\n   *\n   * @param {vgl.interactorStyle} style\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setInteractorStyle = function(style) {\n    if (style !== m_interactorStyle) {\n      m_interactorStyle = style;\n      m_interactorStyle.setViewer(this);\n      this.modified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse down event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleMouseDown = function(event) {\n    if (m_ready === true) {\n      var fixedEvent = $.event.fix(event || window.event);\n      // Only prevent default action for right mouse button\n      if (event.button === 2) {\n        fixedEvent.preventDefault();\n      }\n      fixedEvent.state = 'down';\n      fixedEvent.type = vgl.event.mousePress;\n      $(m_that).trigger(fixedEvent);\n    }\n\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse up event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleMouseUp = function(event) {\n    if (m_ready === true) {\n      var fixedEvent = $.event.fix(event || window.event);\n      fixedEvent.preventDefault();\n      fixedEvent.state = 'up';\n      fixedEvent.type = vgl.event.mouseRelease;\n      $(m_that).trigger(fixedEvent);\n    }\n\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse move event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleMouseMove = function(event) {\n    if (m_ready === true) {\n      var fixedEvent = $.event.fix(event || window.event);\n      fixedEvent.preventDefault();\n      fixedEvent.type = vgl.event.mouseMove;\n      $(m_that).trigger(fixedEvent);\n    }\n\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse wheel scroll\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleMouseWheel = function(event) {\n    if (m_ready === true) {\n      var fixedEvent = $.event.fix(event || window.event);\n      fixedEvent.preventDefault();\n      fixedEvent.type = vgl.event.mouseWheel;\n      $(m_that).trigger(fixedEvent);\n    }\n\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse move event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleMouseOut = function(event) {\n    if (m_ready === true) {\n      var fixedEvent = $.event.fix(event || window.event);\n      fixedEvent.preventDefault();\n      fixedEvent.type = vgl.event.mouseOut;\n      $(m_that).trigger(fixedEvent);\n    }\n\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle key press event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleKeyPress = function(event) {\n    if (m_ready === true) {\n      var fixedEvent = $.event.fix(event || window.event);\n      fixedEvent.preventDefault();\n      fixedEvent.type = vgl.event.keyPress;\n      $(m_that).trigger(fixedEvent);\n    }\n\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle context menu event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleContextMenu = function(event) {\n    if (m_ready === true) {\n      var fixedEvent = $.event.fix(event || window.event);\n      fixedEvent.preventDefault();\n      fixedEvent.type = vgl.event.contextMenu;\n      $(m_that).trigger(fixedEvent);\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle click event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleClick = function(event) {\n   if (m_ready === true) {\n      var fixedEvent = $.event.fix(event || window.event);\n      fixedEvent.preventDefault();\n      fixedEvent.type = vgl.event.click;\n      $(m_that).trigger(fixedEvent);\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle double click event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleDoubleClick = function(event) {\n    if (m_ready === true) {\n      var fixedEvent = $.event.fix(event || window.event);\n      fixedEvent.preventDefault();\n      fixedEvent.type = vgl.event.dblClick;\n      $(m_that).trigger(fixedEvent);\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get mouse coodinates related to canvas\n   *\n   * @param event\n   * @returns {{x: number, y: number}}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.relMouseCoords = function(event) {\n    if (event.pageX === undefined || event.pageY === undefined) {\n      throw \"Missing attributes pageX and pageY on the event\";\n    }\n\n    var totalOffsetX = 0,\n        totalOffsetY = 0,\n        canvasX = 0,\n        canvasY = 0,\n        currentElement = m_canvas;\n\n    do {\n      totalOffsetX += currentElement.offsetLeft - currentElement.scrollLeft;\n      totalOffsetY += currentElement.offsetTop - currentElement.scrollTop;\n    } while (currentElement = currentElement.offsetParent);\n\n    canvasX = event.pageX - totalOffsetX;\n    canvasY = event.pageY - totalOffsetY;\n\n    return {\n      x: canvasX,\n      y: canvasY\n    };\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Render\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.render = function() {\n    m_renderWindow.render();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Bind canvas mouse events to their default handlers\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.bindEventHandlers = function() {\n    $(m_canvas).on('mousedown', this.handleMouseDown);\n    $(m_canvas).on('mouseup', this.handleMouseUp);\n    $(m_canvas).on('mousemove', this.handleMouseMove);\n    $(m_canvas).on('mousewheel', this.handleMouseWheel);\n    $(m_canvas).on('contextmenu', this.handleContextMenu);\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Undo earlier binded  handlers for canvas mouse events\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.unbindEventHandlers = function() {\n    $(m_canvas).off('mousedown', this.handleMouseDown);\n    $(m_canvas).off('mouseup', this.handleMouseUp);\n    $(m_canvas).off('mousemove', this.handleMouseMove);\n    $(m_canvas).off('mousewheel', this.handleMouseWheel);\n    $(m_canvas).off('contextmenu', this.handleContextMenu);\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function() {\n    this.bindEventHandlers();\n    m_renderWindow.addRenderer(m_renderer);\n  }\n\n  this._init();\n  return this;\n};\n\ninherit(vgl.viewer, vgl.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global gl, vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class shader\n *\n * @param type\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.shader = function(type) {\n  'use strict';\n\n  if (!(this instanceof vgl.shader)) {\n    return new vgl.shader(type);\n  }\n  vgl.object.call(this);\n\n  var m_shaderHandle = null,\n      m_compileTimestamp = vgl.timestamp(),\n      m_shaderType = type,\n      m_shaderSource = \"\";\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get shader handle\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.shaderHandle = function() {\n    return m_shaderHandle;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get type of the shader\n   *\n   * @returns {*}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.shaderType = function() {\n    return m_shaderType;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get shader source\n   *\n   * @returns {string}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.shaderSource = function() {\n    return m_shaderSource;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set shader source\n   *\n   * @param {string} source\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.setShaderSource = function(source) {\n    m_shaderSource = source;\n    this.modified();\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compile the shader\n   *\n   * @returns {null}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.compile = function() {\n    if (this.getMTime() < m_compileTimestamp.getMTime()) {\n      return m_shaderHandle;\n    }\n\n    gl.deleteShader(m_shaderHandle);\n    m_shaderHandle = gl.createShader(m_shaderType);\n    gl.shaderSource(m_shaderHandle, m_shaderSource);\n    gl.compileShader(m_shaderHandle);\n\n    // See if it compiled successfully\n    if (!gl.getShaderParameter(m_shaderHandle, gl.COMPILE_STATUS)) {\n      console.log(\"[ERROR] An error occurred compiling the shaders: \"\n                  + gl.getShaderInfoLog(m_shaderHandle));\n      console.log(m_shaderSource);\n      gl.deleteShader(m_shaderHandle);\n      return null;\n    }\n\n    m_compileTimestamp.modified();\n\n    return m_shaderHandle;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Attach shader to the program\n   *\n   * @param programHandle\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.attachShader = function(programHandle) {\n    gl.attachShader(programHandle, m_shaderHandle);\n  };\n};\n\ninherit(vgl.shader, vgl.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, gl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instace of class shaderProgram\n *\n * @class\n * @returns {vgl.shaderProgram}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.shaderProgram = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.shaderProgram)) {\n    return new vgl.shaderProgram();\n  }\n  vgl.materialAttribute.call(\n    this, vgl.materialAttributeType.ShaderProgram);\n\n  /** @private */\n  var m_programHandle = 0,\n      m_compileTimestamp = vgl.timestamp(),\n      m_shaders = [],\n      m_uniforms = [],\n      m_vertexAttributes = {},\n      m_uniformNameToLocation = {},\n      m_vertexAttributeNameToLocation = {};\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Query uniform location in the program\n   *\n   * @param name\n   * @returns {*}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.queryUniformLocation = function(name) {\n    return gl.getUniformLocation(m_programHandle, name);\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Query attribute location in the program\n   *\n   * @param name\n   * @returns {*}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.queryAttributeLocation = function(name) {\n    return gl.getAttribLocation(m_programHandle, name);\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Add a new shader to the program\n   *\n   * @param shader\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.addShader = function(shader) {\n    if (m_shaders.indexOf(shader) > -1) {\n      return false;\n    }\n\n    var i;\n    for (i = 0; i < m_shaders.length; ++i) {\n      if (m_shaders[i].shaderType() === shader.shaderType()) {\n        m_shaders.splice(m_shaders.indexOf(shader), 1);\n      }\n    }\n\n    m_shaders.push(shader);\n\n    this.modified();\n    return true;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Add a new uniform to the program\n   *\n   * @param uniform\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.addUniform = function(uniform) {\n    if (m_uniforms.indexOf(uniform) > -1) {\n      return false;\n    }\n\n    m_uniforms.push(uniform);\n    this.modified();\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Add a new vertex attribute to the program\n   *\n   * @param attr\n   * @param key\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.addVertexAttribute = function(attr, key) {\n    m_vertexAttributes[key] = attr;\n\n    this.modified();\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get uniform location\n   *\n   * This method does not perform any query into the program but relies on\n   * the fact that it depends on a call to queryUniformLocation earlier.\n   *\n   * @param name\n   * @returns {number}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.uniformLocation = function(name) {\n    return m_uniformNameToLocation[name];\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get attribute location\n   *\n   * This method does not perform any query into the program but relies on the\n   * fact that it depends on a call to queryUniformLocation earlier.\n   *\n   * @param name\n   * @returns {number}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.attributeLocation = function(name) {\n    return m_vertexAttributeNameToLocation[name];\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get uniform object using name as the key\n   *\n   * @param name\n   * @returns {*}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.uniform = function(name) {\n    var i;\n    for (i = 0; i < m_uniforms.length; ++i) {\n      if (m_uniforms[i].name() === name) {\n        return m_uniforms[i];\n      }\n    }\n\n    return null;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update all uniforms\n   *\n   * This method should be used directly unless required\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.updateUniforms = function() {\n    var i;\n\n    for (i = 0; i < m_uniforms.length; ++i) {\n      m_uniforms[i].callGL(m_uniformNameToLocation[m_uniforms[i].name()]);\n    }\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Link shader program\n   *\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.link = function() {\n    gl.linkProgram(m_programHandle);\n\n    // If creating the shader program failed, alert\n    if (!gl.getProgramParameter(m_programHandle, gl.LINK_STATUS)) {\n      console.log(\"[ERROR] Unable to initialize the shader program.\");\n      return false;\n    }\n\n    return true;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Use the shader program\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.use = function() {\n    gl.useProgram(m_programHandle);\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Peform any clean up required when the program gets deleted\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.cleanUp = function() {\n    this.deleteVertexAndFragment();\n    this.deleteProgram();\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Delete the shader program\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.deleteProgram = function() {\n    gl.deleteProgram(m_programHandle);\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Delete vertex and fragment shaders\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.deleteVertexAndFragment = function() {\n    var i;\n    for (i = 0; i < m_shaders.length; ++i) {\n      gl.deleteShader(m_shaders[i].shaderHandle());\n    }\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Bind the program with its shaders\n   *\n   * @param renderState\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.bind = function(renderState) {\n    var i = 0;\n\n    if (m_programHandle === 0\n        || (m_compileTimestamp.getMTime() < this.getMTime())) {\n      m_programHandle = gl.createProgram();\n\n      if (m_programHandle === 0) {\n        console.log(\"[ERROR] Cannot create Program Object\");\n        return false;\n      }\n\n      // Compile shaders\n      for (i = 0; i < m_shaders.length; ++i) {\n        m_shaders[i].compile();\n        m_shaders[i].attachShader(m_programHandle);\n      }\n\n      this.bindAttributes();\n\n      // link program\n      if (!this.link()) {\n        console.log(\"[ERROR] Failed to link Program\");\n        this.cleanUp();\n      }\n\n      this.use();\n      this.bindUniforms();\n      m_compileTimestamp.modified();\n    }\n    else {\n      this.use();\n    }\n\n    // Call update callback.\n    for (i = 0; i < m_uniforms.length; ++i) {\n      m_uniforms[i].update(renderState, this);\n    }\n\n    // Now update values to GL.\n    this.updateUniforms();\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Undo binding of the shader program\n   *\n   * @param renderState\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.undoBind = function(renderState) {\n    // Do nothing\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Bind vertex data\n   *\n   * @param renderState\n   * @param key\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.bindVertexData = function(renderState, key) {\n    if (m_vertexAttributes.hasOwnProperty(key)) {\n      m_vertexAttributes[key].bindVertexData(renderState, key);\n    }\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Undo bind vetex data\n   *\n   * @param renderState\n   * @param key\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.undoBindVertexData = function(renderState, key) {\n    if (m_vertexAttributes.hasOwnProperty(key)) {\n      m_vertexAttributes[key].undoBindVertexData(renderState, key);\n    }\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Bind uniforms\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.bindUniforms = function() {\n    var i;\n    for (i = 0; i < m_uniforms.length; ++i) {\n      m_uniformNameToLocation[m_uniforms[i].name()] = this\n          .queryUniformLocation(m_uniforms[i].name());\n    }\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Bind vertex attributes\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.bindAttributes = function() {\n    var key, name;\n    for (key in m_vertexAttributes) {\n      name = m_vertexAttributes[key].name();\n      gl.bindAttribLocation(m_programHandle, key, name);\n      m_vertexAttributeNameToLocation[name] = key;\n    }\n  };\n\n  return this;\n};\n\ninherit(vgl.shaderProgram, vgl.materialAttribute);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global Uint8Array, vgl, gl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n///////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class texture\n *\n * @class\n * @returns {vgl.texture}\n */\n///////////////////////////////////////////////////////////////////////////////\nvgl.texture = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.texture)) {\n    return new vgl.texture();\n  }\n  vgl.materialAttribute.call(\n    this, vgl.materialAttributeType.Texture);\n\n  this.m_width = 0;\n  this.m_height = 0;\n  this.m_depth = 0;\n\n  this.m_textureHandle = null;\n  this.m_textureUnit = 0;\n\n  this.m_pixelFormat = null;\n  this.m_pixelDataType = null;\n\n  this.m_internalFormat = null;\n\n  this.m_image = null;\n\n  var m_setupTimestamp = vgl.timestamp(),\n      m_that = this;\n\n  function activateTextureUnit() {\n    switch (m_that.m_textureUnit) {\n      case 0:\n        gl.activeTexture(gl.TEXTURE0);\n        break;\n      case 1:\n        gl.activeTexture(gl.TEXTURE1);\n        break;\n      case 2:\n        gl.activeTexture(gl.TEXTURE2);\n        break;\n      case 3:\n        gl.activeTexture(gl.TEXTURE3);\n        break;\n      case 4:\n        gl.activeTexture(gl.TEXTURE4);\n        break;\n      case 5:\n        gl.activeTexture(gl.TEXTURE5);\n        break;\n      case 6:\n        gl.activeTexture(gl.TEXTURE6);\n        break;\n      case 7:\n        gl.activeTexture(gl.TEXTURE7);\n        break;\n      case 8:\n        gl.activeTexture(gl.TEXTURE8);\n        break;\n      case 9:\n        gl.activeTexture(gl.TEXTURE9);\n        break;\n      case 10:\n        gl.activeTexture(gl.TEXTURE10);\n        break;\n      case 11:\n        gl.activeTexture(gl.TEXTURE11);\n        break;\n      case 12:\n        gl.activeTexture(gl.TEXTURE12);\n        break;\n      case 13:\n        gl.activeTexture(gl.TEXTURE13);\n        break;\n      case 14:\n        gl.activeTexture(gl.TEXTURE14);\n        break;\n      case 15:\n        gl.activeTexture(gl.TEXTURE15);\n        break;\n      default:\n        throw \"[error] Texture unit \"  + this.m_textureUnit +\n              \" is not supported\";\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create texture, update parameters, and bind data\n   *\n   * @param renderState\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.setup = function(renderState) {\n    activateTextureUnit();\n\n    gl.deleteTexture(this.m_textureHandle);\n    this.m_textureHandle = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, this.m_textureHandle);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\n    if (this.m_image !== null) {\n      this.updateDimensions();\n      this.computeInternalFormatUsingImage();\n\n      // console.log(\"m_internalFormat \" + this.m_internalFormat);\n      // console.log(\"m_pixelFormat \" + this.m_pixelFormat);\n      // console.log(\"m_pixelDataType \" + this.m_pixelDataType);\n\n      // FOR now support only 2D textures\n      gl.texImage2D(gl.TEXTURE_2D, 0, this.m_internalFormat,\n                    this.m_pixelFormat, this.m_pixelDataType, this.m_image);\n    }\n    else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, this.m_internalFormat,\n                    this.m_pixelFormat, this.m_pixelDataType, null);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    m_setupTimestamp.modified();\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create texture and if already created use it\n   *\n   * @param renderState\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.bind = function(renderState) {\n    // TODO Call setup via material setup\n    if (this.getMTime() > m_setupTimestamp.getMTime()) {\n      this.setup(renderState);\n    }\n\n    activateTextureUnit();\n    gl.bindTexture(gl.TEXTURE_2D, this.m_textureHandle);\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Turn off the use of this texture\n   *\n   * @param renderState\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.undoBind = function(renderState) {\n    gl.bindTexture(gl.TEXTURE_2D, null);\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get image used by the texture\n   *\n   * @returns {vgl.image}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.image = function() {\n    return this.m_image;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set image for the texture\n   *\n   * @param {vgl.image} image\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.setImage = function(image) {\n    if (image !== null) {\n      this.m_image = image;\n      this.updateDimensions();\n      this.modified();\n      return true;\n    }\n\n    return false;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get texture unit of the texture\n   *\n   * @returns {number}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.textureUnit = function() {\n    return this.m_textureUnit;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set texture unit of the texture. Default is 0.\n   *\n   * @param {number} unit\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.setTextureUnit = function(unit) {\n    if (this.m_textureUnit === unit) {\n      return false;\n    }\n\n    this.m_textureUnit = unit;\n    this.modified();\n    return true;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get width of the texture\n   *\n   * @returns {*}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.width = function() {\n    return this.m_width;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set width of the texture\n   *\n   * @param {number} width\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.setWidth = function(width) {\n    if (this.m_image === null) {\n      return false;\n    }\n\n    this.m_width = width;\n    this.modified();\n\n    return true;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get depth of the texture\n   *\n   * @returns {number}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.depth = function() {\n    return this.m_depth;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set depth of the texture\n   *\n   * @param {number} depth\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.setDepth = function(depth) {\n    if (this.m_image === null) {\n      return false;\n    }\n\n    this.m_depth = depth;\n    this.modified();\n    return true;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get the texture handle (id) of the texture\n   *\n   * @returns {*}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.textureHandle = function() {\n    return this.m_textureHandle;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get internal format of the texture\n   *\n   * @returns {*}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.internalFormat = function() {\n    return this.m_internalFormat;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set internal format of the texture\n   *\n   * @param internalFormat\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.setInternalFormat = function(internalFormat) {\n    if (this.m_internalFormat !== internalFormat) {\n      this.m_internalFormat = internalFormat;\n      this.modified();\n      return true;\n    }\n\n    return false;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get pixel format of the texture\n   *\n   * @returns {*}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.pixelFormat = function() {\n    return this.m_pixelFormat;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set pixel format of the texture\n   *\n   * @param pixelFormat\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.setPixelFormat = function(pixelFormat) {\n    if (this.m_image === null) {\n      return false;\n    }\n\n    this.m_pixelFormat = pixelFormat;\n    this.modified();\n    return true;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get pixel data type\n   *\n   * @returns {*}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.pixelDataType = function() {\n    return this.m_pixelDataType;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set pixel data type\n   *\n   * @param pixelDataType\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.setPixelDataType = function(pixelDataType) {\n    if (this.m_image === null) {\n      return false;\n    }\n\n    this.m_pixelDataType = pixelDataType;\n\n    this.modified();\n\n    return true;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute internal format of the texture\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.computeInternalFormatUsingImage = function() {\n    // Currently image does not define internal format\n    // and hence it's pixel format is the only way to query\n    // information on how color has been stored.\n    // switch (this.m_image.pixelFormat()) {\n    // case gl.RGB:\n    // this.m_internalFormat = gl.RGB;\n    // break;\n    // case gl.RGBA:\n    // this.m_internalFormat = gl.RGBA;\n    // break;\n    // case gl.Luminance:\n    // this.m_internalFormat = gl.Luminance;\n    // break;\n    // case gl.LuminanceAlpha:\n    // this.m_internalFormat = gl.LuminanceAlpha;\n    // break;\n    // // Do nothing when image pixel format is none or undefined.\n    // default:\n    // break;\n    // };\n\n    // TODO Fix this\n    this.m_internalFormat = gl.RGBA;\n    this.m_pixelFormat = gl.RGBA;\n    this.m_pixelDataType = gl.UNSIGNED_BYTE;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update texture dimensions\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.updateDimensions = function() {\n    if (this.m_image !== null) {\n      this.m_width = this.m_image.width;\n      this.m_height = this.m_image.height;\n      this.m_depth = 0; // Only 2D images are supported now\n    }\n  };\n\n  return this;\n};\n\ninherit(vgl.texture, vgl.materialAttribute);\n\n///////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class lookupTable\n *\n * @class\n * @returns {vgl.lookupTable}\n */\n///////////////////////////////////////////////////////////////////////////////\nvgl.lookupTable = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.lookupTable)) {\n    return new vgl.lookupTable();\n  }\n  vgl.texture.call(this);\n\n  var m_setupTimestamp = vgl.timestamp(),\n      m_range = [0,0];\n\n  this.m_colorTable = //paraview bwr colortable\n    [0.07514311,0.468049805,1,1,\n     0.247872569,0.498782363,1,1,\n     0.339526309,0.528909511,1,1,\n     0.409505078,0.558608486,1,1,\n     0.468487184,0.588057293,1,1,\n     0.520796675,0.617435078,1,1,\n     0.568724526,0.646924167,1,1,\n     0.613686735,0.676713218,1,1,\n     0.656658579,0.707001303,1,1,\n     0.698372844,0.738002964,1,1,\n     0.739424025,0.769954435,1,1,\n     0.780330104,0.803121429,1,1,\n     0.821573924,0.837809045,1,1,\n     0.863634967,0.874374691,1,1,\n     0.907017747,0.913245283,1,1,\n     0.936129275,0.938743558,0.983038586,1,\n     0.943467973,0.943498599,0.943398095,1,\n     0.990146732,0.928791426,0.917447482,1,\n     1,0.88332677,0.861943246,1,\n     1,0.833985467,0.803839606,1,\n     1,0.788626485,0.750707739,1,\n     1,0.746206642,0.701389973,1,\n     1,0.70590052,0.654994046,1,\n     1,0.667019783,0.610806959,1,\n     1,0.6289553,0.568237474,1,\n     1,0.591130233,0.526775617,1,\n     1,0.552955184,0.485962266,1,\n     1,0.513776083,0.445364274,1,\n     1,0.472800903,0.404551679,1,\n     1,0.428977855,0.363073592,1,\n     1,0.380759558,0.320428137,1,\n     0.961891484,0.313155629,0.265499262,1,\n     0.916482116,0.236630659,0.209939162,1].map(\n             function(x) {return x*255;});\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create lookup table, initialize parameters, and bind data to it\n   *\n   * @param {vgl.renderState} renderState\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.setup = function(renderState) {\n    if (this.textureUnit() === 0) {\n      gl.activeTexture(gl.TEXTURE0);\n    } else if (this.textureUnit() === 1) {\n      gl.activeTexture(gl.TEXTURE1);\n    }\n\n    gl.deleteTexture(this.m_textureHandle);\n    this.m_textureHandle = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, this.m_textureHandle);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n    this.m_width = this.m_colorTable.length/4;\n    this.m_height = 1;\n    this.m_depth = 0;\n    gl.texImage2D(gl.TEXTURE_2D,\n                  0, gl.RGBA, this.m_width, this.m_height, this.m_depth,\n                  gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array(this.m_colorTable));\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    m_setupTimestamp.modified();\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get color table used by the lookup table\n   *\n   * @returns {*}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.colorTable = function() {\n    return this.m_colorTable;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set color table used by the lookup table\n   *\n   * @param colors\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.setColorTable = function(colors) {\n    if (this.m_colorTable === colors) {\n      return false;\n    }\n\n    this.m_colorTable = colors;\n    this.modified();\n    return true;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get scalar range\n   *\n   * @returns {Array}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.range = function() {\n    return m_range;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set scalar range for the lookup table\n   *\n   * @param range\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.setRange = function(range) {\n    if (m_range === range) {\n      return false;\n    }\n    m_range = range;\n    this.modified();\n    return true;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Given a [min,max] range update the lookup table range\n   *\n   * @param range\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.updateRange = function(range) {\n    if (!(range instanceof Array)) {\n      console.log('[error] Invalid data type for range. Requires array [min,max]');\n    }\n\n    if (range[0] < m_range[0]) {\n      m_range[0] = range[0];\n      this.modified();\n    }\n\n    if (range[1] > m_range[1]) {\n      m_range[1] = range[1];\n      this.modified();\n    }\n  };\n\n  return this;\n};\n\ninherit(vgl.lookupTable, vgl.texture);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, gl, ogs, vec2, vec3, vec4, mat3, mat4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n///////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class uniform\n *\n * @param type\n * @param name\n * @returns {vgl.uniform} OpenGL uniform encapsulation\n */\n///////////////////////////////////////////////////////////////////////////////\nvgl.uniform = function(type, name) {\n  'use strict';\n\n  if (!(this instanceof vgl.uniform)) {\n    return new vgl.uniform();\n  }\n\n  this.getTypeNumberOfComponents = function(type) {\n    switch (type) {\n      case gl.FLOAT:\n      case gl.INT:\n      case gl.BOOL:\n        return 1;\n\n      case gl.FLOAT_VEC2:\n      case gl.INT_VEC2:\n      case gl.BOOL_VEC2:\n        return 2;\n\n      case gl.FLOAT_VEC3:\n      case gl.INT_VEC3:\n      case gl.BOOLT_VEC3:\n        return 3;\n\n      case gl.FLOAT_VEC4:\n      case gl.INT_VEC4:\n      case gl.BOOL_VEC4:\n        return 4;\n\n      case gl.FLOAT_MAT3:\n        return 9;\n\n      case gl.FLOAT_MAT4:\n        return 16;\n\n      default:\n        return 0;\n    }\n  };\n\n  var m_type = type,\n      m_name = name,\n      m_dataArray = [],\n      m_numberOfElements = 1;\n\n  m_dataArray.length = this.getTypeNumberOfComponents(m_type);\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get name of the uniform\n   *\n   * @returns {*}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.name = function() {\n    return m_name;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get type of the uniform\n   *\n   * @returns {*}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.type = function() {\n    return m_type;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get value of the uniform\n   *\n   * @returns {Array}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.get = function() {\n    return m_dataArray;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set value of the uniform\n   *\n   * @param value\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.set = function(value) {\n    var i = 0;\n    if (m_dataArray.length === 16) {\n      for (i = 0; i < 16; ++i) {\n        m_dataArray[i] = value[i];\n      }\n    }\n    else if (m_dataArray.length === 9) {\n      for (i = 0; i < 9; ++i) {\n        m_dataArray[i] = value[i];\n      }\n    }\n    else if (m_dataArray.length === 4) {\n      for (i = 0; i < 4; ++i) {\n        m_dataArray[i] = value[i];\n      }\n    }\n    else if (m_dataArray.length === 3) {\n      for (i = 0; i < 3; ++i) {\n        m_dataArray[i] = value[i];\n      }\n    }\n    else if (m_dataArray.length === 2) {\n      for (i = 0; i < 2; ++i) {\n        m_dataArray[i] = value[i];\n      }\n    }\n    else {\n      m_dataArray[0] = value;\n    }\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Call GL and pass updated values to the current shader\n   *\n   * @param location\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.callGL = function(location) {\n    if (this.m_numberElements < 1) {\n      return;\n    }\n\n    switch (m_type) {\n      case gl.BOOL:\n      case gl.INT:\n        gl.uniform1iv(location, m_dataArray);\n        break;\n      case gl.FLOAT:\n        gl.uniform1fv(location, m_dataArray);\n        break;\n      case gl.FLOAT_VEC2:\n        gl.uniform2fv(location, m_dataArray);\n        break;\n      case gl.FLOAT_VEC3:\n        gl.uniform3fv(location, m_dataArray);\n        break;\n      case gl.FLOAT_VEC4:\n        gl.uniform4fv(location, m_dataArray);\n        break;\n      case gl.FLOAT_MAT3:\n        gl.uniformMatrix3fv(location, gl.FALSE, m_dataArray);\n        break;\n      case gl.FLOAT_MAT4:\n        gl.uniformMatrix4fv(location, gl.FALSE, m_dataArray);\n        break;\n      default:\n        break;\n    }\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Virtual method to update the uniform\n   *\n   * Should be implemented by the derived class.\n   *\n   * @param renderState\n   * @param program\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.update = function(renderState, program) {\n    // Should be implemented by the derived class\n  };\n\n  return this;\n};\n\n///////////////////////////////////////////////////////////////////////////////\n/**\n * Create new instance of class modelViewUniform\n *\n * @param name\n * @returns {vgl.modelViewUniform}\n */\n///////////////////////////////////////////////////////////////////////////////\nvgl.modelViewUniform = function(name) {\n  'use strict';\n\n  if (!(this instanceof vgl.modelViewUniform)) {\n    return new vgl.modelViewUniform(name);\n  }\n\n  if (name.length === 0) {\n    name = \"modelViewMatrix\";\n  }\n\n  vgl.uniform.call(this, gl.FLOAT_MAT4, name);\n\n  this.set(mat4.create());\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update the uniform given a render state and shader program\n   *\n   * @param {vgl.renderState} renderState\n   * @param {vgl.shaderProgram} program\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.update = function(renderState, program) {\n    this.set(renderState.m_modelViewMatrix);\n  };\n\n  return this;\n};\n\ninherit(vgl.modelViewUniform, vgl.uniform);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class projectionUniform\n *\n * @param name\n * @returns {vgl.projectionUniform}\n */\n///////////////////////////////////////////////////////////////////////////////\nvgl.projectionUniform = function(name) {\n  'use strict';\n\n  if (!(this instanceof vgl.projectionUniform)) {\n    return new vgl.projectionUniform(name);\n  }\n\n  if (name.length === 0) {\n    name = \"projectionMatrix\";\n  }\n\n  vgl.uniform.call(this, gl.FLOAT_MAT4, name);\n\n  this.set(mat4.create());\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update the uniform given a render state and shader program\n   *\n   * @param renderState\n   * @param program\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.update = function(renderState, program) {\n    this.set(renderState.m_projectionMatrix);\n  };\n\n  return this;\n};\n\ninherit(vgl.projectionUniform, vgl.uniform);\n\n///////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class floatUniform\n *\n * @param name\n * @param value\n * @returns {vgl.floatUniform}\n */\n///////////////////////////////////////////////////////////////////////////////\nvgl.floatUniform = function(name, value) {\n  'use strict';\n\n  if (!(this instanceof vgl.floatUniform)) {\n    return new vgl.floatUniform(name, value);\n  }\n\n  if (name.length === 0) {\n    name = \"floatUniform\";\n  }\n\n  value = value === undefined ? 1.0 : value;\n\n  vgl.uniform.call(this, gl.FLOAT, name);\n\n  this.set(value);\n};\n\ninherit(vgl.floatUniform, vgl.uniform);\n\n\n///////////////////////////////////////////////////////////////////////////////\n/**\n * Create new instance of class normalMatrixUniform\n *\n * @param name\n * @returns {vgl.normalMatrixUniform}\n */\n///////////////////////////////////////////////////////////////////////////////\nvgl.normalMatrixUniform = function(name) {\n  'use strict';\n\n  if (!(this instanceof vgl.normalMatrixUniform)) {\n    return new vgl.normalMatrixUniform(name);\n  }\n\n  if (name.length === 0) {\n    name = \"normalMatrix\";\n  }\n\n  vgl.uniform.call(this, gl.FLOAT_MAT4, name);\n\n  this.set(mat4.create());\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update the uniform given a render state and shader program\n   *\n   * @param {vgl.renderState} renderState\n   * @param {vgl.shaderProgram} program\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.update = function(renderState, program) {\n    this.set(renderState.m_normalMatrix);\n  };\n\n  return this;\n};\n\ninherit(vgl.normalMatrixUniform, vgl.uniform);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, gl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Keys to identify vertex attributes\n *\n * @type {{Position: number, Normal: number, TextureCoordinate: number,\n *         Color: number, Scalar: number, Scalar2: number, Scalar3: number,\n *         Scalar4: number, Scalar5: number, Scalar6: number, Scalar7: number,\n *         CountAttributeIndex: number}}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.vertexAttributeKeys = {\n  \"Position\" : 0,\n  \"Normal\" : 1,\n  \"TextureCoordinate\" : 2,\n  \"Color\" : 3,\n  \"CountAttributeIndex\" : 4\n};\n\nvgl.vertexAttributeKeysIndexed = {\n  \"Zero\" : 0,\n  \"One\" : 1,\n  \"Two\" : 2,\n  \"Three\" : 3,\n  \"Four\" : 4,\n  \"Five\" : 5,\n  \"Six\" : 6,\n  \"Seven\" : 7,\n  \"Eight\" : 8,\n  \"Nine\" : 9\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of vertexAttribute\n *\n * @param {string} name\n * @returns {vgl.vertexAttribute}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.vertexAttribute = function(name) {\n  'use strict';\n\n  if (!(this instanceof vgl.vertexAttribute)) {\n    return new vgl.vertexAttribute(name);\n  }\n\n  var m_name = name;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get name of the vertex attribute\n   *\n   * @returns {string}\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.name = function() {\n    return m_name;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Bind vertex data to the given render state\n   *\n   * @param {vgl.renderState} renderState\n   * @param {vgl.vertexAttributeKeys} key\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.bindVertexData = function(renderState, key) {\n    var geometryData = renderState.m_mapper.geometryData(),\n        sourceData = geometryData.sourceData(key),\n        program = renderState.m_material.shaderProgram();\n\n    gl.vertexAttribPointer(program.attributeLocation(m_name), sourceData\n        .attributeNumberOfComponents(key), sourceData.attributeDataType(key),\n                           sourceData.normalized(key), sourceData\n                               .attributeStride(key), sourceData\n                               .attributeOffset(key));\n\n    gl.enableVertexAttribArray(program.attributeLocation(m_name));\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Undo bind vertex data for a given render state\n   *\n   * @param {vgl.renderState} renderState\n   * @param {vgl.vertexAttributeKeys} key\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.undoBindVertexData = function(renderState, key) {\n    var program = renderState.m_material.shaderProgram();\n\n    gl.disableVertexAttribArray(program.attributeLocation(m_name));\n  };\n};\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n///////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class source\n *\n * @returns {vgl.source}\n */\n///////////////////////////////////////////////////////////////////////////////\nvgl.source = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.source)) {\n    return new vgl.source();\n  }\n\n  vgl.object.call(this);\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Virtual function to create a source instance\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.create = function() {\n  };\n\n  return this;\n};\n\ninherit(vgl.source, vgl.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class planeSource\n *\n * @class\n * @returns {vgl.planeSource}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.planeSource = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.planeSource)) {\n    return new vgl.planeSource();\n  }\n  vgl.source.call(this);\n\n  var m_origin = [ 0.0, 0.0, 0.0 ],\n      m_point1 = [ 1.0, 0.0, 0.0 ],\n      m_point2 = [ 0.0, 1.0, 0.0 ],\n      m_normal = [ 0.0, 0.0, 1.0 ],\n      m_xresolution = 1,\n      m_yresolution = 1,\n      m_geom = null;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set origin of the plane\n   *\n   * @param x\n   * @param y\n   * @param z\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setOrigin = function(x, y, z) {\n    m_origin[0] = x;\n    m_origin[1] = y;\n    m_origin[2] = z;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set point that defines the first axis of the plane\n   *\n   * @param x\n   * @param y\n   * @param z\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setPoint1 = function(x, y, z) {\n    m_point1[0] = x;\n    m_point1[1] = y;\n    m_point1[2] = z;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set point that defines the first axis of the plane\n   *\n   * @param x\n   * @param y\n   * @param z\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setPoint2 = function(x, y, z) {\n    m_point2[0] = x;\n    m_point2[1] = y;\n    m_point2[2] = z;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create a plane geometry given input parameters\n   *\n   * @returns {null}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.create = function() {\n    m_geom = new vgl.geometryData();\n\n    var x = [], tc = [], v1 = [], v2 = [],\n        pts = [], i, j, k, ii, numPts, numPolys,\n        posIndex = 0, normIndex = 0, colorIndex = 0, texCoordIndex = 0,\n        positions = [], normals = [], colors = [],\n        texCoords = [], indices = [], tristrip = null,\n        sourcePositions = null, sourceColors = null, sourceTexCoords;\n\n    x.length = 3;\n    tc.length = 2;\n    v1.length = 3;\n    v2.length = 3;\n    pts.length = 3;\n\n    // Check input\n    for (i = 0; i < 3; i++) {\n      v1[i] = m_point1[i] - m_origin[i];\n      v2[i] = m_point2[i] - m_origin[i];\n    }\n\n    // TODO Compute center and normal\n    // Set things up; allocate memory\n    numPts = (m_xresolution + 1) * (m_yresolution + 1);\n    numPolys = m_xresolution * m_yresolution * 2;\n    positions.length = 3 * numPts;\n    normals.length = 3 * numPts;\n    texCoords.length = 2 * numPts;\n    indices.length = numPts;\n\n    for (k = 0, i = 0; i < (m_yresolution + 1); i++) {\n      tc[1] = i / m_yresolution;\n\n      for (j = 0; j < (m_xresolution + 1); j++) {\n        tc[0] = j / m_xresolution;\n\n        for (ii = 0; ii < 3; ii++) {\n          x[ii] = m_origin[ii] + tc[0] * v1[ii] + tc[1] * v2[ii];\n        }\n\n        positions[posIndex++] = x[0];\n        positions[posIndex++] = x[1];\n        positions[posIndex++] = x[2];\n\n        colors[colorIndex++] = 1.0;\n        colors[colorIndex++] = 1.0;\n        colors[colorIndex++] = 1.0;\n\n        normals[normIndex++] = m_normal[0];\n        normals[normIndex++] = m_normal[1];\n        normals[normIndex++] = m_normal[2];\n\n        texCoords[texCoordIndex++] = tc[0];\n        texCoords[texCoordIndex++] = tc[1];\n      }\n    }\n\n    /// Generate polygon connectivity\n    for (i = 0; i < m_yresolution; i++) {\n      for (j = 0; j < m_xresolution; j++) {\n        pts[0] = j + i * (m_xresolution + 1);\n        pts[1] = pts[0] + 1;\n        pts[2] = pts[0] + m_xresolution + 2;\n        pts[3] = pts[0] + m_xresolution + 1;\n      }\n    }\n\n    for (i = 0; i < numPts; ++i) {\n      indices[i] = i;\n    }\n\n    tristrip = new vgl.triangleStrip();\n    tristrip.setIndices(indices);\n\n    sourcePositions = vgl.sourceDataP3fv();\n    sourcePositions.pushBack(positions);\n\n    sourceColors = vgl.sourceDataC3fv();\n    sourceColors.pushBack(colors);\n\n    sourceTexCoords = vgl.sourceDataT2fv();\n    sourceTexCoords.pushBack(texCoords);\n\n    m_geom.addSource(sourcePositions);\n    m_geom.addSource(sourceColors);\n    m_geom.addSource(sourceTexCoords);\n    m_geom.addPrimitive(tristrip);\n\n    return m_geom;\n  };\n};\n\ninherit(vgl.planeSource, vgl.source);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class pointSource\n *\n * @class\n * @returns {vgl.pointSource}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.pointSource = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.pointSource)) {\n    return new vgl.pointSource();\n  }\n  vgl.source.call(this);\n\n  var m_this = this,\n      m_positions = [],\n      m_colors = [],\n      m_textureCoords = [],\n      m_size = [],\n      m_geom = null;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get positions for the points\n   *\n   * @param positions\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.getPositions = function(positions) {\n    return m_positions;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set positions for the source\n   *\n   * @param positions\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setPositions = function(positions) {\n    if (positions instanceof Array) {\n      m_positions = positions;\n    }\n    else {\n      console\n          .log(\"[ERROR] Invalid data type for positions. Array is required.\");\n    }\n    m_this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get colors for the points\n   *\n   * @param positions\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.getColors = function(positions) {\n    return m_colors;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set colors for the points\n   *\n   * @param colors\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setColors = function(colors) {\n    if (colors instanceof Array) {\n      m_colors = colors;\n    }\n    else {\n      console.log(\"[ERROR] Invalid data type for colors. Array is required.\");\n    }\n\n    m_this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get colors for the points\n   *\n   * @param positions\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.getSize = function(positions) {\n    return m_size;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set colors for the points\n   *\n   * @param colors\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setSize = function(size) {\n    m_size = size;\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set texture coordinates for the points\n   *\n   * @param texcoords\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setTextureCoordinates = function(texcoords) {\n    if (texcoords instanceof Array) {\n      m_textureCoords = texcoords;\n    }\n    else {\n      console.log(\"[ERROR] Invalid data type for \"\n                  + \"texture coordinates. Array is required.\");\n    }\n    m_this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create a point geometry given input parameters\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.create = function() {\n    m_geom = new vgl.geometryData();\n\n    if (m_positions.length % 3 !== 0) {\n      console.log(\"[ERROR] Invalid length of the points array\");\n      return;\n    }\n\n    var numPts = m_positions.length / 3,\n        i = 0,\n        indices = [],\n        pointsPrimitive,\n        sourcePositions,\n        sourceColors,\n        sourceTexCoords,\n        sourceSize;\n\n    indices.length = numPts;\n    for (i = 0; i < numPts; ++i) {\n      indices[i] = i;\n    }\n\n    /// Generate array of size if needed\n    sourceSize = vgl.sourceDataDf();\n    if (numPts !== m_size.length) {\n      for (i = 0; i < numPts; ++i) {\n       sourceSize.pushBack(m_size);\n      }\n    } else {\n      sourceSize.setData(m_size);\n    }\n    m_geom.addSource(sourceSize);\n\n    pointsPrimitive = new vgl.points();\n    pointsPrimitive.setIndices(indices);\n\n    sourcePositions = vgl.sourceDataP3fv();\n    sourcePositions.pushBack(m_positions);\n    m_geom.addSource(sourcePositions);\n\n    if ((m_colors.length > 0) && m_colors.length === m_positions.length) {\n      sourceColors = vgl.sourceDataC3fv();\n      sourceColors.pushBack(m_colors);\n      m_geom.addSource(sourceColors);\n    }\n    else if ((m_colors.length > 0) && m_colors.length !== m_positions.length) {\n      console\n          .log(\"[ERROR] Number of colors are different than number of points\");\n    }\n\n    if ((m_textureCoords.length > 0)\n        && m_textureCoords.length === m_positions.length) {\n      sourceTexCoords = vgl.sourceDataT2fv();\n      sourceTexCoords.pushBack(m_textureCoords);\n      m_geom.addSource(sourceTexCoords);\n    }\n    else if ((m_textureCoords.length > 0)\n             && (m_textureCoords.length / 2) !== (m_positions.length / 3)) {\n      console\n          .log(\"[ERROR] Number of texture coordinates are different than number of points\");\n    }\n\n\n    m_geom.addPrimitive(pointsPrimitive);\n\n    return m_geom;\n  };\n};\n\ninherit(vgl.pointSource, vgl.source);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class lineSource\n *\n * @class\n * @returns {vgl.lineSource}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.lineSource = function(positions, colors) {\n  'use strict';\n\n  if (!(this instanceof vgl.lineSource)) {\n    return new vgl.lineSource();\n  }\n  vgl.source.call(this);\n\n  var m_positions = positions,\n      m_colors = colors,\n      m_height = null,\n      m_geom = null;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set start positions for the lines\n   *\n   * @param positions\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setPositions = function(positions) {\n    if (positions instanceof Array) {\n      m_positions = positions;\n      this.modified();\n      return true;\n    }\n\n    console\n      .log(\"[ERROR] Invalid data type for positions. Array is required.\");\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set colors for the lines\n   *\n   * @param colors\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setColors = function(colors) {\n    if (colors instanceof Array) {\n      m_colors = colors;\n      this.modified();\n      return true;\n    }\n\n    console.log(\"[ERROR] Invalid data type for colors. Array is required.\");\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create a point geometry given input parameters\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.create = function() {\n    if (!m_positions) {\n      console.log(\"[error] Invalid positions\");\n      return;\n    }\n\n    if (m_positions.length % 3 !== 0) {\n      console.log(\"[error] Line source requires 3d points\");\n      return;\n    }\n\n    if (m_positions.length % 3 !== 0) {\n      console.log(\"[ERROR] Invalid length of the points array\");\n      return;\n    }\n\n    var m_geom = new vgl.geometryData(),\n        numPts = m_positions.length / 3,\n        i,\n        indices = [],\n        linesPrimitive,\n        sourcePositions,\n        sourceColors;\n\n    indices.length = numPts;\n\n    for (i = 0; i < numPts; ++i) {\n      indices[i] = i;\n    }\n\n    linesPrimitive = new vgl.lines();\n    linesPrimitive.setIndices(indices);\n\n    sourcePositions = vgl.sourceDataP3fv();\n    sourcePositions.pushBack(m_positions);\n    m_geom.addSource(sourcePositions);\n\n    if ( m_colors && (m_colors.length > 0) &&\n         m_colors.length === m_positions.length) {\n      sourceColors = vgl.sourceDataC3fv();\n      sourceColors.pushBack(m_colors);\n      m_geom.addSource(sourceColors);\n    }\n    else if (m_colors && (m_colors.length > 0) &&\n             m_colors.length !== m_positions.length) {\n      console\n        .log(\"[error] Number of colors are different than number of points\");\n    }\n\n    m_geom.addPrimitive(linesPrimitive);\n\n    return m_geom;\n  };\n};\n\ninherit(vgl.lineSource, vgl.source);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global document, vgl, gl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class utils\n *\n * Utility class provides helper functions such as functions to create\n * shaders, geometry etc.\n *\n * @returns {vgl.utils}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.utils)) {\n    return new vgl.utils();\n  }\n  vgl.object.call(this);\n\n  return this;\n};\n\ninherit(vgl.utils, vgl.object);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Helper function to compute power of 2 number\n *\n * @param value\n * @param pow\n *\n * @returns {number}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.computePowerOfTwo = function(value, pow) {\n  'use strict';\n  pow = pow || 1;\n  while (pow < value) {\n    pow *= 2;\n  }\n  return pow;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of default vertex shader that uses a texture\n *\n * Helper function to create default vertex shader\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createTextureVertexShader = function(context) {\n  'use strict';\n  var vertexShaderSource = [\n        'attribute vec3 vertexPosition;',\n        'attribute vec3 textureCoord;',\n        'uniform mediump float pointSize;',\n        'uniform mat4 modelViewMatrix;',\n        'uniform mat4 projectionMatrix;',\n        'varying highp vec3 iTextureCoord;',\n        'void main(void)',\n        '{',\n        'gl_PointSize = pointSize;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4(vertexPosition, 1.0);',\n        ' iTextureCoord = textureCoord;', '}' ].join('\\n'),\n      shader = new vgl.shader(gl.VERTEX_SHADER);\n  shader.setShaderSource(vertexShaderSource);\n  return shader;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of default fragment shader that uses a texture\n *\n * Helper function to create default fragment shader with sampler\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createTextureFragmentShader = function(context) {\n  'use strict';\n  var fragmentShaderSource = [\n        'varying highp vec3 iTextureCoord;',\n        'uniform sampler2D sampler2d;',\n        'uniform mediump float opacity;',\n        'void main(void) {',\n        'gl_FragColor = vec4(texture2D(sampler2d, vec2(iTextureCoord.s, iTextureCoord.t)).xyz, opacity);',\n        '}' ].join('\\n'),\n      shader = new vgl.shader(gl.FRAGMENT_SHADER);\n\n  shader.setShaderSource(fragmentShaderSource);\n  return shader;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create variation of createTextureFragmentShader which uses texture alpha\n *\n * Helper function to create default fragment shader with sampler\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createRgbaTextureFragmentShader = function(context) {\n  'use strict';\n  var fragmentShaderSource = [\n        'varying highp vec3 iTextureCoord;',\n        'uniform sampler2D sampler2d;',\n        'void main(void) {',\n        'gl_FragColor = vec4(texture2D(sampler2d, vec2(iTextureCoord.s, iTextureCoord.t)).xyzw);',\n        '}' ].join('\\n'),\n      shader = new vgl.shader(gl.FRAGMENT_SHADER);\n\n  shader.setShaderSource(fragmentShaderSource);\n  return shader;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of default vertex shader\n *\n * Helper function to create default vertex shader\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createVertexShader = function(context) {\n  'use strict';\n  var vertexShaderSource = [\n        'attribute vec3 vertexPosition;',\n        'attribute vec3 vertexColor;',\n        'uniform mediump float pointSize;',\n        'uniform mat4 modelViewMatrix;',\n        'uniform mat4 projectionMatrix;',\n        'varying mediump vec3 iVertexColor;',\n        'varying highp vec3 iTextureCoord;',\n        'void main(void)',\n        '{',\n        'gl_PointSize = pointSize;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4(vertexPosition, 1.0);',\n        ' iVertexColor = vertexColor;', '}' ].join('\\n'),\n      shader = new vgl.shader(gl.VERTEX_SHADER);\n\n  shader.setShaderSource(vertexShaderSource);\n  return shader;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of default vertex shader\n *\n * Helper function to create default vertex shader\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createPointVertexShader = function(context) {\n  'use strict';\n  var vertexShaderSource = [\n        'attribute vec3 vertexPosition;',\n        'attribute vec3 vertexColor;',\n        'attribute float vertexSize;',\n        'uniform mat4 modelViewMatrix;',\n        'uniform mat4 projectionMatrix;',\n        'varying mediump vec3 iVertexColor;',\n        'varying highp vec3 iTextureCoord;',\n        'void main(void)',\n        '{',\n        'gl_PointSize =  vertexSize;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4(vertexPosition, 1.0);',\n        ' iVertexColor = vertexColor;', '}' ].join('\\n'),\n      shader = new vgl.shader(gl.VERTEX_SHADER);\n\n  shader.setShaderSource(vertexShaderSource);\n  return shader;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of vertex shader with a solid color\n *\n * Helper function to create default vertex shader\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createVertexShaderSolidColor = function(context) {\n  'use strict';\n  var vertexShaderSource = [\n        'attribute vec3 vertexPosition;',\n        'uniform mediump float pointSize;',\n        'uniform mat4 modelViewMatrix;',\n        'uniform mat4 projectionMatrix;',\n        'void main(void)',\n        '{',\n        'gl_PointSize = pointSize;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4(vertexPosition, 1.0);',\n        '}' ].join('\\n'),\n    shader = new vgl.shader(gl.VERTEX_SHADER);\n\n  shader.setShaderSource(vertexShaderSource);\n  return shader;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of vertex shader that passes values through\n * for color mapping\n *\n * Helper function to create default vertex shader\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createVertexShaderColorMap = function(context, min, max) {\n  'use strict';\n  var vertexShaderSource = [\n        'attribute vec3 vertexPosition;',\n        'attribute float vertexScalar;',\n        'uniform mediump float pointSize;',\n        'uniform mat4 modelViewMatrix;',\n        'uniform mat4 projectionMatrix;',\n        'uniform float lutMin;',\n        'uniform float lutMax;',\n        'varying mediump float iVertexScalar;',\n        'void main(void)',\n        '{',\n        'gl_PointSize = pointSize;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4(vertexPosition, 1.0);',\n        'iVertexScalar = (vertexScalar-lutMin)/(lutMax-lutMin);',\n        '}' ].join('\\n'),\n      shader = new vgl.shader(gl.VERTEX_SHADER);\n\n  shader.setShaderSource(vertexShaderSource);\n  return shader;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of default fragment shader\n *\n * Helper function to create default fragment shader\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createFragmentShader = function(context) {\n  'use strict';\n  var fragmentShaderSource = [ 'varying mediump vec3 iVertexColor;',\n                              'uniform mediump float opacity;',\n                              'void main(void) {',\n                              'gl_FragColor = vec4(iVertexColor, opacity);',\n                              '}' ].join('\\n'),\n      shader = new vgl.shader(gl.FRAGMENT_SHADER);\n\n  shader.setShaderSource(fragmentShaderSource);\n  return shader;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a Phong vertex shader\n *\n * Helper function to create Phong vertex shader\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createPhongVertexShader = function(context) {\n  'use strict';\n\n  var vertexShaderSource = [\n      'attribute highp vec3 vertexPosition;',\n      'attribute mediump vec3 vertexNormal;',\n      'attribute mediump vec3 vertexColor;',\n\n      'uniform highp mat4 projectionMatrix;',\n      'uniform mat4 modelViewMatrix;',\n      'uniform mat4 normalMatrix;',\n\n      'varying highp vec4 varPosition;',\n      'varying mediump vec3 varNormal;',\n      'varying mediump vec3 iVertexColor;',\n\n      'void main(void)',\n      '{',\n      'varPosition = modelViewMatrix * vec4(vertexPosition, 1.0);',\n      'gl_Position = projectionMatrix * varPosition;',\n      'varNormal = vec3(normalMatrix * vec4(vertexNormal, 0.0));',\n      'iVertexColor = vertexColor;',\n      '}' ].join('\\n'),\n\n      shader = new vgl.shader(gl.VERTEX_SHADER);\n\n  shader.setShaderSource(vertexShaderSource);\n\n  return shader;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of Phong fragment shader\n *\n * Helper function to create Phong fragment shader\n *\n * NOTE: Shader assumes directional light\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createPhongFragmentShader = function(context) {\n  'use strict';\n  var fragmentShaderSource = [\n    'precision mediump float;',\n    'varying vec3 varNormal;',\n    'varying vec4 varPosition;',\n    'varying mediump vec3 iVertexColor;',\n    'const vec3 lightPos = vec3(0.0, 0.0,10000.0);',\n    'const vec3 ambientColor = vec3(0.01, 0.01, 0.01);',\n    'const vec3 specColor = vec3(1.0, 1.0, 1.0);',\n\n    'void main() {',\n    'vec3 normal = normalize(varNormal);',\n    'vec3 lightDir = normalize(lightPos);',\n    'vec3 reflectDir = -reflect(lightDir, normal);',\n    'vec3 viewDir = normalize(-varPosition.xyz);',\n\n    'float lambertian = max(dot(lightDir,normal), 0.0);',\n    'float specular = 0.0;',\n\n    'if(lambertian > 0.0) {',\n    'float specAngle = max(dot(reflectDir, viewDir), 0.0);',\n    'specular = pow(specAngle, 64.0);',\n    '}',\n    'gl_FragColor = vec4(ambientColor +',\n    'lambertian*iVertexColor +',\n    'specular*specColor, 1.0);',\n    '}' ].join('\\n'),\n    shader = new vgl.shader(gl.FRAGMENT_SHADER);\n\n  shader.setShaderSource(fragmentShaderSource);\n  return shader;\n};\n\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of fragment shader with an assigned constant color.\n *\n * Helper function to create default fragment shader\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createFragmentShaderSolidColor = function(context, color) {\n  'use strict';\n  var fragmentShaderSource = ['uniform mediump float opacity;',\n                              'void main(void) {',\n                              'gl_FragColor = vec4(' + color[0] + ',' + color[1] + ',' + color[2] + ', opacity);',\n                              '}' ].join('\\n'),\n      shader = new vgl.shader(gl.FRAGMENT_SHADER);\n\n  shader.setShaderSource(fragmentShaderSource);\n  return shader;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of fragment shader that maps values into colors bia lookup table\n *\n * Helper function to create default fragment shader\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createFragmentShaderColorMap = function(context) {\n  'use strict';\n  var fragmentShaderSource = [\n        'varying mediump float iVertexScalar;',\n        'uniform sampler2D sampler2d;',\n        'uniform mediump float opacity;',\n        'void main(void) {',\n        'gl_FragColor = vec4(texture2D(sampler2d, vec2(iVertexScalar, 0.0)).xyz, opacity);',\n        '}' ].join('\\n'),\n      shader = new vgl.shader(gl.FRAGMENT_SHADER);\n\n  shader.setShaderSource(fragmentShaderSource);\n  return shader;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of vertex shader for point sprites\n *\n * Helper function to create default point sprites vertex shader\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createPointSpritesVertexShader = function(context) {\n  'use strict';\n  var vertexShaderSource = [\n        'attribute vec3 vertexPosition;',\n        'attribute vec3 vertexColor;',\n        'uniform mediump vec2 pointSize;',\n        'uniform mat4 modelViewMatrix;',\n        'uniform mat4 projectionMatrix;',\n        'uniform float height;',\n        'varying mediump vec3 iVertexColor;',\n        'varying highp float iVertexScalar;',\n        'void main(void)',\n        '{',\n        'mediump float realPointSize = pointSize.y;',\n        'if (pointSize.x > pointSize.y) {',\n        '  realPointSize = pointSize.x;}',\n        'gl_PointSize = realPointSize ;',\n        'iVertexScalar = vertexPosition.z;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4(vertexPosition.xy, height, 1.0);',\n        ' iVertexColor = vertexColor;', '}' ].join('\\n'),\n      shader = new vgl.shader(gl.VERTEX_SHADER);\n  shader.setShaderSource(vertexShaderSource);\n  return shader;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of fragment shader for point sprites\n *\n * Helper function to create default point sprites fragment shader\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createPointSpritesFragmentShader = function(context) {\n  'use strict';\n  var fragmentShaderSource = [\n        'varying mediump vec3 iVertexColor;',\n        'varying highp float iVertexScalar;',\n        'uniform sampler2D opacityLookup;',\n        'uniform highp float lutMin;',\n        'uniform highp float lutMax;',\n        'uniform sampler2D scalarsToColors;',\n        'uniform int useScalarsToColors;',\n        'uniform int useVertexColors;',\n        'uniform mediump vec2 pointSize;',\n        'uniform mediump float vertexColorWeight;',\n        'void main(void) {',\n        'mediump vec2 realTexCoord;',\n        'if (pointSize.x > pointSize.y) {',\n        '  realTexCoord = vec2(1.0, pointSize.y/pointSize.x) * gl_PointCoord;',\n        '} else {',\n        '  realTexCoord = vec2(pointSize.x/pointSize.y, 1.0) * gl_PointCoord;',\n        '}',\n        'highp float texOpacity = texture2D(opacityLookup, realTexCoord).w;',\n        'if (useScalarsToColors == 1) {',\n        '  gl_FragColor = vec4(texture2D(scalarsToColors, vec2((iVertexScalar - lutMin)/(lutMax - lutMin), 0.0)).xyz, texOpacity);',\n        '} else if (useVertexColors == 1) {',\n        '  gl_FragColor = vec4(iVertexColor, texOpacity);',\n        '} else {',\n        '  gl_FragColor = vec4(texture2D(opacityLookup, realTexCoord).xyz, texOpacity);',\n        '}}'\n    ].join('\\n'),\n    shader = new vgl.shader(gl.FRAGMENT_SHADER);\n\n  shader.setShaderSource(fragmentShaderSource);\n  return shader;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of texture material\n *\n * Helper function to create a texture material\n *\n * @returns {vgl.material}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createTextureMaterial = function(isRgba) {\n  'use strict';\n  var mat = new vgl.material(),\n    blend = new vgl.blend(),\n    prog = new vgl.shaderProgram(),\n    vertexShader = vgl.utils.createTextureVertexShader(gl),\n    fragmentShader = null,\n    posVertAttr = new vgl.vertexAttribute(\"vertexPosition\"),\n    texCoordVertAttr = new vgl.vertexAttribute(\"textureCoord\"),\n    pointsizeUniform = new vgl.floatUniform(\"pointSize\", 5.0),\n    modelViewUniform = new vgl.modelViewUniform(\"modelViewMatrix\"),\n    projectionUniform = new vgl.projectionUniform(\"projectionMatrix\"),\n    samplerUniform = new vgl.uniform(gl.INT, \"sampler2d\"),\n    opacityUniform = null;\n\n  samplerUniform.set(0);\n\n  prog.addVertexAttribute(posVertAttr, vgl.vertexAttributeKeys.Position);\n  prog.addVertexAttribute(texCoordVertAttr,\n                          vgl.vertexAttributeKeys.TextureCoordinate);\n  prog.addUniform(pointsizeUniform);\n  prog.addUniform(modelViewUniform);\n  prog.addUniform(projectionUniform);\n\n  if (isRgba) {\n    fragmentShader = vgl.utils.createRgbaTextureFragmentShader(gl);\n  } else {\n    fragmentShader = vgl.utils.createTextureFragmentShader(gl);\n    opacityUniform = new vgl.floatUniform(\"opacity\", 1.0);\n    prog.addUniform(opacityUniform);\n  }\n\n  prog.addShader(fragmentShader);\n  prog.addShader(vertexShader);\n  mat.addAttribute(prog);\n  mat.addAttribute(blend);\n\n  return mat;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of geometry material\n *\n * Helper function to create geometry material\n *\n * @returns {vgl.material}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createGeometryMaterial = function() {\n  'use strict';\n   var mat = new vgl.material(),\n       blend = new vgl.blend(),\n       prog = new vgl.shaderProgram(),\n       pointSize = 5.0,\n       opacity = 0.5,\n       vertexShader = vgl.utils.createVertexShader(gl),\n       fragmentShader = vgl.utils.createFragmentShader(gl),\n       posVertAttr = new vgl.vertexAttribute(\"vertexPosition\"),\n       colorVertAttr = new vgl.vertexAttribute(\"vertexColor\"),\n       pointsizeUniform = new vgl.floatUniform(\"pointSize\", pointSize),\n       opacityUniform = new vgl.floatUniform(\"opacity\", opacity),\n       modelViewUniform = new vgl.modelViewUniform(\"modelViewMatrix\"),\n       projectionUniform = new vgl.projectionUniform(\"projectionMatrix\");\n\n  prog.addVertexAttribute(posVertAttr, vgl.vertexAttributeKeys.Position);\n  prog.addVertexAttribute(colorVertAttr, vgl.vertexAttributeKeys.Color);\n  prog.addUniform(pointsizeUniform);\n  prog.addUniform(opacityUniform);\n  prog.addUniform(modelViewUniform);\n  prog.addUniform(projectionUniform);\n  prog.addShader(fragmentShader);\n  prog.addShader(vertexShader);\n  mat.addAttribute(prog);\n  mat.addAttribute(blend);\n\n  return mat;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of geometry material\n *\n * Helper function to create geometry material\n *\n * @returns {vgl.material}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createPointGeometryMaterial = function(opacity) {\n  'use strict';\n   var mat = new vgl.material(),\n       blend = new vgl.blend(),\n       prog = new vgl.shaderProgram(),\n       opacity = opacity === undefined ? 1.0 : opacity,\n       vertexShader = vgl.utils.createPointVertexShader(gl),\n       fragmentShader = vgl.utils.createFragmentShader(gl),\n       posVertAttr = new vgl.vertexAttribute(\"vertexPosition\"),\n       colorVertAttr = new vgl.vertexAttribute(\"vertexColor\"),\n       sizeVertAttr = new vgl.vertexAttribute(\"vertexSize\"),\n       opacityUniform = new vgl.floatUniform(\"opacity\", opacity),\n       modelViewUniform = new vgl.modelViewUniform(\"modelViewMatrix\"),\n       projectionUniform = new vgl.projectionUniform(\"projectionMatrix\");\n\n  prog.addVertexAttribute(posVertAttr, vgl.vertexAttributeKeys.Position);\n  prog.addVertexAttribute(colorVertAttr, vgl.vertexAttributeKeys.Color);\n  prog.addVertexAttribute(sizeVertAttr, vgl.vertexAttributeKeys.Scalar);\n  prog.addUniform(opacityUniform);\n  prog.addUniform(modelViewUniform);\n  prog.addUniform(projectionUniform);\n  prog.addShader(fragmentShader);\n  prog.addShader(vertexShader);\n  mat.addAttribute(prog);\n  mat.addAttribute(blend);\n\n  return mat;\n};\n\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of geometry material with the phong shader\n *\n * Helper function to create color phong shaded geometry material\n *\n * @returns {vgl.material}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createPhongMaterial = function() {\n  'use strict';\n   var mat = new vgl.material(),\n       blend = new vgl.blend(),\n       prog = new vgl.shaderProgram(),\n       vertexShader = vgl.utils.createPhongVertexShader(gl),\n       fragmentShader = vgl.utils.createPhongFragmentShader(gl),\n       posVertAttr = new vgl.vertexAttribute(\"vertexPosition\"),\n       normalVertAttr = new vgl.vertexAttribute(\"vertexNormal\"),\n       colorVertAttr = new vgl.vertexAttribute(\"vertexColor\"),\n       opacityUniform = new vgl.floatUniform(\"opacity\", 1.0),\n       modelViewUniform = new vgl.modelViewUniform(\"modelViewMatrix\"),\n       normalUniform = new vgl.normalMatrixUniform(\"normalMatrix\"),\n       projectionUniform = new vgl.projectionUniform(\"projectionMatrix\");\n\n  prog.addVertexAttribute(posVertAttr, vgl.vertexAttributeKeys.Position);\n  prog.addVertexAttribute(normalVertAttr, vgl.vertexAttributeKeys.Normal);\n  prog.addVertexAttribute(colorVertAttr, vgl.vertexAttributeKeys.Color);\n  prog.addUniform(opacityUniform);\n  prog.addUniform(modelViewUniform);\n  prog.addUniform(projectionUniform);\n  prog.addUniform(normalUniform);\n  prog.addShader(fragmentShader);\n  prog.addShader(vertexShader);\n  mat.addAttribute(prog);\n  mat.addAttribute(blend);\n\n  return mat;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of colored geometry material\n *\n * Helper function to create color geometry material\n *\n * @returns {vgl.material}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createColorMaterial = function() {\n  'use strict';\n  var mat = new vgl.material(),\n      blend = new vgl.blend(),\n      prog = new vgl.shaderProgram(),\n      vertexShader = vgl.utils.createVertexShader(gl),\n      fragmentShader = vgl.utils.createFragmentShader(gl),\n      posVertAttr = new vgl.vertexAttribute(\"vertexPosition\"),\n      texCoordVertAttr = new vgl.vertexAttribute(\"textureCoord\"),\n      colorVertAttr = new vgl.vertexAttribute(\"vertexColor\"),\n      pointsizeUniform = new vgl.floatUniform(\"pointSize\", 5.0),\n      opacityUniform = new vgl.floatUniform(\"opacity\", 0.5),\n      modelViewUniform = new vgl.modelViewUniform(\"modelViewMatrix\"),\n      projectionUniform = new vgl.projectionUniform(\"projectionMatrix\");\n\n  prog.addVertexAttribute(posVertAttr, vgl.vertexAttributeKeys.Position);\n  prog.addVertexAttribute(colorVertAttr, vgl.vertexAttributeKeys.Color);\n  prog.addVertexAttribute(texCoordVertAttr,\n                          vgl.vertexAttributeKeys.TextureCoordinate);\n  prog.addUniform(pointsizeUniform);\n  prog.addUniform(opacityUniform);\n  prog.addUniform(modelViewUniform);\n  prog.addUniform(projectionUniform);\n  prog.addShader(fragmentShader);\n  prog.addShader(vertexShader);\n  mat.addAttribute(prog);\n  mat.addAttribute(blend);\n\n  return mat;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of geometry material\n *\n * Helper function to create geometry material\n *\n * @returns {vgl.material}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createColorMappedMaterial = function(lut) {\n  'use strict';\n  if (!lut) {\n    lut = new vgl.lookupTable();\n  }\n\n  var scalarRange = lut.range(),\n      mat = new vgl.material(),\n      blend = new vgl.blend(),\n      prog = new vgl.shaderProgram(),\n      vertexShader = vgl.utils.createVertexShaderColorMap(\n        gl,scalarRange[0],scalarRange[1]),\n      fragmentShader = vgl.utils.createFragmentShaderColorMap(gl),\n      posVertAttr = new vgl.vertexAttribute(\"vertexPosition\"),\n      scalarVertAttr = new vgl.vertexAttribute(\"vertexScalar\"),\n      pointsizeUniform = new vgl.floatUniform(\"pointSize\", 5.0),\n      opacityUniform = new vgl.floatUniform(\"opacity\", 0.5),\n      lutMinUniform = new vgl.floatUniform(\"lutMin\", scalarRange[0]),\n      lutMaxUniform = new vgl.floatUniform(\"lutMax\", scalarRange[1]),\n      modelViewUniform = new vgl.modelViewUniform(\"modelViewMatrix\"),\n      projectionUniform = new vgl.projectionUniform(\"projectionMatrix\"),\n      samplerUniform = new vgl.uniform(gl.FLOAT, \"sampler2d\"),\n      lookupTable = lut;\n\n  samplerUniform.set(0);\n\n  prog.addVertexAttribute(posVertAttr, vgl.vertexAttributeKeys.Position);\n  prog.addVertexAttribute(scalarVertAttr, vgl.vertexAttributeKeys.Scalar);\n  prog.addUniform(pointsizeUniform);\n  prog.addUniform(opacityUniform);\n  prog.addUniform(lutMinUniform);\n  prog.addUniform(lutMaxUniform);\n  prog.addUniform(modelViewUniform);\n  prog.addUniform(projectionUniform);\n  prog.addShader(fragmentShader);\n  prog.addShader(vertexShader);\n  mat.addAttribute(prog);\n  mat.addAttribute(blend);\n  mat.addAttribute(lookupTable);\n\n  return mat;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Update color mapped material\n *\n * @param mat\n * @param scalarRange\n * @param lut\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.updateColorMappedMaterial = function(mat, lut) {\n  'use strict';\n  if (!mat) {\n    console.log('[warning] Invalid material. Nothing to update.');\n    return;\n  }\n\n  if (!lut) {\n    console.log('[warning] Invalid lookup table. Nothing to update.');\n    return;\n  }\n\n\n  var lutMin = mat.shaderProgram().uniform('lutMin'),\n      lutMax = mat.shaderProgram().uniform('lutMax');\n\n  lutMin.set(lut.range()[0]);\n  lutMax.set(lut.range()[1]);\n\n  // This will replace the existing lookup table\n  mat.setAttribute(lut);\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of solid color material\n *\n * Helper function to create geometry material\n *\n * @returns {vgl.material}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createSolidColorMaterial = function(color) {\n  'use strict';\n  if (!color) {\n    color = [1.0,1.0,1.0];\n  }\n\n  var mat = new vgl.material(),\n      blend = new vgl.blend(),\n      prog = new vgl.shaderProgram(),\n      vertexShader = vgl.utils.createVertexShaderSolidColor(gl),\n      fragmentShader = vgl.utils.createFragmentShaderSolidColor(gl, color),\n      posVertAttr = new vgl.vertexAttribute(\"vertexPosition\"),\n      pointsizeUniform = new vgl.floatUniform(\"pointSize\", 5.0),\n      opacityUniform = new vgl.floatUniform(\"opacity\", 1.0),\n      modelViewUniform = new vgl.modelViewUniform(\"modelViewMatrix\"),\n      projectionUniform = new vgl.projectionUniform(\"projectionMatrix\");\n\n  prog.addVertexAttribute(posVertAttr, vgl.vertexAttributeKeys.Position);\n  prog.addUniform(pointsizeUniform);\n  prog.addUniform(opacityUniform);\n  prog.addUniform(modelViewUniform);\n  prog.addUniform(projectionUniform);\n  prog.addShader(fragmentShader);\n  prog.addShader(vertexShader);\n  mat.addAttribute(prog);\n  mat.addAttribute(blend);\n\n  return mat;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of point sprites material\n *\n * Helper function to create point sprites material\n *\n * @returns {vgl.material}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createPointSpritesMaterial = function(image, lut) {\n  'use strict';\n  var scalarRange = lut === undefined ? [0, 1] : lut.range(),\n      mat = new vgl.material(),\n      blend = new vgl.blend(),\n      prog = new vgl.shaderProgram(),\n      vertexShader = vgl.utils.createPointSpritesVertexShader(gl),\n      fragmentShader = vgl.utils.createPointSpritesFragmentShader(gl),\n      posVertAttr = new vgl.vertexAttribute(\"vertexPosition\"),\n      colorVertAttr = new vgl.vertexAttribute(\"vertexColor\"),\n      heightUniform = new vgl.floatUniform(\"height\", 0.0),\n      vertexColorWeightUniform =\n        new vgl.floatUniform(\"vertexColorWeight\", 0.0),\n      lutMinUniform = new vgl.floatUniform(\"lutMin\", scalarRange[0]),\n      lutMaxUniform = new vgl.floatUniform(\"lutMax\", scalarRange[1]),\n      modelViewUniform = new vgl.modelViewUniform(\"modelViewMatrix\"),\n      projectionUniform = new vgl.projectionUniform(\"projectionMatrix\"),\n      samplerUniform = new vgl.uniform(gl.INT, \"opacityLookup\"),\n      scalarsToColors = new vgl.uniform(gl.INT, \"scalarsToColors\"),\n      useScalarsToColors = new vgl.uniform(gl.INT, \"useScalarsToColors\"),\n      useVertexColors = new vgl.uniform(gl.INT, \"useVertexColors\"),\n      pointSize = new vgl.uniform(gl.FLOAT_VEC2, \"pointSize\"),\n      texture = new vgl.texture();\n\n  samplerUniform.set(0);\n  scalarsToColors.set(1);\n  useScalarsToColors.set(0);\n  useVertexColors.set(0);\n  pointSize.set([1.0, 1.0]);\n\n  prog.addVertexAttribute(posVertAttr, vgl.vertexAttributeKeys.Position);\n  prog.addVertexAttribute(colorVertAttr, vgl.vertexAttributeKeys.Color);\n  prog.addUniform(heightUniform);\n  prog.addUniform(vertexColorWeightUniform);\n  prog.addUniform(modelViewUniform);\n  prog.addUniform(projectionUniform);\n  prog.addUniform(samplerUniform);\n  prog.addUniform(useVertexColors);\n  prog.addUniform(useScalarsToColors);\n  prog.addUniform(pointSize);\n  prog.addShader(fragmentShader);\n  prog.addShader(vertexShader);\n  mat.addAttribute(prog);\n  mat.addAttribute(blend);\n\n  if (lut) {\n    prog.addUniform(scalarsToColors);\n    useScalarsToColors.set(1);\n    prog.addUniform(lutMinUniform);\n    prog.addUniform(lutMaxUniform);\n    lut.setTextureUnit(1);\n    mat.addAttribute(lut);\n  }\n\n  texture.setImage(image);\n  texture.setTextureUnit(0);\n  mat.addAttribute(texture);\n  return mat;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of an actor that contains a plane geometry\n *\n * Function to create a plane node This method will create a plane actor\n * with texture coordinates, eventually normal, and plane material.\n *\n * @returns {vgl.actor}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createPlane = function(originX, originY, originZ,\n                                       point1X, point1Y, point1Z,\n                                       point2X, point2Y, point2Z) {\n  'use strict';\n  var mapper = new vgl.mapper(),\n      planeSource = new vgl.planeSource(),\n      mat = vgl.utils.createGeometryMaterial(),\n      actor = new vgl.actor();\n\n  planeSource.setOrigin(originX, originY, originZ);\n  planeSource.setPoint1(point1X, point1Y, point1Z);\n  planeSource.setPoint2(point2X, point2Y, point2Z);\n\n  mapper.setGeometryData(planeSource.create());\n  actor.setMapper(mapper);\n  actor.setMaterial(mat);\n\n  return actor;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of an actor that contains a texture plane geometry\n *\n * Helper function to create a plane textured node This method will create\n * a plane actor with texture coordinates, eventually normal, and plane\n * material.\n *\n * @returns {vgl.actor}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createTexturePlane = function(originX, originY, originZ,\n                                              point1X, point1Y, point1Z,\n                                              point2X, point2Y, point2Z,\n                                              isRgba) {\n  'use strict';\n  var mapper = new vgl.mapper(),\n      planeSource = new vgl.planeSource(),\n      mat = vgl.utils.createTextureMaterial(isRgba),\n      actor = new vgl.actor();\n\n  planeSource.setOrigin(originX, originY, originZ);\n  planeSource.setPoint1(point1X, point1Y, point1Z);\n  planeSource.setPoint2(point2X, point2Y, point2Z);\n  mapper.setGeometryData(planeSource.create());\n\n  actor.setMapper(mapper);\n  actor.setMaterial(mat);\n\n  return actor;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of an actor that contains points\n *\n * Helper function to create a point node This method will create a point\n * actor with texture coordinates, eventually normal, and plane material.\n *\n * @returns {vgl.actor}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createPoints = function(positions, size, colors, texcoords, opacity) {\n  'use strict';\n  if (!positions) {\n    console.log(\"[ERROR] Cannot create points without positions\");\n    return null;\n  }\n\n  var opacity = opacity === undefined ? 1.0 : opacity,\n      mapper = new vgl.mapper(),\n      pointSource = new vgl.pointSource(),\n      mat = vgl.utils.createPointGeometryMaterial(opacity),\n      actor = new vgl.actor();\n\n  pointSource.setPositions(positions);\n  if (colors) {\n    pointSource.setColors(colors);\n  }\n\n  if (texcoords) {\n    pointSource.setTextureCoordinates(texcoords);\n  }\n\n  if (size) {\n    pointSource.setSize(size)\n  } else {\n    pointSource.setSize(1.0);\n  }\n\n  mapper.setGeometryData(pointSource.create());\n  actor.setMapper(mapper);\n  actor.setMaterial(mat);\n\n  return actor;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of an actor that contains point sprites\n *\n * Helper function to create a point sprites node This method will create\n * a point sprites actor with texture coordinates, normals, and a point sprites\n * material.\n *\n * @returns {vgl.actor}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createPointSprites = function(image, positions, colors,\n                                              texcoords) {\n  'use strict';\n  if (!image) {\n    console.log(\"[ERROR] Point sprites requires an image\");\n    return null;\n  }\n\n  if (!positions) {\n    console.log(\"[ERROR] Cannot create points without positions\");\n    return null;\n  }\n\n  var mapper = new vgl.mapper(),\n      pointSource = new vgl.pointSource(),\n      mat = vgl.utils.createPointSpritesMaterial(image),\n      actor = new vgl.actor();\n\n  pointSource.setPositions(positions);\n  if (colors) {\n    pointSource.setColors(colors);\n  }\n\n  if (texcoords) {\n    pointSource.setTextureCoordinates(texcoords);\n  }\n\n  mapper.setGeometryData(pointSource.create());\n  actor.setMapper(mapper);\n  actor.setMaterial(mat);\n\n  return actor;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create lines given positions, colors, and desired length\n *\n * @param positions\n * @param colors\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createLines = function(positions, colors) {\n  'use strict';\n  if (!positions) {\n    console.log(\"[ERROR] Cannot create points without positions\");\n    return null;\n  }\n\n  var mapper = new vgl.mapper(),\n      lineSource = new vgl.lineSource(),\n      mat = vgl.utils.createGeometryMaterial(),\n      actor = new vgl.actor();\n\n  lineSource.setPositions(positions);\n  if (colors) {\n    lineSource.setColors(colors);\n  }\n\n  mapper.setGeometryData(lineSource.create());\n  actor.setMapper(mapper);\n  actor.setMaterial(mat);\n\n  return actor;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create color legend\n *\n * @param lookupTable\n * @param width\n * @param height\n * @param origin\n * @param divs\n * @returns {Array}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createColorLegend = function(varname, lookupTable, origin,\n                                             width, height, countMajor,\n                                             countMinor) {\n  'use strict';\n\n  if (!lookupTable) {\n    console.log('[error] Invalid lookup table');\n    return [];\n  }\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create labels for the legend\n   *\n   * @param ticks\n   * @param range\n   * @param divs\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  function createLabels(varname, positions, range) {\n    if (!positions) {\n      console.log('[error] Create labels requires positions (x,y,z) array');\n      return;\n    }\n\n    if (positions.length % 3 !== 0) {\n      console.log('[error] Create labels require positions array contain 3d points');\n      return;\n    }\n\n    if (!range) {\n      console.log('[error] Create labels requires Valid range');\n      return;\n    }\n\n    var actor = null,\n        size = vgl.utils.computePowerOfTwo(48),\n        index = 0,\n        actors = [],\n        origin = [],\n        pt1 = [],\n        pt2 = [],\n        delta = (positions[6] - positions[0]),\n        axisLabelOffset = 4, i;\n\n    origin.length = 3;\n    pt1.length = 3;\n    pt2.length = 3;\n\n    // For now just create labels for end points\n    for (i = 0; i < 2; ++i) {\n      index = i * (positions.length - 3);\n\n      origin[0] = positions[index] - delta;\n      origin[1] = positions[index + 1] - 2 * delta;\n      origin[2] = positions[index + 2];\n\n      pt1[0] = positions[index] + delta;\n      pt1[1] = origin[1];\n      pt1[2] = origin[2];\n\n      pt2[0] = origin[0];\n      pt2[1] = positions[1];\n      pt2[2] = origin[2];\n\n      actor = vgl.utils.createTexturePlane(\n        origin[0], origin[1], origin[2],\n        pt1[0], pt1[1], pt1[2],\n        pt2[0], pt2[1], pt2[2], true);\n\n      actor.setReferenceFrame(vgl.boundingObject.ReferenceFrame.Absolute);\n      actor.material().setBinNumber(vgl.material.RenderBin.Overlay);\n      actor.material().addAttribute(vgl.utils.create2DTexture(\n        range[i].toFixed(2).toString(), 12, null));\n      actors.push(actor);\n    }\n\n    // Create axis label\n    origin[0] = (positions[0] + positions[positions.length - 3]  - size) * 0.5;\n    origin[1] = positions[1] + axisLabelOffset;\n    origin[2] = positions[2];\n\n    pt1[0] = origin[0] + size;\n    pt1[1] = origin[1];\n    pt1[2] = origin[2];\n\n    pt2[0] = origin[0];\n    pt2[1] = origin[1] + size;\n    pt2[2] = origin[2];\n\n    actor = vgl.utils.createTexturePlane(\n      origin[0], origin[1], origin[2],\n      pt1[0], pt1[1], pt1[2],\n      pt2[0], pt2[1], pt2[2], true);\n    actor.setReferenceFrame(vgl.boundingObject.ReferenceFrame.Absolute);\n    actor.material().setBinNumber(vgl.material.RenderBin.Overlay);\n    actor.material().addAttribute(vgl.utils.create2DTexture(\n      varname, 24, null));\n    actors.push(actor);\n\n    return actors;\n  }\n\n  //////////////////////////////////////////////////////////////////////////////\n  // TODO Currently we assume that the ticks are laid on x-axis\n  // and this is on a 2D plane (ignoring Z axis. For now lets\n  // not draw minor ticks.\n  /**\n   * Create ticks and labels\n   *\n   * @param originX\n   * @param originY\n   * @param originZ\n   * @param pt1X\n   * @param pt1Y\n   * @param pt1Z\n   * @param pt2X\n   * @param pt2Y\n   * @param pt2Z\n   * @param divs\n   * @param heightMajor\n   * @param heightMinor\n   * @returns {Array} Returns array of vgl.actor\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  function createTicksAndLabels(varname, lut,\n                        originX, originY, originZ,\n                        pt1X, pt1Y, pt1Z,\n                        pt2X, pt2Y, pt2Z,\n                        countMajor, countMinor,\n                        heightMajor, heightMinor) {\n    var width = pt2X - pt1X,\n        index = null,\n        delta = width / countMajor,\n        positions = [],\n        actor = null,\n        actors = [];\n\n    for (index = 0; index <= countMajor; ++index) {\n      positions.push(pt1X + delta * index);\n      positions.push(pt1Y);\n      positions.push(pt1Z);\n\n      positions.push(pt1X + delta * index);\n      positions.push(pt1Y + heightMajor);\n      positions.push(pt1Z);\n    }\n\n    // TODO: Fix this\n    //actor = vgl.utils.createLines(positions, null);\n    //actor.setReferenceFrame(vgl.boundingObject.ReferenceFrame.Absolute);\n    //actor.material().setBinNumber(vgl.material.RenderBin.Overlay);\n    //actors.push(actor);\n\n    actors = actors.concat(createLabels(varname, positions, lut.range()));\n    return actors;\n  }\n\n  // TODO Currently we create only one type of legend\n  var pt1X = origin[0] + width,\n      pt1Y = origin[1],\n      pt1Z = 0.0,\n      pt2X = origin[0],\n      pt2Y = origin[1] + height,\n      pt2Z = 0.0,\n      actors = [],\n      actor = null,\n      mapper = null,\n      mat = null,\n      group = vgl.groupNode();\n\n  actor = vgl.utils.createTexturePlane(\n    origin[0], origin[1], origin[2],\n    pt1X, pt1Y, pt1Z,\n    pt2X, pt2Y, pt2Z, true\n  );\n\n  mat = actor.material();\n  mat.addAttribute(lookupTable);\n  actor.setMaterial(mat);\n  group.addChild(actor);\n  actor.material().setBinNumber(vgl.material.RenderBin.Overlay);\n  actor.setReferenceFrame(vgl.boundingObject.ReferenceFrame.Absolute);\n  actors.push(actor);\n  actors = actors.concat(createTicksAndLabels(\n                          varname,\n                          lookupTable,\n                          origin[0], origin[1], origin[1],\n                          pt2X, pt1Y, pt1Z,\n                          pt1X, pt1Y, pt1Z,\n                          countMajor, countMinor, 5, 3));\n\n  // TODO This needs to change so that we can return a group node\n  // which should get appended to the scene graph\n  return actors;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create 2D texture by rendering text using canvas2D context\n *\n * @param textToWrite\n * @param textSize\n * @param color\n * @returns {vgl.texture}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.create2DTexture = function(textToWrite, textSize,\n  color, font, alignment, baseline, bold) {\n  'use strict';\n\n  var canvas = document.getElementById('textRendering'),\n      ctx = null,\n      texture = vgl.texture();\n\n  font = font || 'sans-serif';\n  alignment = alignment || 'center';\n  baseline = baseline || 'bottom';\n\n  if (typeof bold === 'undefined') {\n    bold = true;\n  }\n\n  if (!canvas) {\n    canvas = document.createElement('canvas');\n  }\n  ctx = canvas.getContext('2d');\n\n  canvas.setAttribute('id', 'textRendering');\n  canvas.style.display = 'none';\n\n  // Make width and height equal so that we get pretty looking text.\n  canvas.height = vgl.utils.computePowerOfTwo(8 * textSize);\n  canvas.width = canvas.height;\n\n  ctx.fillStyle = 'rgba(0, 0, 0, 0)';\n  ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n  // This determines the text colour, it can take a hex value or rgba value (e.g. rgba(255,0,0,0.5))\n  ctx.fillStyle = 'rgba(200, 85, 10, 1.0)';\n\n  // This determines the alignment of text, e.g. left, center, right\n  ctx.textAlign = alignment;\n\n  // This determines the baseline of the text, e.g. top, middle, bottom\n  ctx.textBaseline = baseline;\n\n  // This determines the size of the text and the font family used\n  ctx.font = 4 * textSize + \"px \" + font;\n  if (bold) {\n    ctx.font = \"bold \" + ctx.font;\n  }\n\n  ctx.fillText(textToWrite, canvas.width/2, canvas.height/2, canvas.width);\n\n  texture.setImage(canvas);\n  texture.updateDimensions();\n\n  return texture;\n};\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class picker\n *\n * @class vgl.picker\n * @returns {vgl.picker}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.picker = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.picker)) {\n    return new vgl.picker();\n  }\n  vgl.object.call(this);\n\n  /** @private */\n  var m_that = this,\n      m_tolerance = 0.025,\n      m_actors = [];\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get actors intersected\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.getActors = function() {\n    return m_actors;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Perform pick operation\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.pick = function(selectionX, selectionY, renderer) {\n    // Check if variables are acceptable\n    if (typeof(selectionX) === \"undefined\"){\n      return 0;\n    }\n    if (typeof(selectionY) === \"undefined\"){\n      return 0;\n    }\n    if (typeof(renderer) === \"undefined\"){\n      return 0;\n    }\n\n    // Clean list of actors intersected previously\n    m_actors = [];\n\n    //\n    var camera = renderer.camera(),\n        width = renderer.width(),\n        height = renderer.height(),\n        fpoint = camera.focalPoint(),\n        focusWorldPt = vec4.fromValues(fpoint[0], fpoint[1], fpoint[2], 1.0),\n        focusDisplayPt = renderer.worldToDisplay(\n          focusWorldPt, camera.viewMatrix(),\n        camera.projectionMatrix(), width, height),\n        displayPt = vec4.fromValues(selectionX,\n                      selectionY, focusDisplayPt[2], 1.0),\n        // Convert selection point into world coordinates\n        worldPt = renderer.displayToWorld(displayPt, camera.viewMatrix(),\n                    camera.projectionMatrix(), width, height),\n        cameraPos = camera.position(), ray = [], actors, count, i, bb,\n        tmin, tmax, tymin, tymax, tzmin, tzmax, actor;\n\n    for (i = 0; i < 3; ++i){\n      ray[i] = worldPt[i] - cameraPos[i];\n    }\n\n    // Go through all actors and check if intersects\n    actors = renderer.sceneRoot().children();\n    count = 0;\n\n    for (i = 0; i < actors.length; ++i) {\n      actor = actors[i];\n      if (actor.visible() === true) {\n        bb = actor.bounds();\n        // Ray-aabb intersection - Smits' method\n        if (ray[0] >= 0){\n          tmin = (bb[0] - cameraPos[0])/ray[0];\n          tmax = (bb[1] - cameraPos[0])/ray[0];\n        } else {\n          tmin = (bb[1] - cameraPos[0])/ray[0];\n          tmax = (bb[0] - cameraPos[0])/ray[0];\n        }\n        if (ray[1] >= 0){\n          tymin = (bb[2] - cameraPos[1])/ray[1];\n          tymax = (bb[3] - cameraPos[1])/ray[1];\n        } else {\n          tymin = (bb[3] - cameraPos[1])/ray[1];\n          tymax = (bb[2] - cameraPos[1])/ray[1];\n        }\n        if ((tmin > tymax) || (tymin > tmax)) {\n          continue;\n        }\n\n\n        if (tymin > tmin) {\n          tmin = tymin;\n        }\n        if (tymax < tmax) {\n          tmax = tymax;\n        }\n        if (ray[2] >= 0) {\n          tzmin = (bb[4] - cameraPos[2])/ray[2];\n          tzmax = (bb[5] - cameraPos[2])/ray[2];\n        } else {\n          tzmin = (bb[5] - cameraPos[2])/ray[2];\n          tzmax = (bb[4] - cameraPos[2])/ray[2];\n        }\n        if ((tmin > tzmax) || (tzmin > tmax)) {\n          continue;\n        }\n        if (tzmin > tmin) {\n          tmin = tzmin;\n        }\n        if (tzmax < tmax) {\n          tmax = tzmax;\n        }\n\n        m_actors[count++] = actor;\n      }\n    }\n    return count;\n  };\n\n  return this;\n};\n\ninherit(vgl.picker, vgl.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $, Uint16Array*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of shapefile reader\n *\n * This contains code that reads a shapefile and produces vgl geometries\n *\n * @class\n * @returns {vgl.shapefileReader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.shapefileReader = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.shapefileReader)) {\n    return new vgl.shapefileReader();\n  }\n\n  var m_that = this;\n  var SHP_HEADER_LEN = 8;\n  var SHP_NULL = 0;\n  var SHP_POINT = 1;\n  var SHP_POLYGON = 5;\n  var SHP_POLYLINE = 3;\n\n  this.int8 = function (data, offset) {\n      return data.charCodeAt (offset);\n  };\n\n  this.bint32 = function (data, offset) {\n    return (\n      ((data.charCodeAt (offset) & 0xff) << 24) +\n        ((data.charCodeAt (offset + 1) & 0xff) << 16) +\n        ((data.charCodeAt (offset + 2) & 0xff) << 8) +\n        (data.charCodeAt (offset + 3) & 0xff)\n    );\n  };\n\n  this.lint32 = function (data, offset) {\n    return (\n      ((data.charCodeAt (offset + 3) & 0xff) << 24) +\n        ((data.charCodeAt (offset + 2) & 0xff) << 16) +\n        ((data.charCodeAt (offset + 1) & 0xff) << 8) +\n        (data.charCodeAt (offset) & 0xff)\n    );\n  };\n\n  this.bint16 = function (data, offset) {\n    return (\n      ((data.charCodeAt (offset) & 0xff) << 8) +\n        (data.charCodeAt (offset + 1) & 0xff)\n    );\n  };\n\n  this.lint16 = function (data, offset) {\n    return (\n      ((data.charCodeAt (offset + 1) & 0xff) << 8) +\n        (data.charCodeAt (offset) & 0xff)\n    );\n  };\n\n  this.ldbl64 = function (data, offset) {\n    var b0 = data.charCodeAt (offset) & 0xff;\n    var b1 = data.charCodeAt (offset + 1) & 0xff;\n    var b2 = data.charCodeAt (offset + 2) & 0xff;\n    var b3 = data.charCodeAt (offset + 3) & 0xff;\n    var b4 = data.charCodeAt (offset + 4) & 0xff;\n    var b5 = data.charCodeAt (offset + 5) & 0xff;\n    var b6 = data.charCodeAt (offset + 6) & 0xff;\n    var b7 = data.charCodeAt (offset + 7) & 0xff;\n\n    var sign = 1 - 2 * (b7 >> 7);\n    var exp = (((b7 & 0x7f) << 4) + ((b6 & 0xf0) >> 4)) - 1023;\n    //var frac = (b6 & 0x0f) * Math.pow (2, -4) + b5 * Math.pow (2, -12) + b4 *\n    // Math.pow (2, -20) + b3 * Math.pow (2, -28) + b2 * Math.pow (2, -36) + b1 *\n    // Math.pow (2, -44) + b0 * Math.pow (2, -52);\n\n    //return sign * (1 + frac) * Math.pow (2, exp);\n    var frac = (b6 & 0x0f) * Math.pow (2, 48) + b5 * Math.pow (2, 40) + b4 *\n                 Math.pow (2, 32) + b3 * Math.pow (2, 24) + b2 *\n                 Math.pow (2, 16) + b1 * Math.pow (2, 8) + b0;\n\n    return sign * (1 + frac * Math.pow (2, -52)) * Math.pow (2, exp);\n  };\n\n  this.lfloat32 = function (data, offset) {\n    var b0 = data.charCodeAt (offset) & 0xff;\n    var b1 = data.charCodeAt (offset + 1) & 0xff;\n    var b2 = data.charCodeAt (offset + 2) & 0xff;\n    var b3 = data.charCodeAt (offset + 3) & 0xff;\n\n    var sign = 1 - 2 * (b3 >> 7);\n    var exp = (((b3 & 0x7f) << 1) + ((b2 & 0xfe) >> 7)) - 127;\n    var frac = (b2 & 0x7f) * Math.pow (2, 16) + b1 * Math.pow (2, 8) + b0;\n\n    return sign * (1 + frac * Math.pow (2, -23)) * Math.pow (2, exp);\n  };\n\n  this.str = function (data, offset, length) {\n    var chars = [];\n    var index = offset;\n    while (index < offset + length) {\n      var c = data[index];\n      if (c.charCodeAt (0) !== 0)\n        chars.push (c);\n      else {\n        break;\n      }\n      index ++;\n    }\n    return chars.join ('');\n  };\n\n  this.readHeader = function (data) {\n    var code = this.bint32(data, 0);\n    var length = this.bint32(data, 24);\n    var version = this.lint32(data, 28);\n    var shapetype = this.lint32(data, 32);\n\n    var xmin = this.ldbl64(data, 36);\n    var ymin = this.ldbl64(data, 44);\n    var xmax = this.ldbl64(data, 52);\n    var ymax = this.ldbl64(data, 60);\n    return {\n      code: code,\n      length: length,\n      version: version,\n      shapetype: shapetype,\n      bounds: new Box (vect (xmin, ymin), vect (xmax, ymax))\n    };\n  };\n\n  this.loadShx = function (data) {\n    var indices = [];\n    var appendIndex = function (offset) {\n      indices.push (2 * m_that.bint32(data, offset));\n      return offset + 8;\n    };\n    var offset = 100;\n    while (offset < data.length) {\n      offset = appendIndex (offset);\n    }\n    return indices;\n  };\n\n  this.Shapefile = function (options) {\n    var path = options.path;\n    $.ajax ({\n      url: path + '.shx',\n      mimeType: 'text/plain; charset=x-user-defined',\n      success: function (data) {\n        var indices = this.loadShx(data);\n        $.ajax ({\n          url: path + '.shp',\n          mimeType: 'text/plain; charset=x-user-defined',\n          success: function (data) {\n            $.ajax ({\n              url: path + '.dbf',\n              mimeType: 'text/plain; charset=x-user-defined',\n              success: function (dbf_data) {\n                var layer = this.loadShp (data, dbf_data, indices, options);\n                options.success (layer);\n              }\n            });\n          }\n        });\n      }\n    });\n  };\n\n  this.localShapefile = function(options) {\n    var shxFile = options.shx;\n    var shpFile = options.shp;\n    var dbfFile = options.dbf;\n    var shxReader = new FileReader();\n    shxReader.onloadend = function() {\n      var indices = m_that.loadShx(shxReader.result);\n      var shpReader = new FileReader();\n\n      shpReader.onloadend = function() {\n        var shpData = shpReader.result;\n\n        var dbfReader = new FileReader();\n        dbfReader.onloadend = function() {\n          var dbfData = dbfReader.result;\n          var layer = m_that.loadShp(shpData, dbfData, indices, options);\n          options.success(layer);\n        };\n        dbfReader.readAsBinaryString(dbfFile);\n      };\n      shpReader.readAsBinaryString(shpFile);\n    };\n    shxReader.readAsBinaryString(shxFile);\n  };\n\n  this.loadDBF = function (data) {\n    var readHeader = function (offset) {\n      var name = m_that.str(data, offset, 10);\n      var type = m_that.str(data, offset + 11, 1);\n      var length = m_that.int8(data, offset + 16);\n      return {\n        name: name,\n        type: type,\n        length: length\n      };\n    };\n\n    // Level of the dBASE file\n    var level = m_that.int8(data, 0);\n    if (level == 4) {\n      throw \"Level 7 dBASE not supported\";\n    }\n\n    // Date of last update\n    var year = m_that.int8(data, 1);\n    var month = m_that.int8(data, 2);\n    var day = m_that.int8(data, 3);\n\n    var num_entries = m_that.lint32(data, 4);\n    var header_size = m_that.lint16(data, 8);\n    var record_size = m_that.lint16(data, 10);\n\n    var FIELDS_START = 32;\n    var HEADER_LENGTH = 32;\n\n    var header_offset = FIELDS_START;\n    var headers = [];\n    while (header_offset < header_size - 1) {\n      headers.push (readHeader(header_offset));\n      header_offset += HEADER_LENGTH;\n    }\n\n    var records = [];\n    var record_offset = header_size;\n    while (record_offset < header_size + num_entries * record_size) {\n      var declare = m_that.str(data, record_offset, 1);\n      if (declare == '*') {\n        // Record size in the header include the size of the delete indicator\n        record_offset += record_size;\n      }\n      else {\n        // Move offset to the start of the actual data\n        record_offset ++;\n        var record = {};\n        for (var i = 0; i < headers.length; i ++) {\n          var header = headers[i];\n          var value;\n          if (header.type == 'C') {\n              value = m_that.str(data, record_offset, header.length).trim ();\n          }\n          else if (header.type == 'N') {\n              value = parseFloat (m_that.str (data, record_offset, header.length));\n          }\n          record_offset += header.length;\n          record[header.name] = value;\n        }\n        records.push(record);\n      }\n    }\n    return records;\n  };\n\n  this.loadShp = function (data, dbf_data, indices, options) {\n    var features = [];\n    var readRing = function (offset, start, end) {\n      var ring = [];\n      for (var i = end - 1; i >= start; i --) {\n        var x = m_that.ldbl64(data, offset + 16 * i);\n        var y = m_that.ldbl64(data, offset + 16 * i + 8);\n        ring.push ([x, y]);\n      }\n      //if (ring.length <= 3)\n      // return [];\n      return ring;\n    };\n\n    var readRecord = function (offset) {\n      var index = m_that.bint32(data, offset);\n      var record_length = m_that.bint32(data, offset + 4);\n      var record_offset = offset + 8;\n      var geom_type = m_that.lint32(data, record_offset);\n\n      if (geom_type == SHP_NULL) {\n        console.log (\"NULL Shape\");\n        //return offset + 12;\n      }\n      else if (geom_type == SHP_POINT) {\n        var x = m_that.ldbl64(data, record_offset + 4);\n        var y = m_that.ldbl64(data, record_offset + 12);\n\n        features.push ({\n          type: 'Point',\n          attr: {},\n          geom: [[x, y]]\n        });\n      }\n      else if (geom_type == SHP_POLYGON) {\n        var num_parts = m_that.lint32(data, record_offset + 36);\n        var num_points = m_that.lint32(data, record_offset + 40);\n\n        var parts_start = offset + 52;\n        var points_start = offset + 52 + 4 * num_parts;\n\n        var rings = [];\n        for (var i = 0; i < num_parts; i ++) {\n          var start = m_that.lint32(data, parts_start + i * 4);\n          var end;\n          if (i + 1 < num_parts) {\n            end = m_that.lint32(data, parts_start + (i + 1) * 4);\n          }\n          else {\n            end = num_points;\n          }\n          var ring = readRing (points_start, start, end);\n          rings.push (ring);\n        }\n        features.push ({\n          type: 'Polygon',\n          attr: {},\n          geom: [rings]\n        });\n      }\n      else if (geom_type == SHP_POLYLINE) {\n        var num_parts = m_that.lint32(data, record_offset + 36);\n        var num_points = m_that.lint32(data, record_offset + 40);\n\n        var parts_start = offset + 52;\n        var points_start = offset + 52 + 4 * num_parts;\n\n        var rings = [];\n        for (var i = 0; i < num_parts; i ++) {\n          var start = m_that.lint32(data, parts_start + i * 4);\n          var end;\n          if (i + 1 < num_parts) {\n              end = m_that.lint32(data, parts_start + (i + 1) * 4);\n          }\n          else {\n              end = num_points;\n          }\n          var ring = readRing (points_start, start, end);\n          rings.push (ring);\n        }\n        features.push ({\n          type: 'Polyline',\n          attr: {},\n          geom: [rings]\n        });\n      }\n      else {\n        throw \"Not Implemented: \" + geom_type;\n      }\n      //return offset + 2 * record_length + SHP_HEADER_LEN;\n    };\n\n    var attr = this.loadDBF(dbf_data);\n\n    //var offset = 100;\n    //while (offset < length * 2) {\n    // offset = readRecord (offset);\n    //}\n    for (var i = 0; i < indices.length; i ++) {\n      var offset = indices[i];\n      readRecord (offset);\n    }\n\n    var layer = []; //new Layer ();\n\n    for (var i = 0; i < features.length; i ++) {\n      var feature = features[i];\n      feature.attr = attr[i];\n      layer.push (feature);\n    }\n    return layer;\n  };\n\n  return this;\n};","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2, bitwise: true*/\n\n\n/*global vgl, vec4, mat4, inherit, unescape*/\n/*global Float32Array, Int8Array, gl, Uint16Array, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//\n// vbgModule.vtkReader class\n// This contains code that unpack a json base64 encoded vtkdataset,\n// such as those produced by ParaView's webGL exporter (where much\n// of the code originated from) and convert it to VGL representation.\n//\n//////////////////////////////////////////////////////////////////////////////\n\nvgl.vtkReader = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.vtkReader)) {\n    return new vgl.vtkReader();\n  }\n\n  var m_base64Chars =\n    ['A','B','C','D','E','F','G','H','I','J','K','L','M',\n     'N','O','P','Q','R','S','T','U','V','W','X','Y','Z',\n     'a','b','c','d','e','f','g','h','i','j','k','l','m',\n     'n','o','p','q','r','s','t','u','v','w','x','y','z',\n     '0','1','2','3','4','5','6','7','8','9','+','/'],\n  m_reverseBase64Chars = [],\n  m_vtkObjectList = {},\n  m_vglObjects = {},\n  m_vtkRenderedList = {},\n  m_vtkObjHashList = {},\n  m_vtkObjectCount = 0,\n  m_vtkScene = null,\n  m_node = null,\n  END_OF_INPUT = -1,\n  m_base64Str = \"\",\n  m_base64Count = 0,\n  m_pos = 0,\n  m_viewer = null,\n  i = 0;\n\n  //initialize the array here if not already done.\n  if (m_reverseBase64Chars.length === 0) {\n    for ( i = 0; i < m_base64Chars.length; i++) {\n      m_reverseBase64Chars[m_base64Chars[i]] = i;\n    }\n  }\n\n\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * ntos\n   *\n   * @param n\n   * @returns unescaped n\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.ntos = function (n) {\n    var unN;\n\n    unN = n.toString(16);\n    if (unN.length === 1) {\n      unN = '0' + unN;\n    }\n    unN = '%' + unN;\n\n    return unescape(unN);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * readReverseBase64\n   *\n   * @returns\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.readReverseBase64 = function () {\n    var nextCharacter;\n\n    if (!m_base64Str) {\n      return END_OF_INPUT;\n    }\n\n    while (true) {\n      if (m_base64Count >= m_base64Str.length) {\n        return END_OF_INPUT;\n      }\n      nextCharacter = m_base64Str.charAt(m_base64Count);\n      m_base64Count++;\n\n      if (m_reverseBase64Chars[nextCharacter]) {\n        return m_reverseBase64Chars[nextCharacter];\n      }\n      if (nextCharacter === 'A') {\n        return 0;\n      }\n    }\n\n    return END_OF_INPUT;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * decode64\n   *\n   * @param str\n   * @returns result\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.decode64 = function(str) {\n    var result = '',\n        inBuffer = new Array(4),\n        done = false;\n\n    m_base64Str = str;\n    m_base64Count = 0;\n\n    while (!done &&\n           (inBuffer[0] = this.readReverseBase64()) !== END_OF_INPUT &&\n           (inBuffer[1] = this.readReverseBase64()) !== END_OF_INPUT) {\n      inBuffer[2] = this.readReverseBase64();\n      inBuffer[3] = this.readReverseBase64();\n      result += this.ntos((((inBuffer[0] << 2) & 0xff) | inBuffer[1] >> 4));\n      if (inBuffer[2] !== END_OF_INPUT) {\n        result +=  this.ntos((((inBuffer[1] << 4) & 0xff) | inBuffer[2] >> 2));\n        if (inBuffer[3] !== END_OF_INPUT) {\n          result +=  this.ntos((((inBuffer[2] << 6) & 0xff) | inBuffer[3]));\n        } else {\n          done = true;\n        }\n      } else {\n        done = true;\n      }\n    }\n\n    return result;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * readNumber\n   *\n   * @param ss\n   * @returns v\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.readNumber = function(ss) {\n    var v = ((ss[m_pos++]) +\n             (ss[m_pos++] << 8) +\n             (ss[m_pos++] << 16) +\n             (ss[m_pos++] << 24));\n    return v;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * readF3Array\n   *\n   * @param numberOfPoints\n   * @param ss\n   * @returns points\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.readF3Array = function(numberOfPoints, ss) {\n    var size = numberOfPoints*4*3, test = new Int8Array(size),\n        points = null, i;\n\n    for(i = 0; i < size; i++) {\n      test[i] = ss[m_pos++];\n    }\n\n    points = new Float32Array(test.buffer);\n\n    return points;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * readColorArray\n   *\n   * @param numberOfPoints\n   * @param ss\n   * @param vglcolors\n   * @returns points\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.readColorArray = function (numberOfPoints, ss, vglcolors) {\n    var i,r,g,b,idx = 0, tmp = new Array(numberOfPoints*3);\n    for(i = 0; i < numberOfPoints; i++) {\n      tmp[idx++] = ss[m_pos++]/255.0;\n      tmp[idx++] = ss[m_pos++]/255.0;\n      tmp[idx++] = ss[m_pos++]/255.0;\n      m_pos++;\n    }\n    vglcolors.insert(tmp);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * parseObject\n   *\n   * @param buffer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.parseObject = function(vtkObject) {\n    var geom = new vgl.geometryData(), mapper = vgl.mapper(), ss = [],\n        type = null, data = null, size, matrix = null, material = null,\n        actor, colorMapData, shaderProg, opacityUniform, lookupTable,\n        colorTable, windowSize, width, height, position;\n\n    //dehexlify\n//    data = this.decode64(vtkObject.data);\n    data = atob(vtkObject.data);\n    for(i = 0; i < data.length; i++) {\n      ss[i] = data.charCodeAt(i) & 0xff;\n    }\n\n    //Determine the Object type\n    m_pos = 0;\n    size = this.readNumber(ss);\n    type = String.fromCharCode(ss[m_pos++]);\n    geom.setName(type);\n\n    // Lines\n    if (type === 'L') {\n      matrix = this.parseLineData(geom, ss);\n      material = vgl.utils.createGeometryMaterial();\n    }\n    // Mesh\n    else if (type === 'M') {\n      matrix = this.parseMeshData(geom, ss);\n      material = vgl.utils.createPhongMaterial();\n    }\n    // Points\n    else if (type === 'P'){\n      matrix = this.parsePointData(geom, ss);\n      material = vgl.utils.createGeometryMaterial();\n    }\n    // ColorMap\n    else if (type === 'C') {\n      colorMapData = this.parseColorMapData(geom, ss, size);\n      colorTable = [];\n\n      for (i = 0; i < colorMapData.colors.length; i++) {\n          colorTable.push(colorMapData.colors[i][1])\n          colorTable.push(colorMapData.colors[i][2])\n          colorTable.push(colorMapData.colors[i][3])\n          colorTable.push(colorMapData.colors[i][0] * 255)\n      }\n\n      lookupTable = new vgl.lookupTable();\n      lookupTable.setColorTable(colorTable);\n\n      windowSize = m_viewer.renderWindow().windowSize();\n      width = colorMapData.size[0]*windowSize[0];\n      height = colorMapData.size[1]*windowSize[1];\n\n      position = [colorMapData.position[0]*windowSize[0],\n                  (1-colorMapData.position[1])*windowSize[1], 0];\n      position[1] = position[1]-height;\n\n      // For now hardcode the height\n      height = 30;\n\n      return vgl.utils.createColorLegend(colorMapData.title,\n          lookupTable, position, width, height, 3, 0);\n    }\n    // Unknown\n    else {\n      console.log(\"Ignoring unrecognized encoded data type \" + type);\n    }\n\n    mapper.setGeometryData(geom);\n\n    //default opacity === solid. If were transparent, set it lower.\n    if (vtkObject.hasTransparency) {\n      shaderProg = material.shaderProgram();\n      opacityUniform = shaderProg.uniform(\"opacity\");\n      shaderProg.addUniform(new vgl.floatUniform(\"opacity\", 0.5));\n      material.setBinNumber(1000);\n    }\n\n    actor = vgl.actor();\n    actor.setMapper(mapper);\n    actor.setMaterial(material);\n    actor.setMatrix(mat4.transpose(mat4.create(), matrix));\n\n    return [actor];\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * parseLineData\n   *\n   * @param geom, ss\n   * @returns matrix\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.parseLineData = function(geom, ss) {\n    var vglpoints = null, vglcolors = null, vgllines = null,\n        matrix = mat4.create(),\n        numberOfIndex, numberOfPoints, points,\n        temp, index, size, m, i,\n        p = null, idx = 0;\n\n    numberOfPoints = this.readNumber(ss);\n    p = new Array(numberOfPoints*3);\n\n    //Getting Points\n    vglpoints = new vgl.sourceDataP3fv();\n    points = this.readF3Array(numberOfPoints, ss);\n\n    for(i = 0; i < numberOfPoints; i++) {\n      p[idx++] = points[i*3/*+0*/];\n      p[idx++] = points[i*3+1];\n      p[idx++] =  points[i*3+2];\n    }\n    vglpoints.insert(p);\n    geom.addSource(vglpoints);\n\n    //Getting Colors\n    vglcolors = new vgl.sourceDataC3fv();\n    this.readColorArray(numberOfPoints, ss, vglcolors);\n    geom.addSource(vglcolors);\n\n    //Getting connectivity\n    vgllines = new vgl.lines();\n    geom.addPrimitive(vgllines);\n    numberOfIndex = this.readNumber(ss);\n\n    temp = new Int8Array(numberOfIndex*2);\n    for(i = 0; i < numberOfIndex*2; i++) {\n      temp[i] = ss[m_pos++];\n    }\n\n    index = new Uint16Array(temp.buffer);\n    vgllines.setIndices(index);\n    vgllines.setPrimitiveType(gl.LINES);\n\n    //Getting Matrix\n    size = 16*4;\n    temp = new Int8Array(size);\n    for(i=0; i<size; i++) {\n      temp[i] = ss[m_pos++];\n    }\n\n    m = new Float32Array(temp.buffer);\n    mat4.copy(matrix, m);\n\n    return matrix;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * parseMeshData\n   *\n   * @param geom, ss\n   * @returns matrix\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.parseMeshData = function(geom, ss) {\n    var vglpoints = null, vglcolors = null, vgllines = null,\n        normals = null, matrix = mat4.create(), v1 = null,\n        vgltriangles = null, numberOfIndex, numberOfPoints,\n        points, temp, index, size, m, i, tcoord,\n        pn = null, idx = 0;\n\n    numberOfPoints = this.readNumber(ss);\n    pn = new Array(numberOfPoints*6);\n    //Getting Points\n    vglpoints = new vgl.sourceDataP3N3f();\n    points = this.readF3Array(numberOfPoints, ss);\n\n    //Getting Normals\n    normals = this.readF3Array(numberOfPoints, ss);\n    for(i = 0; i < numberOfPoints; i++) {\n      pn[idx++] = points[i*3/*+0*/];\n      pn[idx++] = points[i*3+1];\n      pn[idx++] = points[i*3+2];\n      pn[idx++] = normals[i*3/*+0*/];\n      pn[idx++] = normals[i*3+1];\n      pn[idx++] = normals[i*3+2];\n    }\n    vglpoints.insert(pn);\n    geom.addSource(vglpoints);\n\n    //Getting Colors\n    vglcolors = new vgl.sourceDataC3fv();\n    this.readColorArray(numberOfPoints, ss, vglcolors);\n    geom.addSource(vglcolors);\n\n    //Getting connectivity\n    temp = [];\n    vgltriangles = new vgl.triangles();\n    numberOfIndex = this.readNumber(ss);\n\n    temp = new Int8Array(numberOfIndex*2);\n    for(i = 0; i < numberOfIndex*2; i++) {\n      temp[i] = ss[m_pos++];\n    }\n\n    index = new Uint16Array(temp.buffer);\n    vgltriangles.setIndices(index);\n    geom.addPrimitive(vgltriangles);\n\n    //Getting Matrix\n    size = 16*4;\n    temp = new Int8Array(size);\n    for(i = 0; i < size; i++) {\n      temp[i] = ss[m_pos++];\n    }\n\n    m = new Float32Array(temp.buffer);\n    mat4.copy(matrix, m);\n\n    //Getting TCoord\n    //TODO: renderer is not doing anything with this yet\n    tcoord = null;\n\n    return matrix;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * parsePointData\n   *\n   * @param geom, ss\n   * @returns matrix\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.parsePointData = function(geom, ss) {\n    var numberOfPoints, points, indices, temp, size,\n        matrix = mat4.create(), vglpoints = null,\n        vglcolors = null, vglVertexes = null, m,\n        p = null, idx = 0;\n\n    numberOfPoints = this.readNumber(ss);\n    p = new Array(numberOfPoints*3);\n\n    //Getting Points and creating 1:1 connectivity\n    vglpoints = new vgl.sourceDataP3fv();\n    points = this.readF3Array(numberOfPoints, ss);\n\n    indices = new Uint16Array(numberOfPoints);\n\n    for (i = 0; i < numberOfPoints; i++) {\n      indices[i] = i;\n      p[idx++] = points[i*3/*+0*/];\n      p[idx++] = points[i*3+1];\n      p[idx++] = points[i*3+2];\n    }\n    vglpoints.insert(p);\n    geom.addSource(vglpoints);\n\n    //Getting Colors\n    vglcolors = new vgl.sourceDataC3fv();\n    this.readColorArray(numberOfPoints, ss, vglcolors);\n    geom.addSource(vglcolors);\n\n    //Getting connectivity\n    vglVertexes = new vgl.points();\n    vglVertexes.setIndices(indices);\n    geom.addPrimitive(vglVertexes);\n\n    //Getting matrix\n    size = 16*4;\n    temp = new Int8Array(size);\n    for(i = 0; i < size; i++) {\n      temp[i] = ss[m_pos++];\n    }\n\n    m = new Float32Array(temp.buffer);\n    mat4.copy(matrix, m);\n\n    return matrix;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * parseColorMapData\n   *\n   * @param geom, ss\n   * @returns matrix\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.parseColorMapData = function(geom, ss, numColors) {\n\n    var tmpArray, size, xrgb, i, c, obj = {};\n\n    // Set number of colors\n    obj.numOfColors = numColors;\n\n    // Getting Position\n    size = 8;\n    tmpArray = new Int8Array(size);\n    for(i=0; i < size; i++) {\n        tmpArray[i] = ss[m_pos++];\n    }\n    obj.position = new Float32Array(tmpArray.buffer);\n\n    // Getting Size\n    size = 8;\n    tmpArray = new Int8Array(size);\n    for(i=0; i < size; i++) {\n        tmpArray[i] = ss[m_pos++];\n    }\n    obj.size = new Float32Array(tmpArray.buffer);\n\n    //Getting Colors\n    obj.colors = [];\n    for(c=0; c < obj.numOfColors; c++){\n      tmpArray = new Int8Array(4);\n      for(i=0; i < 4; i++) {\n        tmpArray[i] = ss[m_pos++];\n      }\n\n      xrgb = [\n        new Float32Array(tmpArray.buffer)[0],\n        ss[m_pos++],\n        ss[m_pos++],\n        ss[m_pos++]\n      ];\n      obj.colors[c] = xrgb;\n    }\n\n    obj.orientation = ss[m_pos++];\n    obj.numOfLabels = ss[m_pos++];\n    obj.title = \"\";\n    while(m_pos < ss.length) {\n      obj.title += String.fromCharCode(ss[m_pos++]);\n    }\n\n    return obj;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * parseSceneMetadata\n   *\n   * @param data\n   * @returns renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.parseSceneMetadata = function(renderer, layer) {\n\n    var sceneRenderer = m_vtkScene.Renderers[layer],\n        camera = renderer.camera(), bgc, localWidth, localHeight;\n\n    localWidth = (sceneRenderer.size[0] - sceneRenderer.origin[0])*m_node.width;\n    localHeight = (sceneRenderer.size[1] - sceneRenderer.origin[1])*m_node.height;\n    renderer.resize(localWidth, localHeight);\n\n    /// We are setting the center to the focal point because of\n    /// a possible paraview web bug. The center of rotation isn't\n    /// getting updated correctly on resetCamera.\n    camera.setCenterOfRotation(\n      [sceneRenderer.LookAt[1], sceneRenderer.LookAt[2],\n       sceneRenderer.LookAt[3]]);\n    camera.setViewAngleDegrees(sceneRenderer.LookAt[0]);\n    camera.setPosition(\n      sceneRenderer.LookAt[7], sceneRenderer.LookAt[8],\n      sceneRenderer.LookAt[9]);\n    camera.setFocalPoint(\n      sceneRenderer.LookAt[1], sceneRenderer.LookAt[2],\n      sceneRenderer.LookAt[3]);\n    camera.setViewUpDirection(\n      sceneRenderer.LookAt[4], sceneRenderer.LookAt[5],\n      sceneRenderer.LookAt[6]);\n\n    if (layer === 0)\n    {\n      bgc = sceneRenderer.Background1;\n      renderer.setBackgroundColor(bgc[0], bgc[1], bgc[2], 1);\n    } else {\n        renderer.setResizable(false);\n    }\n    renderer.setLayer(layer);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * initScene\n   *\n   * @returns viewer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.initScene = function() {\n    var renderer, layer;\n\n    if ( m_vtkScene === null ) {\n      return m_viewer;\n    }\n    for(layer = m_vtkScene.Renderers.length - 1; layer >= 0; layer--) {\n\n      renderer = this.getRenderer(layer);\n      this.parseSceneMetadata(renderer, layer);\n    }\n\n    return m_viewer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * createViewer - Creates a viewer object.\n   *\n   * @param\n   *\n   * @returns viewer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.createViewer = function(node) {\n    var interactorStyle;\n\n    if(m_viewer === null) {\n      m_node = node;\n      m_viewer = vgl.viewer(node);\n      m_viewer.init();\n      m_vtkRenderedList[0] = m_viewer.renderWindow().activeRenderer();\n      m_viewer.renderWindow().resize(node.width, node.height);\n      interactorStyle = vgl.pvwInteractorStyle();\n      m_viewer.setInteractorStyle(interactorStyle);\n    }\n\n    return m_viewer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * deleteViewer - Deletes the viewer object associated with the reader.\n   *\n   * @returns void\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.deleteViewer = function() {\n      m_vtkRenderedList = {};\n      m_viewer = null;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * updateCanvas -\n   *\n   * @param\n   *\n   * @returns void\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.updateCanvas = function(node) {\n    m_node = node;\n    m_viewer.renderWindow().resize(node.width, node.height);\n\n    return m_viewer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * clearVtkObjectData - Clear out the list of VTK geometry data.\n   *\n   * @param void\n   * @returns void\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.numObjects = function() {\n    return m_vtkObjectCount;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * getRenderer - Gets (or creates) the renderer for a layer.\n   *\n   * @param layer\n   * @returns renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.getRenderer = function(layer) {\n    var renderer;\n\n    renderer = m_vtkRenderedList[layer];\n    if (renderer === null || typeof renderer === 'undefined') {\n      renderer = new vgl.renderer();\n      renderer.setResetScene(false);\n      renderer.setResetClippingRange(false);\n      m_viewer.renderWindow().addRenderer(renderer);\n\n      if (layer !== 0) {\n          renderer.camera().setClearMask(vgl.GL.DepthBufferBit);\n      }\n\n      m_vtkRenderedList[layer] = renderer;\n    }\n\n    return renderer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * setVtkScene - Set the VTK scene data for camera initialization.\n   *\n   * @param scene\n   * @returns void\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setVtkScene = function(scene) {\n    m_vtkScene = scene;\n  };\n\n  return this;\n};\n","vgl.DataBuffers = function (initialSize) {\n    if (!(this instanceof vgl.DataBuffers)) {\n      return new vgl.DataBuffers(initialSize);\n    }\n\n    var data = {};\n\n    var size;\n    if (!initialSize)\n        size = 256;\n    else\n        size = initialSize;\n\n    var current = 0;\n\n    var copyArray = function (dst, src, start, count) {\n        if (!dst)\n            console.log ('ack');\n        if (!start)\n            start = 0;\n        if (!count)\n            count = src.length;\n        for (var i = 0; i < count; i ++) {\n            dst[start + i] = src[i];\n        }\n    };\n\n    var resize = function (min_expand) {\n        var new_size = size;\n        /* If the array would increase substantially, don't just double its\n         * size.  If the array has been increasing gradually, double it as the\n         * expectation is that it will increase again. */\n        if (new_size * 2 < min_expand) {\n            new_size = min_expand;\n        }\n        while (new_size < min_expand)\n            new_size *= 2;\n        size = new_size;\n        for (var name in data) {\n            var newArray = new Float32Array (new_size * data[name].len);\n            var oldArray = data[name].array;\n            copyArray (newArray, oldArray);\n            data[name].array = newArray;\n            data[name].dirty = true;\n        }\n    };\n\n    this.create = function (name, len) {\n        if (!len)\n            throw \"Length of buffer must be a positive integer\";\n        var array = new Float32Array (size * len);\n        data[name] = {\n            array: array,\n            len: len,\n            dirty: false\n        };\n    };\n\n    this.alloc = function (num) {\n        if ((current + num) >= size)\n            resize (current + num);\n        var start = current;\n        current += num;\n        return start;\n    };\n\n    this.get = function (name) {\n        return data[name].array;\n    };\n\n    this.write = function (name, array, start, count) {\n        copyArray (data[name].array, array, start * data[name].len, count * data[name].len);\n        data[name].dirty = true;\n    };\n\n    this.repeat = function (name, elem, start, count) {\n        for (var i = 0; i < count; i ++) {\n            copyArray (data[name].array, elem,\n                       (start + i) * data[name].len, data[name].len);\n        }\n        data[name].dirty = true;\n    };\n\n    this.count = function () {\n        return current;\n    };\n\n    this.data = function (name) {\n        return data[name].array;\n    };\n};\n","\n(function () {\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n  /**\n   * Takes a variable number of arguments and returns the first numeric value\n   * it finds.\n   * @private\n   */\n  function setNumeric() {\n    var i;\n    for (i = 0; i < arguments.length; i += 1) {\n      if (isFinite(arguments[i])) {\n        return arguments[i];\n      }\n    }\n  }\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Contains utility classes and methods used by geojs.\n   * @namespace\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  geo.util = {\n    /**\n     * Returns true if the given point lies in the given polygon.\n     * Algorithm description:\n     *   http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n     * @param {geo.screenPosition} point The test point\n     * @param {geo.screenPosition[]} outer The outer boundary of the polygon\n     * @param {geo.screenPosition[][]?} inner Inner boundaries (holes)\n     */\n    pointInPolygon: function (point, outer, inner) {\n      var inside = false, n = outer.length;\n\n      if (n < 3) {\n        // we need 3 coordinates for this to make sense\n        return false;\n      }\n\n      outer.forEach(function (vert, i) {\n        var j = (n + i - 1) % n;\n        var intersect = (\n          ((outer[i].y > point.y) !== (outer[j].y > point.y)) &&\n          (point.x < (outer[j].x - outer[i].x) *\n                     (point.y - outer[i].y) /\n                     (outer[j].y - outer[i].y) + outer[i].x)\n        );\n        if (intersect) {\n          inside = !inside;\n        }\n      });\n\n      (inner || []).forEach(function (hole) {\n        inside = inside && !geo.util.pointInPolygon(point, hole);\n      });\n\n      return inside;\n    },\n\n    /**\n     * Returns true if the argument is a function.\n     */\n    isFunction: function (f) {\n      return typeof f === \"function\";\n    },\n\n    /**\n     * Returns the argument if it is function, otherwise returns a function\n     * that returns the argument.\n     */\n    ensureFunction: function (f) {\n      if (geo.util.isFunction(f)) {\n        return f;\n      } else {\n        return function () { return f; };\n      }\n    },\n\n    /**\n     * Return a random string of length n || 8.\n     */\n    randomString: function (n) {\n      var s, i, r;\n      n = n || 8;\n      s = \"\";\n      for (i = 0; i < n; i += 1) {\n        r = Math.floor(Math.random() * chars.length);\n        s += chars.substring(r, r + 1);\n      }\n      return s;\n    },\n\n    /**\n     * Convert a color from hex value or css name to rgb objects\n     */\n    convertColor: function (color) {\n      if (typeof color === \"string\") {\n        if (geo.util.cssColors.hasOwnProperty(color)) {\n          color = geo.util.cssColors[color];\n        } else if (color.charAt(0) === \"#\") {\n          color = parseInt(color.slice(1), 16);\n        }\n      }\n      // jshint -W016\n      if (isFinite(color)) {\n        color = {\n          r: ((color & 0xff0000) >> 16) / 255,\n          g: ((color & 0xff00) >> 8) / 255,\n          b: ((color & 0xff)) / 255\n        };\n      }\n      // jshint +W016\n      return color;\n    },\n\n    /**\n     * Normalize a coordinate object into {x: ..., y: ..., z: ... } form.\n     * Accepts 2-3d arrays,\n     * latlng objects\n     * latitude -> lat -> y\n     * longitude -> lon -> lng -> x\n     */\n    normalizeCoordinates: function (p) {\n      p = p || {};\n      if (Array.isArray(p)) {\n        return {\n          x: p[0],\n          y: p[1],\n          z: p[2] || 0\n        };\n      }\n      if (p instanceof geo.latlng) {\n        return {\n          x: p.lng(),\n          y: p.lat(),\n          z: 0\n        };\n      }\n      return {\n        x: setNumeric(\n          p.x,\n          p.longitude,\n          p.lng,\n          p.lon,\n          0\n        ),\n        y: setNumeric(\n          p.y,\n          p.latitude,\n          p.lat,\n          0\n        ),\n        z: setNumeric(\n          p.z,\n          p.elevation,\n          p.elev,\n          p.height,\n          0\n        )\n      };\n    }\n  };\n\n  geo.util.cssColors = {\n    aliceblue: 0xf0f8ff,\n    antiquewhite: 0xfaebd7,\n    aqua: 0x00ffff,\n    aquamarine: 0x7fffd4,\n    azure: 0xf0ffff,\n    beige: 0xf5f5dc,\n    bisque: 0xffe4c4,\n    black: 0x000000,\n    blanchedalmond: 0xffebcd,\n    blue: 0x0000ff,\n    blueviolet: 0x8a2be2,\n    brown: 0xa52a2a,\n    burlywood: 0xdeb887,\n    cadetblue: 0x5f9ea0,\n    chartreuse: 0x7fff00,\n    chocolate: 0xd2691e,\n    coral: 0xff7f50,\n    cornflowerblue: 0x6495ed,\n    cornsilk: 0xfff8dc,\n    crimson: 0xdc143c,\n    cyan: 0x00ffff,\n    darkblue: 0x00008b,\n    darkcyan: 0x008b8b,\n    darkgoldenrod: 0xb8860b,\n    darkgray: 0xa9a9a9,\n    darkgreen: 0x006400,\n    darkgrey: 0xa9a9a9,\n    darkkhaki: 0xbdb76b,\n    darkmagenta: 0x8b008b,\n    darkolivegreen: 0x556b2f,\n    darkorange: 0xff8c00,\n    darkorchid: 0x9932cc,\n    darkred: 0x8b0000,\n    darksalmon: 0xe9967a,\n    darkseagreen: 0x8fbc8f,\n    darkslateblue: 0x483d8b,\n    darkslategray: 0x2f4f4f,\n    darkslategrey: 0x2f4f4f,\n    darkturquoise: 0x00ced1,\n    darkviolet: 0x9400d3,\n    deeppink: 0xff1493,\n    deepskyblue: 0x00bfff,\n    dimgray: 0x696969,\n    dimgrey: 0x696969,\n    dodgerblue: 0x1e90ff,\n    firebrick: 0xb22222,\n    floralwhite: 0xfffaf0,\n    forestgreen: 0x228b22,\n    fuchsia: 0xff00ff,\n    gainsboro: 0xdcdcdc,\n    ghostwhite: 0xf8f8ff,\n    gold: 0xffd700,\n    goldenrod: 0xdaa520,\n    gray: 0x808080,\n    green: 0x008000,\n    greenyellow: 0xadff2f,\n    grey: 0x808080,\n    honeydew: 0xf0fff0,\n    hotpink: 0xff69b4,\n    indianred: 0xcd5c5c,\n    indigo: 0x4b0082,\n    ivory: 0xfffff0,\n    khaki: 0xf0e68c,\n    lavender: 0xe6e6fa,\n    lavenderblush: 0xfff0f5,\n    lawngreen: 0x7cfc00,\n    lemonchiffon: 0xfffacd,\n    lightblue: 0xadd8e6,\n    lightcoral: 0xf08080,\n    lightcyan: 0xe0ffff,\n    lightgoldenrodyellow: 0xfafad2,\n    lightgray: 0xd3d3d3,\n    lightgreen: 0x90ee90,\n    lightgrey: 0xd3d3d3,\n    lightpink: 0xffb6c1,\n    lightsalmon: 0xffa07a,\n    lightseagreen: 0x20b2aa,\n    lightskyblue: 0x87cefa,\n    lightslategray: 0x778899,\n    lightslategrey: 0x778899,\n    lightsteelblue: 0xb0c4de,\n    lightyellow: 0xffffe0,\n    lime: 0x00ff00,\n    limegreen: 0x32cd32,\n    linen: 0xfaf0e6,\n    magenta: 0xff00ff,\n    maroon: 0x800000,\n    mediumaquamarine: 0x66cdaa,\n    mediumblue: 0x0000cd,\n    mediumorchid: 0xba55d3,\n    mediumpurple: 0x9370db,\n    mediumseagreen: 0x3cb371,\n    mediumslateblue: 0x7b68ee,\n    mediumspringgreen: 0x00fa9a,\n    mediumturquoise: 0x48d1cc,\n    mediumvioletred: 0xc71585,\n    midnightblue: 0x191970,\n    mintcream: 0xf5fffa,\n    mistyrose: 0xffe4e1,\n    moccasin: 0xffe4b5,\n    navajowhite: 0xffdead,\n    navy: 0x000080,\n    oldlace: 0xfdf5e6,\n    olive: 0x808000,\n    olivedrab: 0x6b8e23,\n    orange: 0xffa500,\n    orangered: 0xff4500,\n    orchid: 0xda70d6,\n    palegoldenrod: 0xeee8aa,\n    palegreen: 0x98fb98,\n    paleturquoise: 0xafeeee,\n    palevioletred: 0xdb7093,\n    papayawhip: 0xffefd5,\n    peachpuff: 0xffdab9,\n    peru: 0xcd853f,\n    pink: 0xffc0cb,\n    plum: 0xdda0dd,\n    powderblue: 0xb0e0e6,\n    purple: 0x800080,\n    red: 0xff0000,\n    rosybrown: 0xbc8f8f,\n    royalblue: 0x4169e1,\n    saddlebrown: 0x8b4513,\n    salmon: 0xfa8072,\n    sandybrown: 0xf4a460,\n    seagreen: 0x2e8b57,\n    seashell: 0xfff5ee,\n    sienna: 0xa0522d,\n    silver: 0xc0c0c0,\n    skyblue: 0x87ceeb,\n    slateblue: 0x6a5acd,\n    slategray: 0x708090,\n    slategrey: 0x708090,\n    snow: 0xfffafa,\n    springgreen: 0x00ff7f,\n    steelblue: 0x4682b4,\n    tan: 0xd2b48c,\n    teal: 0x008080,\n    thistle: 0xd8bfd8,\n    tomato: 0xff6347,\n    turquoise: 0x40e0d0,\n    violet: 0xee82ee,\n    wheat: 0xf5deb3,\n    white: 0xffffff,\n    whitesmoke: 0xf5f5f5,\n    yellow: 0xffff00,\n    yellowgreen: 0x9acd32\n  };\n}());\n","//////////////////////////////////////////////////////////////////////////////\n/*\n * Includes several support classes adapted from wigglemaps.\n *\n * https://github.com/dotskapes/wigglemaps\n *\n * Copyright 2013 Preston and Krejci (dotSkapes Virtual Lab)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n//////////////////////////////////////////////////////////////////////////////\n\n/* jshint ignore: start */\n(function () {\n    'use strict';\n\n    var RangeNode = function (elem, start, end, current) {\n        this.data = elem[current];\n        this.left = null;\n        this.right = null;\n        if (start != current)\n            this.left = new RangeNode (elem, start, current - 1, parseInt ((start + (current - 1)) / 2, 10));\n        if (end != current)\n            this.right = new RangeNode (elem, current + 1, end, parseInt ((end + (current + 1)) / 2, 10));\n        this.subtree = [];\n        for (var i = start; i <= end; i ++) {\n            this.subtree.push (elem[i]);\n        }\n        this.subtree.sort (function (a, b) {\n            return a.y - b.y;\n        });\n\n        var xrange = function (b) {\n            return (b.x_in (elem[start]) && b.x_in (elem[end]));\n        };\n\n        this.yrange = function (b, start, end) {\n            return (b.y_in (this.subtree[start]) && b.y_in (this.subtree[end]));\n        };\n\n        this.subquery = function (result, box, start, end, current) {\n            if (this.yrange (box, start, end)) {\n                for (var i = start; i <= end; i ++) {\n                    result.push (this.subtree[i]);\n                }\n                return;\n            }\n            if (box.y_in (this.subtree[current]))\n                result.push (this.subtree[current]);\n            if (box.y_left (this.subtree[current])){\n                if (current != end)\n                    this.subquery (result, box, current + 1, end, parseInt ((end + (current + 1)) / 2, 10));\n            }\n            else if (box.x_right (this.subtree[current])) {\n                if (current != start)\n                    this.subquery (result, box, start, current - 1, parseInt ((start + (current - 1)) / 2, 10));\n            }\n            else {\n                if (current != end)\n                    this.subquery (result, box, current + 1, end, parseInt ((end + (current + 1)) / 2, 10));\n                if (current != start)\n                    this.subquery (result, box, start, current - 1, parseInt ((start + (current - 1)) / 2, 10));\n            }\n        };\n        \n        this.search = function (result, box) {\n            if (xrange (box)) {\n                this.subquery (result, box, 0, this.subtree.length - 1, parseInt ((this.subtree.length - 1) / 2, 10));\n                return;\n            }\n            else {\n                if (box.contains (this.data))\n                    result.push (this.data);\n                if (box.x_left (this.data)) {\n                    if (this.right)\n                        this.right.search (result, box);\n                }\n                else if (box.x_right (this.data)) {\n                    if (this.left)\n                        this.left.search (result, box);\n                }\n                else {\n                    if (this.left)\n                        this.left.search (result, box);\n                    if (this.right)\n                        this.right.search (result, box);\n                }\n            }\n        };\n    };\n\n    var RangeTree = function (elem) {\n        elem.sort (function (a, b) {\n            return a.x - b.x;\n        });\n        if (elem.length > 0)\n            this.root = new RangeNode (elem, 0, elem.length - 1, parseInt ((elem.length - 1) / 2, 10));\n        else\n            this.root = null;\n\n        this.search = function (_box) {\n            if (!this.root)\n                return [];\n            //var box = new Box (min, max);\n            var box = _box.clone ();\n            var result = [];\n            this.root.search (result, box);\n            return result;\n        };\n    };\n\n    var Box = function (v1, v2) {\n        this.min = v1.clone ();\n        this.max = v2.clone ();\n        this.contains = function (p) {\n            return (v1.x <= p.x) && (v2.x >= p.x) && (v1.y <= p.y) && (v2.y >= p.y);\n        };\n\n        this.x_in = function (p) {\n            return (v1.x <= p.x) && (v2.x >= p.x);\n        };\n\n        this.x_left = function (p) {\n            return (v1.x >= p.x);\n        };\n\n        this.x_right = function (p) {\n            return (v2.x <= p.x);\n        };\n\n        this.y_in = function (p) {\n            return (v1.y <= p.y) && (v2.y >= p.y);\n        };\n\n        this.y_left = function (p) {\n            return (v1.y >= p.y);\n        };\n\n        this.y_right = function (p) {\n            return (v2.y <= p.y);\n        };\n\n        this.area = function () {\n            return (this.max.x - this.min.x) * (this.max.y - this.min.y);\n        };\n\n        this.height = function () {\n            return this.max.y - this.min.y;\n        };\n\n        this.width = function () {\n            return this.max.x - this.min.x;\n        };\n        \n        this.vertex = function (index) {\n            switch (index) {\n            case 0:\n                return this.min.clone ();\n            case 1:\n                return new vect (this.max.x, this.min.y);\n            case 2:\n                return this.max.clone ();\n            case 3:\n                return new vect (this.min.x, this.max.y);\n            default:\n                throw \"Index out of bounds: \" + index ;\n            }\n        };\n\n        this.intersects = function (box) {\n            for (var i = 0; i < 4; i ++) {\n                for (var j = 0; j < 4; j ++) {\n                    if (vect.intersects (this.vertex (i), this.vertex ((i + 1) % 4),\n                                         box.vertex (j), box.vertex ((j + 1) % 4)))\n                        return true;\n                }\n            }\n            if (this.contains (box.min) &&\n                this.contains (box.max) &&\n                this.contains (new vect (box.min.x, box.max.y)) &&\n                this.contains (new vect (box.max.x, box.min.y)))\n                return true;\n            if (box.contains (this.min) &&\n                box.contains (this.max) &&\n                box.contains (new vect (this.min.x, this.max.y)) &&\n                box.contains (new vect (this.max.x, this.min.y)))\n                return true;\n            return false;\n        };\n\n        this.union = function (b) {\n            this.min.x = Math.min (this.min.x, b.min.x);\n            this.min.y = Math.min (this.min.y, b.min.y);\n\n            this.max.x = Math.max (this.max.x, b.max.x);\n            this.max.y = Math.max (this.max.y, b.max.y);\n        };\n\n        this.centroid = function () {\n            return new vect ((this.max.x + this.min.x) / 2, (this.max.y + this.min.y) / 2);\n        };\n\n        this.clone = function () {\n            return new Box (v1, v2);\n        };\n    };\n\n    // A basic vector type. Supports standard 2D vector operations\n    var Vector2D = function (x, y) {\n        this.x = x;\n        this.y = y;\n\n        this.add = function (v) {\n            this.x += v.x;\n            this.y += v.y;\n            return this;\n        };\n        this.sub = function (v) {\n            this.x -= v.x;\n            this.y -= v.y;\n            return this;\n        };\n        this.scale = function (s) {\n            this.x *= s;\n            this.y *= s;\n            return this;\n        };\n        this.length = function () {\n            return Math.sqrt (this.x * this.x + this.y * this.y);\n        };\n        this.normalize = function () {\n            var scale = this.length ();\n            if (scale === 0)\n                return this;\n            this.x /= scale;\n            this.y /= scale;\n            return this;\n        };\n        this.div = function (v) {\n            this.x /= v.x;\n            this.y /= v.y;\n            return this;\n        };\n        this.floor = function () {\n            this.x = Math.floor (this.x);\n            this.y = Math.floor (this.y);\n            return this;\n        };\n        this.zero = function (tol) {\n            tol = tol || 0;\n            return (this.length() <= tol);\n        };\n        this.dot = function (v) {\n            return (this.x * v.x) + (this.y * v.y);\n        };\n        this.cross = function (v) {\n            return (this.x * v.y) - (this.y * v.x);\n        };\n        this.rotate = function (omega) {\n            var cos = Math.cos (omega);\n            var sin = Math.sin (omega);\n            xp = cos * this.x - sin * this.y;\n            yp = sin * this.x + cos * this.y;\n            this.x = xp;\n            this.y = yp;\n            return this;\n        };\n        this.clone = function () {\n            return new Vector2D (this.x, this.y); \n        };\n\n        this.array = function () {\n            return [this.x, this.y];\n        };\n    };\n\n    // A shortcut for the vector constructor\n    function vect (x, y) {\n        return new Vector2D (x, y);\n    }\n\n    // Shorthand operations for vectors for operations that make new vectors\n\n    vect.scale = function (v, s) {\n        return v.clone ().scale (s);\n    };\n\n    vect.add = function (v1, v2) {\n        return v1.clone ().add (v2);\n    };\n\n    vect.sub = function (v1, v2) {\n        return v1.clone ().sub (v2);\n    };\n\n    vect.dist = function (v1, v2) {\n        return v1.clone ().sub (v2).length ();\n    };\n\n    vect.dir = function (v1, v2) {\n        return v1.clone ().sub (v2).normalize ();\n    };\n\n    vect.dot = function (v1, v2) {\n        return (v1.x * v2.x) + (v1.y * v2.y);\n    };\n\n    vect.cross = function (v1, v2) {\n        return (v1.x * v2.y) - (v1.y * v2.x);\n    };\n\n    vect.left = function (a, b, c, tol) {\n        if (!tol)\n            tol = 0;\n        var v1 = vect.sub (b, a);\n        var v2 = vect.sub (c, a);\n        return (vect.cross (v1, v2) >= -tol);\n    };\n\n    vect.intersects = function (a, b, c, d, tol) {\n        if (!tol)\n            tol = 0;\n        return (vect.left (a, b, c, tol) != vect.left (a, b, d, tol) &&\n                vect.left (c, d, b, tol) != vect.left (c, d, a, tol));\n    };\n\n    vect.intersect2dt = function (a, b, c, d) {\n        var denom = a.x * (d.y - c.y) +\n            b.x * (c.y - d.y) +\n            d.x * (b.y - a.y) +\n            c.x * (a.y - b.y);\n\n        if (denom === 0)\n            return Infinity;\n        \n        var num_s = a.x * (d.y - c.y) +\n            c.x * (a.y - d.y) +\n            d.x * (c.y - a.y);\n        var s = num_s / denom;\n\n        var num_t = -(a.x * (c.y - b.y) +\n                      b.x * (a.y - c.y) +\n                      c.x * (b.y - a.y));\n        var t = num_t / denom;\n        \n        return t;\n    };\n\n    vect.intersect2dpos = function (a, b, c, d) {\n        var denom = a.x * (d.y - c.y) +\n            b.x * (c.y - d.y) +\n            d.x * (b.y - a.y) +\n            c.x * (a.y - b.y);\n\n        if (denom === 0)\n            return Infinity;\n        \n        var num_s = a.x * (d.y - c.y) +\n            c.x * (a.y - d.y) +\n            d.x * (c.y - a.y);\n        var s = num_s / denom;\n\n        /*var num_t = -(a.x * (c.y - b.y) +\n                      b.x * (a.y - c.y) +\n                      c.x * (b.y - a.y));\n        var t = num_t / denom;*/\n        \n        var dir = vect.sub (b, a);\n        dir.scale (s);\n        return vect.add (a, dir);\n    };\n\n    vect.rotate = function (v, omega) {\n        var cos = Math.cos (omega);\n        var sin = Math.sin (omega);\n        xp = cos * v.x - sin * v.y;\n        yp = sin * v.x + cos * v.y;\n        var c = new vect (xp, yp);\n        return c;\n    };\n\n    vect.normalize = function (v) {\n        return v.clone ().normalize ();\n    };\n\n    // Export to geo.util module\n    geo.util.RangeTree = RangeTree;\n    geo.util.Box = Box;\n    geo.util.vect = vect;\n}());\n/* jshint ignore: end */\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class object\n *\n * @class\n * @extends vgl.object\n * @returns {geo.object}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.object = function () {\n  \"use strict\";\n  if (!(this instanceof geo.object)) {\n    return new geo.object();\n  }\n\n  var m_this = this,\n      m_eventHandlers = {},\n      m_idleHandlers = [],\n      m_deferredCount = 0;\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   *  Bind a handler that will be called once when all deferreds are resolved.\n   *\n   *  @param {function} handler A function taking no arguments\n   *  @returns {geo.object[]|geo.object} this\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.onIdle = function (handler) {\n    if (m_deferredCount) {\n      m_idleHandlers.push(handler);\n    } else {\n      handler();\n    }\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   *  Add a new deferred object preventing idle event handlers from being called.\n   *\n   *  @param {$.defer} defer A jquery defered object\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.addDeferred = function (defer) {\n    m_deferredCount += 1;\n    defer.done(function () {\n      m_deferredCount -= 1;\n      if (!m_deferredCount) {\n        m_idleHandlers.splice(0, m_idleHandlers.length)\n          .forEach(function (handler) {\n            handler();\n          });\n      }\n    });\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   *  Bind an event handler to this object\n   *\n   *  @param {String} event\n   *    An event from {geo.events}\n   *  @param {function} handler\n   *    A function that will be called when ``event`` is triggered.  The\n   *    function will be given an event object as a first parameter and\n   *    optionally a second argument provided by the triggerer.\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.geoOn = function (event, handler) {\n    if (Array.isArray(event)) {\n      event.forEach(function (e) {\n        m_this.geoOn(e, handler);\n      });\n      return m_this;\n    }\n    if (!m_eventHandlers.hasOwnProperty(event)) {\n      m_eventHandlers[event] = [];\n    }\n    m_eventHandlers[event].push(handler);\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   *  Trigger an event (or events) on this object and call all handlers\n   *\n   *  @param {String} event An event from {geo.events}\n   *  @param {Object} args An optional argument to pass to handlers\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.geoTrigger = function (event, args) {\n\n    // if we have an array of events, recall with single events\n    if (Array.isArray(event)) {\n      event.forEach(function (e) {\n        m_this.geoTrigger(e, args);\n      });\n      return m_this;\n    }\n\n    if (m_eventHandlers.hasOwnProperty(event)) {\n      m_eventHandlers[event].forEach(function (handler) {\n        handler.call(m_this, args);\n      });\n    }\n\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   *  Remove handlers from an event (or an array of events).  If no event is\n   *  provided all hanlders will be removed.\n   *\n   *  @param {string?} event An event from {geo.events}\n   *  @param {object?} arg A function or array of functions to remove from the events\n   *                      or if falsey remove all handlers from the events\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.geoOff = function (event, arg) {\n    if (event === undefined) {\n      m_eventHandlers = {};\n      m_idleHandlers = [];\n      m_deferredCount = 0;\n    }\n    if (Array.isArray(event)) {\n      event.forEach(function (e) {\n        m_this.geoOff(e, arg);\n      });\n      return m_this;\n    }\n    if (!arg) {\n      m_eventHandlers[event] = [];\n    } else if (Array.isArray(arg)) {\n      arg.forEach(function (handler) {\n        m_this.geoOff(event, handler);\n      });\n      return m_this;\n    }\n    // What do we do if the handler is not already bound?\n    //   ignoring for now...\n    if (m_eventHandlers.hasOwnProperty(event)) {\n      m_eventHandlers[event] = m_eventHandlers[event].filter(function (f) {\n          return f !== arg;\n        }\n      );\n    }\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Free all resources and destroy the object.\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    m_this.geoOff();\n  };\n\n  vgl.object.call(this);\n\n  return this;\n};\n\ninherit(geo.object, vgl.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class sceneObject, which extends the object's\n * event handling with a tree-based event propagation.\n *\n * @class\n * @extends geo.object\n * @returns {geo.sceneObject}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.sceneObject = function (arg) {\n  \"use strict\";\n  if (!(this instanceof geo.sceneObject)) {\n    return new geo.sceneObject();\n  }\n  geo.object.call(this, arg);\n\n  var m_this = this,\n      m_parent = null,\n      m_children = [],\n      s_exit = this._exit,\n      s_trigger = this.geoTrigger,\n      s_addDeferred = this.addDeferred,\n      s_onIdle = this.onIdle;\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   *  Override object.addDeferred to propagate up the scene tree.\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.addDeferred = function (defer) {\n    if (m_parent) {\n      m_parent.addDeferred(defer);\n    } else {\n      s_addDeferred(defer);\n    }\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   *  Override object.onIdle to propagate up the scene tree.\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.onIdle = function (handler) {\n    if (m_parent) {\n      m_parent.onIdle(handler);\n    } else {\n      s_onIdle(handler);\n    }\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   *  Get/set parent of the object\n   *  @param {?geo.sceneObject} parent\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.parent = function (arg) {\n    if (arg === undefined) {\n      return m_parent;\n    }\n    m_parent = arg;\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   *  Add a child (or an array of children) to the object\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.addChild = function (child) {\n    if (Array.isArray(child)) {\n      child.forEach(m_this.addChild);\n      return m_this;\n    }\n    child.parent(m_this);\n    m_children.push(child);\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   *  Remove a child (or array of children) from the object\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.removeChild = function (child) {\n    if (Array.isArray(child)) {\n      child.forEach(m_this.removeChild);\n      return m_this;\n    }\n    m_children = m_children.filter(function (c) { return c !== child; });\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   *  Get an array of child objects\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.children = function () {\n    return m_children.slice();\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   *  Force redraw of a scene object, to be implemented by subclasses.\n   *  Base class just calls draw of child objects.\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.draw = function (arg) {\n    m_this.children().forEach(function (child) {\n      child.draw(arg);\n    });\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   *  Trigger an event (or events) on this object and call all handlers.\n   *  @param {String} event the event to trigger\n   *  @param {Object} args arbitrary argument to pass to the handler\n   *  @param {Boolean} childrenOnly if true, only propagate down the tree\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.geoTrigger = function (event, args, childrenOnly) {\n\n    var geoArgs;\n\n    args = args || {};\n    geoArgs = args.geo || {};\n    args.geo = geoArgs;\n\n    // stop propagation if requested by the handler\n    if (geoArgs.stopPropagation) {\n      return m_this;\n    }\n\n    // If the event was not triggered by the parent, just propagate up the tree\n    if (!childrenOnly && m_parent && geoArgs._triggeredBy !== m_parent) {\n      geoArgs._triggeredBy = m_this;\n      m_parent.geoTrigger(event, args);\n      return m_this;\n    }\n\n    // call the object's own handlers\n    s_trigger.call(m_this, event, args);\n\n    // stop propagation if requested by the handler\n    if (geoArgs.stopPropagation) {\n      return m_this;\n    }\n\n    // trigger the event on the children\n    m_children.forEach(function (child) {\n      geoArgs._triggeredBy = m_this;\n      child.geoTrigger(event, args);\n    });\n\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Free all resources and destroy the object.\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    m_this.children = [];\n    delete m_this.parent;\n    s_exit();\n  };\n\n  return this;\n};\n\ninherit(geo.sceneObject, geo.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class timestamp\n *\n * @class\n * @extends vgl.timestamp\n * @returns {geo.timestamp}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.timestamp = function () {\n  'use strict';\n  if (!(this instanceof geo.timestamp)) {\n    return new geo.timestamp();\n  }\n  vgl.timestamp.call(this);\n};\n\ninherit(geo.timestamp, vgl.timestamp);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create an instance of quadratic surface generator\n * in Cartesian coordinates by the equation\n * <code>(x / a)^2 + (y / b)^2 + (z / c)^2 = 1</code>. Used\n * primarily to create planetary bodies\n *\n * @class\n * @param {Number} [x=0]  Radius in X direction\n * @param {Number} [y=0]  Radius in Y direction\n * @param {Number} [z=0]  Radius in Z direction\n *\n * @returns {geo.ellipsoid}\n */\n //////////////////////////////////////////////////////////////////////////////\ngeo.ellipsoid = function (x, y, z) {\n  'use strict';\n  if (!(this instanceof geo.ellipsoid)) {\n    return new geo.ellipsoid(x, y, z);\n  }\n\n  x = vgl.defaultValue(x, 0.0);\n  y = vgl.defaultValue(y, 0.0);\n  z = vgl.defaultValue(z, 0.0);\n\n  if (x < 0.0 || y < 0.0 || z < 0.0) {\n    return console.log('[error] Al radii components must be greater than zero');\n  }\n\n  var m_this = this,\n      m_radii = new vec3.fromValues(x, y, z),\n      m_radiiSquared = new vec3.fromValues(\n        x * x, y * y, z * z),\n      m_minimumRadius = Math.min(x, y, z),\n      m_maximumRadius = Math.max(x, y, z);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return radii of ellipsoid\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.radii = function () {\n    return m_radii;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return squared radii of the ellipsoid\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.radiiSquared = function () {\n    return m_radiiSquared;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return maximum radius of the ellipsoid\n   *\n   * @return {Number} The maximum radius of the ellipsoid\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.maximumRadius = function () {\n    return m_maximumRadius;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return minimum radius of the ellipsoid\n   *\n   * @return {Number} The maximum radius of the ellipsoid\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.minimumRadius = function () {\n    return m_minimumRadius;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Computes the normal of the plane tangent to the surface of\n   * the ellipsoid at the provided position\n   *\n   * @param {Number} lat The cartographic latitude for which\n   *  to to determine the geodetic normal\n   * @param {Number} lon The cartographic longitude for which\n   *  to to determine the geodetic normal\n   *\n   * @return {vec3}\n   *\n   * @exception {DeveloperError} cartographic is required.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeGeodeticSurfaceNormal = function (lat, lon) {\n    if (typeof lat === 'undefined' || typeof lon === 'undefined') {\n      throw '[error] Valid latitude and longitude is required';\n    }\n\n    var cosLatitude = Math.cos(lat),\n        result = vec3.create();\n\n    result[0] = cosLatitude * Math.cos(lon);\n    result[1] = cosLatitude * Math.sin(lon);\n    result[2] = Math.sin(lat);\n\n    vec3.normalize(result, result);\n    return result;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Converts the provided geographic latitude, longitude,\n   * and height to WGS84 coordinate system\n   *\n   * @param {Number} lat Latitude in radians\n   * @param {Number} lon Longitude in radians\n   * @param {Number} elev Elevation\n   * @return {vec3} Position in the WGS84 coordinate system\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.transformPoint = function (lat, lon, elev) {\n    lat = lat *  (Math.PI / 180.0);\n    lon = lon * (Math.PI / 180.0);\n\n    var n = m_this.computeGeodeticSurfaceNormal(lat, lon),\n        k = vec3.create(),\n        gamma  = Math.sqrt(vec3.dot(n, k)),\n        result = vec3.create();\n\n    vec3.multiply(k, m_radiiSquared, n);\n    vec3.scale(k, k, 1 / gamma);\n    vec3.scale(n, n, elev);\n    vec3.add(result, n, k);\n    return result;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Converts the provided geographic latitude, longitude,\n   * and height to WGS84 coordinate system\n   *\n   * @param {vgl.geometryData} geom\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.transformGeometry = function (geom) {\n    if (!geom) {\n      throw '[error] Failed to transform to cartesian. Invalid geometry.';\n    }\n\n    var sourceData = geom.sourceData(vgl.vertexAttributeKeys.Position),\n        sourceDataArray = sourceData.data(),\n        noOfComponents =  sourceData.attributeNumberOfComponents(\n          vgl.vertexAttributeKeys.Position),\n        stride = sourceData.attributeStride(\n          vgl.vertexAttributeKeys.Position),\n        offset = sourceData.attributeOffset(\n          vgl.vertexAttributeKeys.Position),\n        sizeOfDataType = sourceData.sizeOfAttributeDataType(\n          vgl.vertexAttributeKeys.Position),\n        index = null,\n        count = sourceDataArray.length * (1.0 / noOfComponents),\n        gamma = null,\n        n = null,\n        j = 0,\n        k = vec3.create(),\n        result = vec3.create();\n\n    stride /= sizeOfDataType;\n    offset /= sizeOfDataType;\n\n    if (noOfComponents !== 3) {\n      throw ('[error] Requires positions with three components');\n    }\n\n    for (j = 0; j < count; j += 1) {\n      index = j * stride + offset;\n\n      sourceDataArray[index] = sourceDataArray[index] * (Math.PI / 180.0);\n      sourceDataArray[index + 1] = sourceDataArray[index + 1] * (Math.PI / 180.0);\n\n      n = m_this.computeGeodeticSurfaceNormal(sourceDataArray[index + 1],\n                                            sourceDataArray[index]);\n      vec3.multiply(k, m_radiiSquared, n);\n      gamma = Math.sqrt(vec3.dot(n, k));\n      vec3.scale(k, k, 1 / gamma);\n      vec3.scale(n, n, sourceDataArray[index + 2]);\n      vec3.add(result, n, k);\n\n      sourceDataArray[index] = result[0];\n      sourceDataArray[index + 1] = result[1];\n      sourceDataArray[index + 2] = result[2];\n    }\n  };\n\n  return m_this;\n};\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * An Ellipsoid instance initialized to the WGS84 standard.\n * @memberof ellipsoid\n *\n */\n////////////////////////////////////////////////////////////////////////////\ngeo.ellipsoid.WGS84 = vgl.freezeObject(\n  geo.ellipsoid(6378137.0, 6378137.0, 6356752.3142451793));\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * An Ellipsoid instance initialized to radii of (1.0, 1.0, 1.0).\n * @memberof ellipsoid\n */\n////////////////////////////////////////////////////////////////////////////\ngeo.ellipsoid.UNIT_SPHERE = vgl.freezeObject(\n  geo.ellipsoid(1.0, 1.0, 1.0));\n","/** @namespace */\ngeo.mercator = {\n  r_major: 6378137.0  //Equatorial Radius, WGS84\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Returns the polar radius based on the projection.\n *\n * @param {Boolean} sperical\n * @returns {Number}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.r_minor = function (spherical) {\n  'use strict';\n\n  var r_minor;\n\n  spherical = spherical !== undefined ? spherical : false;\n\n  if (spherical) {\n    r_minor = 6378137.0;\n  } else {\n    r_minor = 6356752.314245179;\n  }\n\n  return r_minor;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * 1/f=(a-b)/a , a=r_major, b=r_minor\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.f = function (spherical) {\n  'use strict';\n\n  return (geo.mercator.r_major - geo.mercator.r_minor(spherical)) / geo.mercator.r_major;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convert longitude (Degree) to Tile X\n *\n *  @param {float} lon\n *  @param {integer} z\n *  @returns {integer}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.long2tilex = function (lon, z) {\n  'use strict';\n  var rad = (lon + 180.0) / 360.0,\n      f = Math.floor(rad * Math.pow(2.0, z));\n  return f;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convert latitude (Degree) to Tile Y\n *\n *  @param {float} lat\n *  @param {integer} z\n *  @returns {integer}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.lat2tiley = function (lat, z) {\n  'use strict';\n  var rad = lat * Math.PI / 180.0;\n  return Math.floor((1.0 - rad / Math.PI) / 2.0 * Math.pow(2.0, z));\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convert Longitute (Degree) to Tile X and fraction.\n *\n *  @param {float} lon\n *  @param {integer} z\n *  @returns {number[]}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.long2tilex2 = function (lon, z) {\n  'use strict';\n  var rad = (lon + 180.0) / 360.0,\n      f = rad * Math.pow(2.0, z),\n      ret = Math.floor(f),\n      frac = f - ret;\n  return [ret, frac];\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convert Latitude (Degree) to Tile Y and fraction\n *\n *  @param {float} lat\n *  @param {integer} z\n *  @returns {number[]}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.lat2tiley2 = function (lat, z) {\n  'use strict';\n  var rad = lat * Math.PI / 180.0,\n      f = (1.0 - Math.log(Math.tan(rad) + 1.0 / Math.cos(rad)) /\n           Math.PI) / 2.0 * Math.pow(2.0, z),\n      ret = Math.floor(f),\n      frac = f - ret;\n  return [ret, frac];\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convert Tile X to Longitute (Degree)\n *\n *  @param {integer} x\n *  @param {integer} z\n *  @returns {float}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.tilex2long = function (x, z) {\n  'use strict';\n  return x / Math.pow(2.0, z) * 360.0 - 180.0;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convert Tile Y to Latitute (Degree)\n *\n *  @param {integer} y\n *  @param {integer} z\n *  @returns {float}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.tiley2lat = function (y, z) {\n  'use strict';\n  var n = Math.PI - 2.0 * Math.PI * y / Math.pow(2.0, z);\n  return 180.0 / Math.PI * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convert spherical mercator Y to latitude\n *\n *  @param {float} a\n *  @returns {float}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.y2lat = function (a) {\n  'use strict';\n  return 180 / Math.PI * (2 * Math.atan(Math.exp(a * Math.PI / 180)) - Math.PI / 2);\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convert latitude into Y position in spherical mercator\n *\n *  @param {float} a\n *  @returns {float}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.lat2y = function (a) {\n  'use strict';\n  return 180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + a * (Math.PI / 180) / 2));\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n *\n * @param {float} d\n * @returns {number}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.deg2rad = function (d) {\n  'use strict';\n  var r = d * (Math.PI / 180.0);\n  return r;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convert radian to degree\n *\n * @param {float} r\n * @returns {number}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.rad2deg = function (r) {\n  'use strict';\n  var d = r / (Math.PI / 180.0);\n  return d;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convert latlon to mercator\n *\n * @param {float} lon\n * @param {float} lat\n * @returns {object}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.ll2m = function (lon, lat, spherical) {\n  'use strict';\n\n  if (lat > 89.5) {\n    lat = 89.5;\n  }\n\n  if (lat < -89.5) {\n    lat = -89.5;\n  }\n\n  var x = this.r_major * this.deg2rad(lon),\n      temp = this.r_minor(spherical) / this.r_major,\n      es = 1.0 - (temp * temp),\n      eccent = Math.sqrt(es),\n      phi = this.deg2rad(lat),\n      sinphi = Math.sin(phi),\n      con = eccent * sinphi,\n      com = 0.5 * eccent,\n      con2 = Math.pow((1.0 - con) / (1.0 + con), com),\n      ts = Math.tan(0.5 * (Math.PI * 0.5 - phi)) / con2,\n      y = -this.r_major * Math.log(ts),\n      ret = {'x': x, 'y': y};\n\n  return ret;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convert mercator to lat lon\n *\n * @param {float} x\n * @param {float} y\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.m2ll = function (x, y, spherical) {\n  'use strict';\n  var lon = this.rad2deg((x / this.r_major)),\n      temp = this.r_minor(spherical) / this.r_major,\n      e = Math.sqrt(1.0 - (temp * temp)),\n      lat = this.rad2deg(this.pjPhi2(Math.exp(-(y / this.r_major)), e)),\n      ret = {'lon': lon, 'lat': lat};\n\n  return ret;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * pjPhi2\n *\n * @param {float} ts\n * @param {float} e\n * @returns {number}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.pjPhi2 = function (ts, e) {\n  'use strict';\n  var N_ITER = 15,\n      HALFPI = Math.PI / 2,\n      TOL = 0.0000000001,\n      con, dphi,\n      i = N_ITER,\n      eccnth = 0.5 * e,\n      Phi = HALFPI - 2.0 * Math.atan(ts);\n\n  do {\n    con = e * Math.sin(Phi);\n    dphi = HALFPI - 2.0 * Math.atan(ts * Math.pow(\n            (1.0 - con) / (1.0 + con), eccnth)) - Phi;\n    Phi += dphi;\n    i -= 1;\n  } while (Math.abs(dphi) > TOL && i);\n  return Phi;\n};\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of latlng\n *\n * A latlng encapsulates geodesy coordinates defined by latitude and\n * longitude (depreciated)\n *\n * @class\n * @returns {geo.latlng}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.latlng = function (arg1, arg2, arg3) {\n  \"use strict\";\n  if (!(this instanceof geo.latlng)) {\n    return new geo.latlng(arg1, arg2, arg3);\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      m_lat = arg2 === undefined && arg3 === undefined ? arg1.lat() : arg1,\n      m_lng = arg2 === undefined && arg3 === undefined ? arg1.lng() : arg2,\n      m_elv = arg2 === undefined && arg3 === undefined ? arg1.elv() : arg3;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return latitude\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.lat = function (val) {\n    if (val === undefined) {\n      return m_lat;\n    } else {\n      m_lat = val;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return longitude\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.lng = function (val) {\n    if (val === undefined) {\n      return m_lng;\n    } else {\n      m_lng = val;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return elevation\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.elv = function (val) {\n    if (val === undefined) {\n      return m_elv;\n    } else {\n      m_elv = val;\n    }\n  };\n\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return x coordinate\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.x = function (val) {\n    if (val === undefined) {\n      return m_this.lng();\n    } else {\n      m_lng = val;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return y coordinate\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.y = function (val) {\n    if (val === undefined) {\n      return m_this.lat();\n    } else {\n      m_lat = val;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return z coordinate\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.z = function (val) {\n    if (val === undefined) {\n      return m_this.elv();\n    } else {\n      m_elv = val;\n    }\n  };\n\n\n  return this;\n};\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @class\n * @extends geo.sceneObject\n * @returns {geo.layer}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.layer = function (arg) {\n  \"use strict\";\n\n  if (!(this instanceof geo.layer)) {\n    return new geo.layer(arg);\n  }\n  arg = arg || {};\n  geo.sceneObject.call(this, arg);\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      s_exit = this._exit,\n      m_style = arg.style === undefined ? {\"opacity\": 0.5,\n                                           \"color\": [0.8, 0.8, 0.8],\n                                           \"visible\": true,\n                                           \"bin\": 100} : arg.style,\n      m_id = arg.id === undefined ? geo.layer.newLayerId() : arg.id,\n      m_name = \"\",\n      m_gcs = \"EPSG:4326\",\n      m_timeRange = null,\n      m_source = arg.source || null,\n      m_map = arg.map === undefined ? null : arg.map,\n      m_isReference = false,\n      m_x = 0,\n      m_y = 0,\n      m_width = 0,\n      m_height = 0,\n      m_node = null,\n      m_canvas = null,\n      m_renderer = null,\n      m_initialized = false,\n      m_rendererName = arg.renderer  === undefined ? \"vgl\" : arg.renderer,\n      m_dataTime = geo.timestamp(),\n      m_updateTime = geo.timestamp(),\n      m_drawTime = geo.timestamp(),\n      m_sticky = arg.sticky === undefined ? true : arg.sticky,\n      m_active = arg.active === undefined ? true : arg.active;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get whether or not the layer is sticky (navigates with the map).\n   *\n   * @returns {Boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.sticky = function () {\n    return m_sticky;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get whether or not the layer is active.  An active layer will receive\n   * native mouse when the layer is on top.  Non-active layers will never\n   * receive native mouse events.\n   *\n   * @returns {Boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.active = function () {\n    return m_active;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set root node of the layer\n   *\n   * @returns {div}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.node = function () {\n    return m_node;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set id of the layer\n   *\n   * @returns {String}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.id = function (val) {\n    if (val === undefined) {\n      return m_id;\n    }\n    m_id = geo.newLayerId();\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set name of the layer\n   *\n   * @returns {String}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.name = function (val) {\n    if (val === undefined) {\n      return m_name;\n    }\n    m_name = val;\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set opacity of the layer\n   *\n   * @returns {Number}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.opacity = function (val) {\n    if (val === undefined) {\n      return m_style.opacity;\n    }\n    m_style.opacity = val;\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set visibility of the layer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.visible = function (val) {\n    if (val === undefined) {\n      return m_style.visible;\n    }\n    m_style.visible = val;\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set bin of the layer\n   *\n   * @returns {Number}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.bin = function (val) {\n    if (val === undefined) {\n      return m_style.bin;\n    }\n    m_style.bin = val;\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set projection of the layer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.gcs = function (val) {\n    if (val === undefined) {\n      return m_gcs;\n    }\n    m_gcs = val;\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Transform layer to the reference layer gcs\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.transform = function (val) {\n    geo.transform.transformLayer(val, m_this, m_map.baseLayer());\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set time range of the layer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.timeRange = function (val) {\n    if (val === undefined) {\n      return m_timeRange;\n    }\n    m_timeRange = val;\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set source of the layer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.source = function (val) {\n    if (val === undefined) {\n      return m_source;\n    }\n    m_source = val;\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set map of the layer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.map = function (val) {\n    if (val === undefined) {\n      return m_map;\n    }\n    m_map = val;\n    m_map.node().append(m_node);\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get renderer for the layer if any\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.renderer = function () {\n    return m_renderer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get canvas of the layer\n   *\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.canvas = function () {\n    return m_canvas;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get viewport of the layer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.viewport = function () {\n    return [m_x, m_y, m_width, m_height];\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return last time data got changed\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.dataTime = function () {\n    return m_dataTime;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return the modified time for the last update that did something\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.updateTime = function () {\n    return m_updateTime;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return the modified time for the last draw call that did something\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.drawTime = function () {\n    return m_drawTime;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Run query and return results for it\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.query = function () {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set layer as the reference layer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.referenceLayer = function (val) {\n    if (val !== undefined) {\n      m_isReference = val;\n      m_this.modified();\n      return m_this;\n    }\n    return m_isReference;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set if the layer has been initialized\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.initialized = function (val) {\n    if (val !== undefined) {\n      m_initialized = val;\n      return m_this;\n    }\n    return m_initialized;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Transform a point or array of points in GCS space to\n   * local space of the layer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.toLocal = function (input) {\n    return input;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Transform a point or array of points in local space to\n   * latitude-longitude space\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.fromLocal = function (input) {\n    return input;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Init layer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function () {\n    if (m_initialized) {\n      return m_this;\n    }\n\n    // Create top level div for the layer\n    m_node = $(document.createElement(\"div\"));\n    m_node.attr(\"id\", m_name);\n    // TODO: need to position according to offsets from the map element\n    //       and maybe respond to events in case the map element moves\n    //       around the page.\n    m_node.css(\"position\", \"absolute\");\n\n    if (m_map) {\n      m_map.node().append(m_node);\n\n    }\n\n    // Share context if have valid one\n    if (m_canvas) {\n      m_renderer = geo.createRenderer(m_rendererName, m_this, m_canvas);\n    } else {\n      m_renderer = geo.createRenderer(m_rendererName, m_this);\n      m_canvas = m_renderer.canvas();\n    }\n\n    if (!m_this.active()) {\n      m_node.css(\"pointerEvents\", \"none\");\n    }\n\n    m_initialized = true;\n\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Clean up resouces\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    m_renderer._exit();\n    m_node.off();\n    m_node.remove();\n    m_node = null;\n    arg = {};\n    m_canvas = null;\n    m_renderer = null;\n    s_exit();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update layer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function () {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Respond to resize event\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._resize = function (x, y, w, h) {\n    m_x = x;\n    m_y = y;\n    m_width = w;\n    m_height = h;\n    m_node.width(w);\n    m_node.height(h);\n\n    m_this.modified();\n    m_this.geoTrigger(geo.event.resize,\n      {x: x, y: y, width: m_width, height: m_height});\n\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return the width of the layer in pixels\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.width = function () {\n    return m_width;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return the height of the layer in pixels\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.height = function () {\n    return m_height;\n  };\n\n  return this;\n};\n\n/**\n * Gets a new id number for a layer.\n * @protected\n * @instance\n * @returns {number}\n */\ngeo.layer.newLayerId = (function () {\n    \"use strict\";\n    var currentId = 1;\n    return function () {\n      var id = currentId;\n      currentId += 1;\n      return id;\n    };\n  }()\n);\n\n/**\n * General object specification for feature types.\n * @typedef geo.layer.spec\n * @type {object}\n * @property {string} [type=\"feature\"] For feature compatibility\n * with more than one kind of creatable layer\n * @property {object[]} [data=[]] The default data array to\n * apply to each feature if none exists\n * @property {string} [renderer=\"vgl\"] The renderer to use\n * @property {geo.feature.spec[]} [features=[]] Features\n * to add to the layer\n */\n\n/**\n * Create a layer from an object.  Any errors in the creation\n * of the layer will result in returning null.\n * @param {geo.map} map The map to add the layer to\n * @param {geo.layer.spec} spec The object specification\n * @returns {geo.layer|null}\n */\ngeo.layer.create = function (map, spec) {\n  \"use strict\";\n\n  spec = spec || {};\n\n  // add osmLayer later\n  spec.type = \"feature\";\n  if (spec.type !== \"feature\") {\n    console.warn(\"Unsupported layer type\");\n    return null;\n  }\n\n  spec.renderer = spec.renderer || \"vgl\";\n  if (spec.renderer !== \"d3\" && spec.renderer !== \"vgl\") {\n    console.warn(\"Invalid renderer\");\n    return null;\n  }\n\n  var layer = map.createLayer(spec.type, spec);\n  if (!layer) {\n    console.warn(\"Unable to create a layer\");\n    return null;\n  }\n\n  // probably move this down to featureLayer eventually\n  spec.features.forEach(function (f) {\n    f.data = f.data || spec.data;\n    f.feature = geo.feature.create(layer, f);\n  });\n\n  return layer;\n};\n\ninherit(geo.layer, geo.sceneObject);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Layer to draw points, lines, and polygons on the map The polydata layer\n * provide mechanisms to create and draw geometrical shapes such as points,\n * lines, and polygons.\n * @class\n * @extends geo.layer\n * @returns {geo.featureLayer}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.featureLayer = function (arg) {\n  \"use strict\";\n  if (!(this instanceof geo.featureLayer)) {\n    return new geo.featureLayer(arg);\n  }\n  geo.layer.call(this, arg);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      m_features = [],\n      s_init = this._init,\n      s_exit = this._exit,\n      s_update = this._update,\n      s_draw = this.draw;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create feature give a name\n   *\n   * @returns {geo.Feature} Will return a new feature\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.createFeature = function (featureName, arg) {\n\n    var newFeature = geo.createFeature(\n      featureName, m_this, m_this.renderer(), arg);\n\n    m_this.addChild(newFeature);\n    m_features.push(newFeature);\n    m_this.features(m_features);\n    m_this.modified();\n    return newFeature;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Delete feature\n   *\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.deleteFeature = function (feature) {\n    var i;\n\n    for (i = 0; i < m_features.length; i += 1) {\n      if (m_features[i] === feature) {\n        m_features[i]._exit();\n        m_this.dataTime().modified();\n        m_this.modified();\n        m_features.splice(i, 1);\n      }\n    }\n    m_this.removeChild(feature);\n\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set drawables\n   *\n   * @returns {Array}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.features = function (val) {\n    if (val === undefined) {\n      return m_features;\n    } else {\n      m_features = val.slice(0);\n      m_this.dataTime().modified();\n      m_this.modified();\n      return m_this;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   *\n   * Do not call parent _init method as its already been executed\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function () {\n    if (m_this.initialized()) {\n      return m_this;\n    }\n\n    /// Call super class init\n    s_init.call(m_this);\n\n    /// Bind events to handlers\n    m_this.geoOn(geo.event.resize, function (event) {\n      m_this.renderer()._resize(event.x, event.y, event.width, event.height);\n      m_this._update({});\n      m_this.renderer()._render();\n    });\n\n    m_this.geoOn(geo.event.pan, function (event) {\n      m_this._update({event: event});\n      m_this.renderer()._render();\n    });\n\n    m_this.geoOn(geo.event.zoom, function (event) {\n      m_this._update({event: event});\n      m_this.renderer()._render();\n    });\n\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update layer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function (request) {\n    var i;\n\n    if (!m_features.length) {\n      return m_this;\n    }\n\n    /// Call base class update\n    s_update.call(m_this, request);\n\n    if (!m_this.source() && m_features && m_features.length === 0) {\n      console.log(\"[info] No valid data source found.\");\n      return;\n    }\n\n    if (m_this.dataTime().getMTime() > m_this.updateTime().getMTime()) {\n      for (i = 0; i < m_features.length; i += 1) {\n        m_features[i].renderer(m_this.renderer());\n      }\n    }\n\n    for (i = 0; i < m_features.length; i += 1) {\n      m_features[i]._update();\n    }\n\n    m_this.updateTime().modified();\n\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Free all resources\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    m_this.clear();\n    s_exit();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Draw\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.draw = function () {\n    // Call sceneObject.draw, which calls draw on all child objects.\n    s_draw();\n\n    // Now call render on the renderer. In certain cases it may not do\n    // anything if the if the child objects are drawn on the screen already.\n    m_this.renderer()._render();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Clear all features in layer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.clear = function () {\n    var i;\n\n    if (!m_features.length) {\n      return m_this;\n    }\n\n    for (i = 0; i < m_features.length; i += 1) {\n      m_features[i]._exit();\n      m_this.removeChild(m_features[i]);\n    }\n\n    m_this.dataTime().modified();\n    m_this.modified();\n    m_features = [];\n\n    return m_this;\n  };\n\n  return m_this;\n};\n\ninherit(geo.featureLayer, geo.layer);\n\n// Now register it\ngeo.registerLayer(\"feature\", geo.featureLayer);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Common object containing all event types that are provided by the GeoJS\n * API.  Each property contained here is a valid target for event handling\n * via {@link geo.object#geoOn}.  The event object provided to handlers is\n * different for each event type.  Each handler will generally be called\n * with a the <code>this</code> context being the class that caused the event.<br>\n * <br>\n * The following properties are common to all event objects:\n *\n * @namespace\n * @property type {string} The event type that was triggered\n * @property geo {object} A universal event object for controlling propagation\n *\n * @example\n * map.geoOn(geo.event.layerAdd, function (event) {\n *   // event is an object with type: {@link geo.event.layerAdd}\n * });\n *\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.event = {};\n\n//////////////////////////////////////////////////////////////////////////////\n/*\n * Event types\n */\n//////////////////////////////////////////////////////////////////////////////\n\n// The following were not triggered nor used anywhere.  Removing until their\n// purpose is defined more clearly.\n//\n// geo.event.update = \"geo_update\";\n// geo.event.opacityUpdate = \"geo_opacityUpdate\";\n// geo.event.layerToggle = \"geo_layerToggle\";\n// geo.event.layerSelect = \"geo_layerSelect\";\n// geo.event.layerUnselect = \"geo_layerUnselect\";\n// geo.event.rotate = \"geo_rotate\";\n// geo.event.query = \"geo_query\";\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Triggered when a layer is added to the map.\n *\n * @property target {geo.map} The current map\n * @property layer {geo.layer} The new layer\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.event.layerAdd = \"geo_layerAdd\";\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Triggered when a layer is removed from the map.\n *\n * @property target {geo.map} The current map\n * @property layer {geo.layer} The old layer\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.event.layerRemove = \"geo_layerRemove\";\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Triggered when the map's zoom level is changed.  Note that zoom is never\n * triggered on the map itself.  Instead it is triggered individually on\n * layers, starting with the base layer.\n *\n * @property zoomLevel {Number} New zoom level\n * @property screenPosition {object} The screen position of mouse pointer\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.event.zoom = \"geo_zoom\";\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Triggered when the map is panned either by user interaction or map\n * transition.\n *\n * @property screenDelta {object} The number of pixels to pan the map by\n * @property center {object} The new map center\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.event.pan = \"geo_pan\";\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Triggered when the map's canvas is resized.\n *\n * @property width {Number} The new width in pixels\n * @property height {Number} The new height in pixels\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.event.resize = \"geo_resize\";\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Triggered on every call to {@link geo.map#draw} before the map is rendered.\n *\n * @property target {geo.map} The current map\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.event.draw = \"geo_draw\";\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Triggered on every call to {@link geo.map#draw} after the map is rendered.\n *\n * @property target {geo.map} The current map\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.event.drawEnd = \"geo_drawEnd\";\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Triggered on every \"mousemove\" over the map's DOM element.  The event\n * object extends {@link geo.mouseState}.\n * @mixes geo.mouseState\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.event.mousemove = \"geo_mousemove\";\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Triggered on every \"mousedown\" over the map's DOM element.  The event\n * object extends {@link geo.mouseState}.\n * @mixes geo.mouseState\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.event.mouseclick = \"geo_mouseclick\";\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Triggered on every \"mousemove\" during a brushing selection.\n * The event object extends {@link geo.brushSelection}.\n * @mixes geo.brushSelection\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.event.brush = \"geo_brush\";\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Triggered after a brush selection ends.\n * The event object extends {@link geo.brushSelection}.\n * @mixes geo.brushSelection\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.event.brushend = \"geo_brushend\";\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Triggered when a brush selection starts.\n * The event object extends {@link geo.brushSelection}.\n * @mixes geo.brushSelection\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.event.brushstart = \"geo_brushstart\";\n\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Triggered before a map navigation animation begins.  Set\n * <code>event.geo.cancelAnimation</code> to cancel the animation\n * of the navigation.  This will cause the map to navigate to the\n * target location immediately.  Set <code>event.geo.cancelNavigation</code>\n * to cancel the navigation completely.  The transition options can\n * be modified in place.\n *\n * @property {geo.geoPosition} center The target center\n * @property {Number} zoom The target zoom level\n * @property {Number} duration The duration of the transition in milliseconds\n * @property {function} ease The easing function\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.event.transitionstart = \"geo_transitionstart\";\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Triggered after a map navigation animation ends.\n *\n * @property {geo.geoPosition} center The target center\n * @property {Number} zoom The target zoom level\n * @property {Number} duration The duration of the transition in milliseconds\n * @property {function} ease The easing function\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.event.transitionend = \"geo_transitionend\";\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * @namespace\n */\n////////////////////////////////////////////////////////////////////////////\ngeo.event.clock = {\n  play: \"geo_clock_play\",\n  stop: \"geo_clock_stop\",\n  pause: \"geo_clock_pause\",\n  change: \"geo_clock_change\"\n};\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * This event object provides mouse/keyboard events that can be handled\n * by the features.  This provides a similar interface as core events,\n * but with different names so the events don't interfere.  Subclasses\n * can override this to provide custom events.\n *\n * These events will only be triggered on features which were instantiated\n * with the option \"selectionAPI\".\n * @namespace\n */\n////////////////////////////////////////////////////////////////////////////\ngeo.event.feature = {\n  mousemove:  \"geo_feature_mousemove\",\n  mouseover:  \"geo_feature_mouseover\",\n  mouseout:   \"geo_feature_mouseout\",\n  mouseon:    \"geo_feature_mouseon\",\n  mouseoff:   \"geo_feature_mouseoff\",\n  mouseclick: \"geo_feature_mouseclick\",\n  brushend:   \"geo_feature_brushend\",\n  brush:      \"geo_feature_brush\"\n};\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of mapInteractor\n *\n * @class\n * @extends geo.object\n * @returns {geo.mapInteractor}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mapInteractor = function (args) {\n  'use strict';\n  if (!(this instanceof geo.mapInteractor)) {\n    return new geo.mapInteractor(args);\n  }\n  geo.object.call(this);\n\n  var m_options = args || {},\n      m_this = this,\n      m_mouse,\n      m_keyboard,\n      m_state,\n      $node,\n      m_wheelQueue = { x: 0, y: 0 },\n      m_throttleTime = 10,\n      m_wait = false,\n      m_disableThrottle = true,\n      m_selectionLayer = null,\n      m_selectionPlane = null;\n\n  // Helper method to decide if the current button/modifiers match a set of\n  // conditions.\n  // button: 'left' | 'right' | 'middle'\n  // modifiers: [ 'alt' | 'meta' | 'ctrl' | 'shift' ]\n  function eventMatch(button, modifiers) {\n    /* jshint -W018 */\n    return (button === 'wheel' || m_mouse.buttons[button]) &&\n      (!!m_mouse.modifiers.alt)   === (!!modifiers.alt)   &&\n      (!!m_mouse.modifiers.meta)  === (!!modifiers.meta)  &&\n      (!!m_mouse.modifiers.shift) === (!!modifiers.shift) &&\n      (!!m_mouse.modifiers.ctrl)  === (!!modifiers.ctrl);\n    /* jshint +W018 */\n  }\n\n  // Helper method to calculate the speed from a velocity\n  function calcSpeed(v) {\n    var x = v.x, y = v.y;\n    return Math.sqrt(x * x + y * y);\n  }\n\n  // For throttling mouse events this is a function that\n  // returns true if no actions are in progress and starts\n  // a timer to block events for the next `m_throttleTime` ms.\n  // If it returns false, the caller should ignore the\n  // event.\n  function doRespond() {\n    if (m_disableThrottle) {\n      return true;\n    }\n    if (m_wait) {\n      return false;\n    }\n    m_wait = true;\n    window.setTimeout(function () {\n      m_wait = false;\n      m_wheelQueue = {\n        x: 0,\n        y: 0\n      };\n    }, m_throttleTime);\n    return true;\n  }\n\n  // copy the options object with defaults\n  m_options = $.extend(\n    true,\n    {\n      panMoveButton: 'left',\n      panMoveModifiers: {},\n      zoomMoveButton: 'right',\n      zoomMoveModifiers: {},\n      panWheelEnabled: false,\n      panWheelModifiers: {},\n      zoomWheelEnabled: true,\n      zoomWheelModifiers: {},\n      wheelScaleX: 1,\n      wheelScaleY: 1,\n      zoomScale: 1,\n      selectionButton: 'left',\n      selectionModifiers: {'shift': true},\n      momentum: {\n        enabled: true,\n        maxSpeed: 2.5,\n        minSpeed: 0.01,\n        drag: 0.01\n      },\n      spring: {\n        enabled: false,\n        springConstant: 0.00005\n      }\n    },\n    m_options\n  );\n\n  // options supported:\n  // {\n  //   // button that must be pressed to initiate a pan on mousedown\n  //   panMoveButton: 'right' | 'left' | 'middle'\n  //\n  //   // modifier keys that must be pressed to initiate a pan on mousemove\n  //   panMoveModifiers: { 'ctrl' | 'alt' | 'meta' | 'shift' }\n  //\n  //   // button that must be pressed to initiate a zoom on mousedown\n  //   zoomMoveButton: 'right' | 'left' | 'middle'\n  //\n  //   // modifier keys that must be pressed to initiate a zoom on mousemove\n  //   zoomMoveModifiers: { 'ctrl' | 'alt' | 'meta' | 'shift' }\n  //\n  //   // enable or disable panning with the mouse wheel\n  //   panWheelEnabled: true | false\n  //\n  //   // modifier keys that must be pressed to trigger a pan on wheel\n  //   panWheelModifiers: {...}\n  //\n  //   // enable or disable zooming with the mouse wheel\n  //   zoomWheelEnabled: true | false\n  //\n  //   // modifier keys that must be pressed to trigger a zoom on wheel\n  //   zoomWheelModifiers: {...}\n  //\n  //   // wheel scale factor to change the magnitude of wheel interactions\n  //   wheelScaleX: 1\n  //   wheelScaleY: 1\n  //\n  //   // zoom scale factor to change the magnitude of zoom move interactions\n  //   zoomScale: 1\n  //\n  //   // button that must be pressed to enable drag selection\n  //    selectionButton: 'right' | 'left' | 'middle'\n  //\n  //   // keyboard modifiers that must be pressed to initiate a selection\n  //   selectionModifiers: {...}\n  //\n  //   // enable momentum when panning\n  //   momentum: {\n  //     enabled: true | false,\n  //     drag: number, // drag coefficient\n  //     maxSpeed: number, // don't allow animation to pan faster than this\n  //     minSpeed: number  // stop animations if the speed is less than this\n  //   }\n  //\n  //   // enable spring clamping to screen edges to enforce clamping\n  //   spring: {\n  //     enabled: true | false,\n  //     springConstant: number,\n  //   }\n  // }\n\n  // A bunch of type definitions for api documentation:\n  /**\n   * General representation of rectangular bounds in world coordinates\n   * @typedef geo.geoBounds\n   * @type {object}\n   * @property {geo.geoPosition} upperLeft Upper left corner\n   * @property {geo.geoPosition} upperRight Upper right corner\n   * @property {geo.geoPosition} lowerLeft Lower left corner\n   * @property {geo.geoPosition} lowerRight Lower right corner\n   */\n\n  /**\n   * General representation of rectangular bounds in pixel coordinates\n   * @typedef geo.screenBounds\n   * @type {object}\n   * @property {geo.screenPosition} upperLeft Upper left corner\n   * @property {geo.screenPosition} upperRight Upper right corner\n   * @property {geo.screenPosition} lowerLeft Lower left corner\n   * @property {geo.screenPosition} lowerRight Lower right corner\n   */\n\n  /**\n   * General representation of a point on the screen.\n   * @typedef geo.screenPosition\n   * @type {object}\n   * @property {Number} x Horizontal coordinate in pixels\n   * @property {Number} y Vertical coordinate in pixels\n   */\n\n  /**\n   * General represention of a point on the earth.\n   * @typedef geo.geoPosition\n   * @type {object}\n   * @property {Number} x Horizontal coordinate in degrees longitude\n   * @property {Number} y Vertical coordinate in degrees latitude\n   */\n\n  /**\n   * The status of all mouse buttons.\n   * @typedef geo.mouseButtons\n   * @type {object}\n   * @property {true|false} left The left mouse button\n   * @property {true|false} right The right mouse button\n   * @property {true|false} middle The middle mouse button\n   */\n\n  /**\n   * The status of all modifier keys these are copied from the\n   * standard DOM events.\n   * @typedef geo.modifierKeys\n   * @type {object}\n   * @property {true|false} alt <code>Event.alt</code>\n   * @property {true|false} ctrl <code>Event.ctrl</code>\n   * @property {true|false} shift <code>Event.shift</code>\n   * @property {true|false} meta <code>Event.meta</code>\n   */\n\n  /**\n   * Provides information about the state of the mouse\n   * @typedef geo.mouseState\n   * @type {object}\n   * @property {geo.screenPosition} page Mouse location in pixel space\n   * @property {geo.geoPosition} map Mouse location in world space\n   * @property {geo.mouseButtons} buttons The current state of the mouse buttons\n   * @property {geo.modifierKeys} modifiers The current state of all modifier keys\n   * @property {Date} time The timestamp the event took place\n   * @property {Number} deltaTime The time in milliseconds since the last mouse event\n   * @property {geo.screenPosition} velocity The velocity of the mouse pointer\n   * in pixels per second\n   */\n\n  /**\n   * @typedef geo.brushSelection\n   * @type {object}\n   * @property {geo.screenBounds} display The selection bounds in pixel space\n   * @property {geo.geoBounds} gcs The selection bounds in world space\n   * @property {geo.mouseState} mouse The current mouse state\n   * @property {geo.mouseState} origin The mouse state at the start of the\n   * brush action\n   */\n\n\n  // default mouse object\n  m_mouse = {\n    page: { // mouse position relative to the page\n      x: 0,\n      y: 0\n    },\n    map: { // mouse position relative to the map\n      x: 0,\n      y: 0\n    },\n    // mouse button status\n    buttons: {\n      left: false,\n      right: false,\n      middle: false\n    },\n    // keyboard modifier status\n    modifiers: {\n      alt: false,\n      ctrl: false,\n      shift: false,\n      meta: false\n    },\n    // time the event was captured\n    time: new Date(),\n    // time elapsed since the last mouse event\n    deltaTime: 1,\n    // pixels/ms\n    velocity: {\n      x: 0,\n      y: 0\n    }\n  };\n\n  // default keyboard object\n  // (keyboard events not implemented yet)\n  m_keyboard = {\n  };\n\n  // The interactor state determines what actions are taken in response to\n  // core browser events.\n  //\n  // i.e.\n  // {\n  //    'action': 'pan',      // an ongoing pan event\n  //    'origin': {...},      // mouse object at the start of the action\n  //    'delta': {x: *, y: *} // mouse movement since action start\n  //                          // not including the current event\n  //  }\n  //\n  //  {\n  //    'action': 'zoom',  // an ongoing zoom event\n  //    ...\n  //  }\n  //\n  //  {\n  //    'acton': 'select',\n  //    'origin': {...},\n  //    'delta': {x: *, y: *}\n  //  }\n  //\n  //  {\n  //    'action': 'momentum',\n  //    'origin': {...},\n  //    'handler': function () { }, // called in animation loop\n  //    'timer': animate loop timer\n  //  }\n  m_state = {};\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Connects events to a map.  If the map is not set, then this does nothing.\n   * @returns {geo.mapInteractor}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._connectEvents = function () {\n    if (!m_options.map) {\n      return m_this;\n    }\n\n    // prevent double binding to dom elements\n    m_this._disconnectEvents();\n\n    // store the connected element\n    $node = $(m_options.map.node());\n\n\n    // add event handlers\n    $node.on('mousemove.geojs', m_this._handleMouseMove);\n    $node.on('mousedown.geojs', m_this._handleMouseDown);\n    $node.on('mouseup.geojs', m_this._handleMouseUp);\n    $node.on('mousewheel.geojs', m_this._handleMouseWheel);\n    if (m_options.panMoveButton === 'right' ||\n        m_options.zoomMoveButton === 'right') {\n      $node.on('contextmenu.geojs', function () { return false; });\n    }\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Disonnects events to a map.  If the map is not set, then this does nothing.\n   * @returns {geo.mapInteractor}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._disconnectEvents = function () {\n    if ($node) {\n      $node.off('.geojs');\n      $node = null;\n    }\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Sets or gets map for this interactor, adds draw region layer if needed\n   *\n   * @param {geo.map} newMap optional\n   * @returns {geo.interactorStyle|geo.map}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.map = function (val) {\n    if (val !== undefined) {\n      m_options.map = val;\n      m_this._connectEvents();\n      return m_this;\n    }\n    return m_options.map;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Gets/sets the options object for the interactor.\n   *\n   * @param {Object} opts optional\n   * @returns {geo.interactorStyle|Object}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.options = function (opts) {\n    if (opts === undefined) {\n      return $.extend({}, m_options);\n    }\n    $.extend(m_options, opts);\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Stores the current mouse position from an event\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._getMousePosition = function (evt) {\n    var offset = $node.offset(), dt, t;\n\n    t = (new Date()).valueOf();\n    dt = t - m_mouse.time;\n    m_mouse.time = t;\n    m_mouse.deltaTime = dt;\n    m_mouse.velocity = {\n      x: (evt.pageX - m_mouse.page.x) / dt,\n      y: (evt.pageY - m_mouse.page.y) / dt\n    };\n    m_mouse.page = {\n      x: evt.pageX,\n      y: evt.pageY\n    };\n    m_mouse.map = {\n      x: evt.pageX - offset.left,\n      y: evt.pageY - offset.top\n    };\n    try {\n      m_mouse.geo = m_this.map().displayToGcs(m_mouse.map);\n    } catch (e) {\n      // catch georeferencing problems and move on\n      // needed for handling the map before the base layer\n      // is attached\n      m_mouse.geo = null;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Stores the current mouse button\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._getMouseButton = function (evt) {\n    if (evt.which === 1) {\n      m_mouse.buttons.left = evt.type !== 'mouseup';\n    } else if (evt.which === 3) {\n      m_mouse.buttons.right = evt.type !== 'mouseup';\n    } else if (evt.which === 2) {\n      m_mouse.buttons.middle = evt.type !== 'mouseup';\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Stores the current keyboard modifiers\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._getMouseModifiers = function (evt) {\n    m_mouse.modifiers.alt = evt.altKey;\n    m_mouse.modifiers.ctrl = evt.ctrlKey;\n    m_mouse.modifiers.meta = evt.metaKey;\n    m_mouse.modifiers.shift = evt.shiftKey;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute a selection information object.\n   * @private\n   * @returns {Object}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._getSelection = function () {\n    var origin = m_state.origin,\n        mouse = m_this.mouse(),\n        map = m_this.map(),\n        display = {}, gcs = {};\n\n    // TODO: clamp to map bounds\n    // Get the display coordinates\n    display.upperLeft = {\n      x: Math.min(origin.map.x, mouse.map.x),\n      y: Math.min(origin.map.y, mouse.map.y)\n    };\n\n    display.lowerRight = {\n      x: Math.max(origin.map.x, mouse.map.x),\n      y: Math.max(origin.map.y, mouse.map.y)\n    };\n\n    display.upperRight = {\n      x: display.lowerRight.x,\n      y: display.upperLeft.y\n    };\n\n    display.lowerLeft = {\n      x: display.upperLeft.x,\n      y: display.lowerRight.y\n    };\n\n    // Get the gcs coordinates\n    gcs.upperLeft = map.displayToGcs(display.upperLeft);\n    gcs.lowerRight = map.displayToGcs(display.lowerRight);\n    gcs.upperRight = map.displayToGcs(display.upperRight);\n    gcs.lowerLeft = map.displayToGcs(display.lowerLeft);\n\n    m_selectionPlane.origin([\n      display.lowerLeft.x,\n      display.lowerLeft.y,\n      0\n    ]);\n    m_selectionPlane.upperLeft([\n      display.upperLeft.x,\n      display.upperLeft.y,\n      0\n    ]);\n    m_selectionPlane.lowerRight([\n      display.lowerRight.x,\n      display.lowerRight.y,\n      0\n    ]);\n    m_selectionPlane.draw();\n\n    return {\n      display: display,\n      gcs: gcs,\n      mouse: mouse,\n      origin: $.extend({}, m_state.origin)\n    };\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Immediately cancel an ongoing action.\n   *\n   * @param {string?} action The action type, if null cancel any action\n   * @returns {bool} If an action was canceled\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.cancel = function (action) {\n    var out;\n    if (!action) {\n      out = !!m_state.action;\n    } else {\n      out = m_state.action === action;\n    }\n    if (out) {\n      m_state = {};\n    }\n    return out;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle event when a mouse button is pressed\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._handleMouseDown = function (evt) {\n    var action = null;\n\n    if (m_state.action === 'momentum') {\n      // cancel momentum on click\n      m_state = {};\n    }\n\n    m_this._getMousePosition(evt);\n    m_this._getMouseButton(evt);\n    m_this._getMouseModifiers(evt);\n\n    if (eventMatch(m_options.panMoveButton, m_options.panMoveModifiers)) {\n      action = 'pan';\n    } else if (eventMatch(m_options.zoomMoveButton, m_options.zoomMoveModifiers)) {\n      action = 'zoom';\n    } else if (eventMatch(m_options.selectionButton, m_options.selectionModifiers)) {\n      action = 'select';\n    }\n\n    m_mouse.velocity = {\n      x: 0,\n      y: 0\n    };\n\n    if (action) {\n      // store the state object\n      m_state = {\n        action: action,\n        origin: $.extend(true, {}, m_mouse),\n        delta: {x: 0, y: 0}\n      };\n\n      if (action === 'select') {\n        // Make sure the old selection layer is gone.\n        if (m_selectionLayer) {\n          m_selectionLayer.clear();\n          m_this.map().deleteLayer(m_selectionLayer);\n          m_selectionLayer = null;\n        }\n        // Create a feature layer and plane feature to show the selection bounds\n        m_selectionLayer = m_this.map().createLayer('feature', {renderer: 'd3'});\n        m_selectionPlane = m_selectionLayer.createFeature('plane');\n        m_selectionPlane.style({\n          screenCoordinates: true,\n          fillOpacity: function () { return 0.25; }\n        });\n        m_this.map().geoTrigger(geo.event.brushstart, m_this._getSelection());\n      }\n\n      // bind temporary handlers to document\n      $(document).on('mousemove.geojs', m_this._handleMouseMoveDocument);\n      $(document).on('mouseup.geojs', m_this._handleMouseUpDocument);\n    }\n\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse move event\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._handleMouseMove = function (evt) {\n    if (m_state.action) {\n      // If currently performing a navigation action, the mouse\n      // coordinates will be captured by the document handler.\n      return;\n    }\n    m_this._getMousePosition(evt);\n    m_this._getMouseButton(evt);\n    m_this._getMouseModifiers(evt);\n    m_this.map().geoTrigger(geo.event.mousemove, m_this.mouse());\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse move event on the document (temporary bindings)\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._handleMouseMoveDocument = function (evt) {\n    var dx, dy, selectionObj;\n    m_this._getMousePosition(evt);\n    m_this._getMouseButton(evt);\n    m_this._getMouseModifiers(evt);\n\n    if (!m_state.action) {\n      // This shouldn't happen\n      console.log('WARNING: Invalid state in mapInteractor.');\n      return;\n    }\n\n    // when throttled, do nothing\n    if (!doRespond()) {\n      return;\n    }\n\n    // calculate the delta from the origin point to avoid\n    // accumulation of floating point errors\n    dx = m_mouse.map.x - m_state.origin.map.x - m_state.delta.x;\n    dy = m_mouse.map.y - m_state.origin.map.y - m_state.delta.y;\n    m_state.delta.x += dx;\n    m_state.delta.y += dy;\n\n    if (m_state.action === 'pan') {\n      m_this.map().pan({x: dx, y: dy});\n    } else if (m_state.action === 'zoom') {\n      m_this.map().zoom(\n        m_this.map().zoom() - dy * m_options.zoomScale / 120\n      );\n    } else if (m_state.action === 'select') {\n      // Get the bounds of the current selection\n      selectionObj = m_this._getSelection();\n      m_this.map().geoTrigger(geo.event.brush, selectionObj);\n    }\n\n    // Prevent default to stop text selection in particular\n    evt.preventDefault();\n  };\n\n  /**\n   * Use interactor options to modify the mouse velocity by momentum\n   * or spring equations depending on the current map state.\n   * @private\n   * @param {object} v Current velocity in pixels / ms\n   * @param {number} deltaT The time delta\n   * @returns {object} New velocity\n   */\n  function modifyVelocity(v, deltaT) {\n    deltaT = deltaT <= 0 ? 30 : deltaT;\n    var sf = springForce();\n    var speed = calcSpeed(v);\n    var vx = v.x / speed;\n    var vy = v.y / speed;\n\n    speed = speed * Math.exp(-m_options.momentum.drag * deltaT);\n\n    // |force| + |velocity| < c <- stopping condition\n    if (calcSpeed(sf) * deltaT + speed < m_options.momentum.minSpeed) {\n      return null;\n    }\n\n    if (speed > 0) {\n      vx = vx * speed;\n      vy = vy * speed;\n    } else {\n      vx = 0;\n      vy = 0;\n    }\n\n    return {\n      x: vx - sf.x * deltaT,\n      y: vy - sf.y * deltaT\n    };\n  }\n\n  /**\n   * Get the spring force for the current map bounds\n   * (This method might need to move elsewhere to deal\n   * with different projections)\n   * @private\n   * @returns {object} The spring force\n   */\n  function springForce() {\n    var xplus,  // force to the right\n        xminus, // force to the left\n        yplus,  // force to the top\n        yminus; // force to the bottom\n\n    if (!m_options.spring.enabled) {\n      return {x: 0, y: 0};\n    }\n    // get screen coordinates of corners\n    var ul = m_this.map().gcsToDisplay({\n      x: -180,\n      y: 82\n    });\n    var lr = m_this.map().gcsToDisplay({\n      x: 180,\n      y: -82\n    });\n\n    var c = m_options.spring.springConstant;\n    // Arg... map needs to expose the canvas size\n    var width = m_this.map().node().width();\n    var height = m_this.map().node().height();\n\n    xplus = c * Math.max(0, ul.x);\n    xminus = c * Math.max(0, width - lr.x);\n    yplus = c * Math.max(0, ul.y) / 2;\n    yminus = c * Math.max(0, height - lr.y) / 2;\n\n    return {\n      x: xplus - xminus,\n      y: yplus - yminus\n    };\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle event when a mouse button is unpressed on the document.\n   * Removes temporary bindings.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._handleMouseUpDocument = function (evt) {\n    var selectionObj, oldAction;\n\n    m_this._getMouseButton(evt);\n    m_this._getMouseModifiers(evt);\n\n    // unbind temporary handlers on document\n    $(document).off('.geojs');\n\n    if (m_mouse.buttons.right) {\n      evt.preventDefault();\n    }\n\n    if (m_state.action === 'select') {\n      selectionObj = m_this._getSelection();\n\n      m_selectionLayer.clear();\n      m_this.map().deleteLayer(m_selectionLayer);\n      m_selectionLayer = null;\n      m_selectionPlane = null;\n\n      m_this.map().geoTrigger(geo.event.brushend, selectionObj);\n    }\n\n    // reset the interactor state\n    oldAction = m_state.action;\n    m_state = {};\n\n    // if momentum is enabled, start the action here\n    if (m_options.momentum.enabled && oldAction === 'pan') {\n      m_this.springBack(true);\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle event when a mouse button is unpressed\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._handleMouseUp = function (evt) {\n    m_this._getMouseButton(evt);\n    m_this._getMouseModifiers(evt);\n\n    // fire a click event here\n    m_this.map().geoTrigger(geo.event.mouseclick, m_this.mouse());\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse wheel event\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._handleMouseWheel = function (evt) {\n    var zoomFactor, direction;\n\n    // In case jquery-mousewheel isn't loaded for some reason\n    evt.deltaFactor = evt.deltaFactor || 1;\n\n    m_this._getMouseModifiers(evt);\n    evt.deltaX = evt.deltaX * m_options.wheelScaleX * evt.deltaFactor / 120;\n    evt.deltaY = evt.deltaY * m_options.wheelScaleY * evt.deltaFactor / 120;\n\n    evt.preventDefault();\n    if (!doRespond()) {\n      m_wheelQueue.x += evt.deltaX;\n      m_wheelQueue.y += evt.deltaY;\n      return;\n    }\n\n    evt.deltaX += m_wheelQueue.x;\n    evt.deltaY += m_wheelQueue.y;\n\n    m_wheelQueue = {\n      x: 0,\n      y: 0\n    };\n\n    if (m_options.panWheelEnabled &&\n        eventMatch('wheel', m_options.panWheelModifiers)) {\n\n      m_this.map().pan({\n        x: evt.deltaX,\n        y: evt.deltaY\n      });\n\n    } else if (m_options.zoomWheelEnabled &&\n               eventMatch('wheel', m_options.zoomWheelModifiers)) {\n\n      zoomFactor = evt.deltaY;\n      direction = m_mouse.map;\n\n      m_this.map().zoom(\n        m_this.map().zoom() + zoomFactor,\n        direction\n      );\n    }\n  };\n\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Start up a spring back action when the map bounds are out of range.\n   * Not to be user callable.\n   * @todo Move this and momentum handling to the map class\n   * @protected\n   *\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.springBack = function (initialVelocity) {\n    if (m_state.action === 'momentum') {\n      return;\n    }\n    if (!initialVelocity) {\n      m_mouse.velocity = {\n        x: 0,\n        y: 0\n      };\n    }\n    m_state.action = 'momentum';\n    m_state.origin = m_this.mouse();\n    m_state.start = new Date();\n    m_state.handler = function () {\n      var v, s, last, dt;\n\n      // Not sure the correct way to do this.  We need the delta t for the\n      // next time step...  Maybe use a better interpolator and the time\n      // parameter from requestAnimationFrame.\n      dt = Math.min(m_mouse.deltaTime, 30);\n      if (m_state.action !== 'momentum' ||\n          !m_this.map() ||\n          m_this.map().transition()) {\n        // cancel if a new action was performed\n        return;\n      }\n\n      last = m_state.start.valueOf();\n      m_state.start = new Date();\n\n      v = modifyVelocity(m_mouse.velocity, m_state.start - last);\n\n      // stop panning when the speed is below the threshold\n      if (!v) {\n        m_state = {};\n        return;\n      }\n\n      s = calcSpeed(v);\n      if (s > m_options.momentum.maxSpeed) {\n        s = m_options.momentum.maxSpeed / s;\n        v.x = v.x * s;\n        v.y = v.y * s;\n      }\n\n      if (!isFinite(v.x) || !isFinite(v.y)) {\n        v.x = 0;\n        v.y = 0;\n      }\n      m_mouse.velocity.x = v.x;\n      m_mouse.velocity.y = v.y;\n\n      m_this.map().pan({\n        x: m_mouse.velocity.x * dt,\n        y: m_mouse.velocity.y * dt\n      });\n\n      if (m_state.handler) {\n        window.requestAnimationFrame(m_state.handler);\n      }\n    };\n    if (m_state.handler) {\n      window.requestAnimationFrame(m_state.handler);\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle double click event\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._handleDoubleClick = function () {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Public method that unbinds all events\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.destroy = function () {\n    m_this._disconnectEvents();\n    m_this.map(null);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get current mouse information\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.mouse = function () {\n    return $.extend(true, {}, m_mouse);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get current keyboard information\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.keyboard = function () {\n    return $.extend(true, {}, m_keyboard);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get the current interactor state\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.state = function () {\n    return $.extend(true, {}, m_state);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Simulate a DOM mouse event on connected map.\n   *\n   * The options for creating the events are as follows, not all\n   * options are required for every event type. ::\n   *\n   *   options = {\n   *     page: {x, y} // position on the page\n   *     map: {x, y}  // position on the map (overrides page)\n   *     button: 'left' | 'right' | 'middle'\n   *     modifiers: [ 'alt' | 'ctrl' | 'meta' | 'shift' ]\n   *     wheelDelta: {x, y}\n   *   }\n   *\n   * @param {string} type Event type 'mousemove', 'mousedown', 'mouseup', ...\n   * @param {object} options\n   * @returns {mapInteractor}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.simulateEvent = function (type, options) {\n    var evt, page, offset, which;\n\n    if (!m_this.map()) {\n      return m_this;\n    }\n\n    page = options.page || {};\n\n    if (options.map) {\n      offset = $node.offset();\n      page.x = options.map.x + offset.left;\n      page.y = options.map.y + offset.top;\n    }\n\n    if (options.button === 'left') {\n      which = 1;\n    } else if (options.button === 'right') {\n      which = 3;\n    } else if (options.button === 'middle') {\n      which = 2;\n    }\n\n    options.modifiers = options.modifiers || [];\n    options.wheelDelta = options.wheelDelta || {};\n\n    evt = $.Event(\n      type,\n      {\n        pageX: page.x,\n        pageY: page.y,\n        which: which,\n        altKey: options.modifiers.indexOf('alt') >= 0,\n        ctrlKey: options.modifiers.indexOf('ctrl') >= 0,\n        metaKey: options.modifiers.indexOf('meta') >= 0,\n        shiftKey: options.modifiers.indexOf('shift') >= 0,\n        deltaX: options.wheelDelta.x,\n        deltaY: options.wheelDelta.y,\n        deltaFactor: 1\n      }\n    );\n    $node.trigger(evt);\n  };\n  this._connectEvents();\n  return this;\n};\n\ninherit(geo.mapInteractor, geo.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Stores the current time for a map, triggers time keeping events, and\n * handles the animation state and interaction.\n *\n * @class geo.clock\n * @extends geo.object\n * @returns {geo.clock}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.clock = function (opts) {\n  'use strict';\n\n  if (!(this instanceof geo.clock)) {\n    return new geo.clock(opts);\n  }\n  opts = opts || {};\n  geo.object.call(this, opts);\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      m_now = new Date(0),\n      m_start = null,\n      m_end = null,\n      m_step = null,\n      m_rate = null,\n      m_loop = Number.POSITIVE_INFINITY,\n      m_currentLoop = 0,\n      m_state = 'stop',\n      m_currentAnimation = null,\n      m_object = null;\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get or set the geo.object to trigger events on.\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.object = function (arg) {\n    if (arg === undefined) {\n      return m_object;\n    }\n    m_object = arg;\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Returns true if attached to a valid geo.object.\n   * @private\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this._attached = function () {\n    return (m_object instanceof geo.object);\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get or set the current time.\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.now = function (arg) {\n    var previous = m_now;\n    if (arg === undefined) {\n      return m_now;\n    }\n    m_now = arg;\n\n    if (m_now !== previous &&\n        m_this._attached()) {\n      m_this.object().geoTrigger(geo.event.clock.change, {\n        previous: previous,\n        current: m_now,\n        clock: m_this\n      });\n    }\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get or set the animation start time.\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.start = function (arg) {\n    if (arg === undefined) {\n      return m_start;\n    }\n    m_start = arg;\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get or set the animation end time.\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.end = function (arg) {\n    if (arg === undefined) {\n      return m_end;\n    }\n    m_end = arg;\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get or set the animation time step.\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.step = function (arg) {\n    if (arg === undefined) {\n      return m_step;\n    }\n    m_step = arg;\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get or set looping control of the clock.  This controls how many times the\n   * animation will repeat before stopping.  Default\n   * ``Number.POSITIVE_INFINITY``, the animation repeats forever.\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.loop = function (arg) {\n    if (arg === undefined) {\n      return m_loop;\n    }\n    m_loop = arg;\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get or set the animation state.  Valid values are:\n   *\n   *   * 'stop'\n   *   * 'play'\n   *   * 'pause'\n   *\n   * This will also trigger relevant events, but they may be fired\n   * asynchronously.\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.state = function (arg, step) {\n\n    if (arg === undefined) {\n      return m_state;\n    }\n    if (['stop', 'play', 'pause'].indexOf(arg) < 0) {\n      console.log('WARNING: Ignored invalid state: ' + arg);\n      return m_this;\n    }\n\n    if (arg === 'play' && m_state === 'stop') {\n      // reset animation parameters\n      m_currentLoop = 0;\n      m_this.now(m_this.start());\n    }\n\n    if (arg === 'play' && m_state !== 'play') {\n      // Start a new animation.\n      m_state = arg;\n      m_this._animate(step || 1);\n    }\n\n    m_state = arg;\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get or set the animation frame rate.  This is approximately the number\n   * of frames displayed per second.  A null value will use the browser's\n   * native requestAnimationFrame to draw new frames.\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.framerate = function (arg) {\n    if (arg === undefined) {\n      return m_rate;\n    }\n    m_rate = arg;\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Step to the next frame in the animation.  Pauses the animation if it is\n   * playing.\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.stepForward = function () {\n    m_this.state('pause');\n    m_this._setNextFrame(1);\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Step to the previous frame in the animation.  Pauses the animation if it is\n   * playing.\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.stepBackward = function () {\n    m_this.state('pause');\n    m_this._setNextFrame(-1);\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Step to the next frame in the animation.  Will set the state to stop\n   * if the animation has reached the end and there are no more loops.\n   * @private\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this._setNextFrame = function (step) {\n    var next = new Date(m_this.now().valueOf() + step * m_this.step());\n\n    if (next >= m_this.end() || next <= m_this.start()) {\n      if (m_this.loop() <= m_currentLoop) {\n        m_this.state('stop');\n        return;\n      }\n      m_currentLoop += 1;\n      if (step >= 0) {\n        m_this.now(m_this.start());\n      } else {\n        m_this.now(m_this.end());\n      }\n      return;\n    }\n    m_this.now(next);\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Start an animation.\n   * @param {integer} step The animation frame step (+1 for forward -1 for\n   *                       reverse, etc).\n   * @private\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this._animate = function (step) {\n    var myAnimation = {};\n    m_currentAnimation = myAnimation;\n\n    function frame() {\n      if (myAnimation !== m_currentAnimation) {\n        // A new animation has started, so kill this one.\n        return;\n      }\n      m_this._setNextFrame(step);\n      if (m_this.state() === 'play') {\n\n        // Queue the next frame\n        if (!m_this.framerate()) {\n          window.requestAnimationFrame(frame);\n        } else {\n          window.setTimeout(frame, 1000 / m_this.framerate());\n        }\n      } else if (m_this._attached()) {\n        m_this.object().geoTrigger(geo.event.clock[m_this.state()], {\n          current: m_this.now(),\n          clock: m_this\n        });\n      }\n    }\n\n    // trigger the play event\n    if (m_this._attached()) {\n      m_this.object().geoTrigger(geo.event.clock.play, {\n        current: m_this.now(),\n        clock: m_this\n      });\n    }\n\n    // Queue the first frame\n    if (!m_this.framerate()) {\n      window.requestAnimationFrame(frame);\n    } else {\n      window.setTimeout(frame, 1000 / m_this.framerate());\n    }\n  };\n};\ninherit(geo.clock, geo.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class fileReader\n *\n * @class\n * @extends geo.object\n * @returns {geo.fileReader}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.fileReader = function (arg) {\n  \"use strict\";\n  if (!(this instanceof geo.fileReader)) {\n    return new geo.fileReader(arg);\n  }\n  geo.object.call(this);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  arg = arg || {};\n\n  if (!(arg.layer instanceof geo.featureLayer)) {\n    throw \"fileReader must be given a feature layer\";\n  }\n\n  var m_layer = arg.layer;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get the feature layer attached to the reader\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.layer = function () {\n    return m_layer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Tells the caller if it can handle the given file by returning a boolean.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.canRead = function () {\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Reads the file object and calls the done function when finished.  As an\n   * argument to done, provides a boolean that reports if the read was a\n   * success.  Possibly, it can call done with an object containing details\n   * of the read operation.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.read = function (file, done) {\n    done(false);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return a FileReader with handlers attached.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function newFileReader(done, progress) {\n    var reader = new FileReader();\n    if (progress) {\n      reader.onprogress = progress;\n    }\n    reader.onloadend = function () {\n      if (!reader.result) {\n        done(reader.error);\n      }\n      done(reader.result);\n    };\n    return reader;\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Private method for reading a file object as a string.  Calls done with\n   * the string content when finished or an error object if unsuccessful.\n   * Optionally, the caller can provide a progress method that is called\n   * after reading each slice.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._getString = function (file, done, progress) {\n    var reader = newFileReader(done, progress);\n    reader.readAsText(file);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Like _getString, but returns an ArrayBuffer object.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._getArrayBuffer = function (file, done, progress) {\n    var reader = newFileReader(done, progress);\n    reader.readAsText(file);\n  };\n\n  return this;\n};\n\ninherit(geo.fileReader, geo.object);\n","/*global File*/\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class jsonReader\n *\n * @class\n * @extends geo.fileReader\n * @returns {geo.jsonReader}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.jsonReader = function (arg) {\n  'use strict';\n  if (!(this instanceof geo.jsonReader)) {\n    return new geo.jsonReader(arg);\n  }\n\n  var m_this = this, m_style = arg.style || {};\n  m_style = $.extend({\n      'strokeWidth': 2,\n      'strokeColor': {r: 0, g: 0, b: 0},\n      'strokeOpacity': 1,\n      'fillColor': {r: 1, g: 0, b: 0},\n      'fillOpacity': 1\n    }, m_style);\n\n  geo.fileReader.call(this, arg);\n\n  this.canRead = function (file) {\n    if (file instanceof File) {\n      return (file.type === 'application/json' || file.name.match(/\\.json$/));\n    } else if (typeof file === 'string') {\n      try {\n        JSON.parse(file);\n      } catch (e) {\n        return false;\n      }\n      return true;\n    }\n    try {\n      if (Array.isArray(m_this._featureArray(file))) {\n        return true;\n      }\n    } catch (e) {}\n    return false;\n  };\n\n  this._readObject = function (file, done, progress) {\n    var object;\n    function onDone(fileString) {\n      if (typeof fileString !== 'string') {\n        done(false);\n      }\n\n      // We have two possibilities here:\n      // 1) fileString is a JSON string or is\n      // a URL.\n      try {\n        object = JSON.parse(fileString);\n        done(object);\n      } catch (e) {\n        if (!object) {\n          $.ajax({\n            type: 'GET',\n            url: fileString,\n            dataType: 'text'\n          }).done(function (data) {\n            object = JSON.parse(data);\n            done(object);\n          }).fail(function () {\n            done(false);\n          });\n        }\n      }\n    }\n\n    if (file instanceof File) {\n      m_this._getString(file, onDone, progress);\n    } else if (typeof file === 'string') {\n      onDone(file);\n    } else {\n      done(file);\n    }\n  };\n\n  this._featureArray = function (spec) {\n    if (spec.type === 'FeatureCollection') {\n      return spec.features || [];\n    }\n    if (spec.type === 'GeometryCollection') {\n      throw 'GeometryCollection not yet implemented.';\n    }\n    if (Array.isArray(spec.coordinates)) {\n      return spec;\n    }\n    throw 'Unsupported collection type: ' + spec.type;\n  };\n\n  this._featureType = function (spec) {\n    var geometry = spec.geometry || {};\n    if (geometry.type === 'Point' || geometry.type === 'MultiPoint') {\n      return 'point';\n    }\n    if (geometry.type === 'LineString') {\n      return 'line';\n    }\n    if (geometry.type === 'Polygon') {\n      return 'polygon';\n    }\n    return null;\n  };\n\n  this._getCoordinates = function (spec) {\n    var geometry = spec.geometry || {},\n        coordinates = geometry.coordinates || [], elv;\n\n    if ((coordinates.length === 2 || coordinates.length === 3) &&\n        (isFinite(coordinates[0]) && isFinite(coordinates[1]))) {\n\n      // Do we have a elevation component\n      if (isFinite(coordinates[2])) {\n        elv = coordinates[2];\n      }\n\n      // special handling for single point coordinates\n      return [{x: coordinates[0], y: coordinates[1], z: elv}];\n    }\n\n    // need better handling here, but we can plot simple polygons\n    // by taking just the outer linearring\n    if (Array.isArray(coordinates[0][0])) {\n      coordinates = coordinates[0];\n    }\n\n    // return an array of latlng's for LineString, MultiPoint, etc...\n    return coordinates.map(function (c) {\n      return {\n        x: c[0],\n        y: c[1],\n        z: c[2]\n      };\n    });\n  };\n\n  this._getStyle = function (spec) {\n    return spec.properties;\n  };\n\n  this.read = function (file, done, progress) {\n\n    function _done(object) {\n      var features, allFeatures = [];\n\n      features = m_this._featureArray(object);\n\n      features.forEach(function (feature) {\n        var type = m_this._featureType(feature),\n            coordinates = m_this._getCoordinates(feature),\n            style = m_this._getStyle(feature);\n        if (type) {\n          if (type === 'line') {\n            style.fill = style.fill || false;\n            allFeatures.push(m_this._addFeature(\n              type,\n              [coordinates],\n              style,\n              feature.properties\n            ));\n          } else if (type === 'point') {\n            style.stroke = style.stroke || false;\n            allFeatures.push(m_this._addFeature(\n              type,\n              coordinates,\n              style,\n              feature.properties\n            ));\n          } else if (type === 'polygon') {\n            style.fill = style.fill === undefined ? true : style.fill;\n            style.fillOpacity = (\n              style.fillOpacity === undefined ? 0.25 : style.fillOpacity\n            );\n            // polygons not yet supported\n            allFeatures.push(m_this._addFeature(\n              'line',\n              [coordinates],\n              style,\n              feature.properties\n            ));\n          }\n        } else {\n          console.log('unsupported feature type: ' + feature.geometry.type);\n        }\n      });\n\n      if (done) {\n        done(allFeatures);\n      }\n    }\n\n    m_this._readObject(file, _done, progress);\n  };\n\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Build the data array for a feature given the coordinates and properties\n   * from the geojson.\n   *\n   * @private\n   * @param {Object[]} coordinates Coordinate data array\n   * @param {Object} properties Geojson properties object\n   * @param {Object} style Global style defaults\n   * @returns {Object[]}\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this._buildData = function (coordinates, properties, style) {\n    return coordinates.map(function (coord) {\n      return {\n        coordinates: coord,\n        properties: properties,\n        style: style\n      };\n    });\n  };\n\n  this._addFeature = function (type, coordinates, style, properties) {\n    var _style = $.extend({}, m_style, style);\n    var feature = m_this.layer().createFeature(type)\n      .data(m_this._buildData(coordinates, properties, style))\n      .style(_style);\n\n    if (type === 'line') {\n      feature.line(function (d) { return d.coordinates; });\n    } else {\n      feature.position(function (d) { return d.coordinates; });\n    }\n    return feature;\n  };\n\n};\n\ninherit(geo.jsonReader, geo.fileReader);\n\ngeo.registerFileReader('jsonReader', geo.jsonReader);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class map\n *\n * Creates a new map inside of the given HTML layer (Typically DIV)\n * @class\n * @extends geo.sceneObject\n * @returns {geo.map}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.map = function (arg) {\n  \"use strict\";\n  if (!(this instanceof geo.map)) {\n    return new geo.map(arg);\n  }\n  arg = arg || {};\n  geo.sceneObject.call(this, arg);\n  arg.layers = arg.layers === undefined ? [] : arg.layers;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Private member variables\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      s_exit = this._exit,\n      m_x = 0,\n      m_y = 0,\n      m_node = $(arg.node),\n      m_width = arg.width || m_node.width(),\n      m_height = arg.height || m_node.height(),\n      m_gcs = arg.gcs === undefined ? \"EPSG:4326\" : arg.gcs,\n      m_uigcs = arg.uigcs === undefined ? \"EPSG:4326\" : arg.uigcs,\n      m_center = { x: 0, y: 0 },\n      m_zoom = arg.zoom === undefined ? 1 : arg.zoom,\n      m_baseLayer = null,\n      m_fileReader = null,\n      m_interactor = null,\n      m_validZoomRange = { min: 0, max: 16 },\n      m_transition = null,\n      m_queuedTransition = null,\n      m_clock = null,\n      m_bounds = {};\n\n  arg.center = geo.util.normalizeCoordinates(arg.center);\n  arg.autoResize = arg.autoResize === undefined ? true : arg.autoResize;\n  arg.clampBounds = arg.clampBounds === undefined ? true : arg.clampBounds;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get map gcs\n   *\n   * @returns {string}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.gcs = function (arg) {\n    if (arg === undefined) {\n      return m_gcs;\n    }\n    m_gcs = arg;\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get map user interface GCS\n   *\n   * @returns {string}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.uigcs = function () {\n    return m_uigcs;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get root node of the map\n   *\n   * @returns {object}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.node = function () {\n    return m_node;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set zoom level of the map\n   *\n   * @returns {Number|geo.map}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.zoom = function (val, direction) {\n    var base, evt, recenter = false;\n    if (val === undefined) {\n      return m_zoom;\n    }\n\n    val = Math.min(m_validZoomRange.max, Math.max(val, m_validZoomRange.min));\n    if (val === m_zoom) {\n      return m_this;\n    }\n\n    base = m_this.baseLayer();\n\n    evt = {\n      geo: {},\n      zoomLevel: val,\n      screenPosition: direction,\n      eventType: geo.event.zoom\n    };\n    if (base) {\n      base.renderer().geoTrigger(geo.event.zoom, evt, true);\n    }\n\n    recenter = evt.center;\n    if (!evt.geo.preventDefault) {\n\n      m_zoom = val;\n      m_this._updateBounds();\n\n      m_this.children().forEach(function (child) {\n        child.geoTrigger(geo.event.zoom, evt, true);\n      });\n\n      m_this.modified();\n    }\n\n    if (evt.center) {\n      m_this.center(recenter);\n    } else {\n      m_this.pan({x: 0, y: 0});\n    }\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Pan the map by (x: dx, y: dy) pixels.\n   *\n   * @param {Object} delta\n   * @param {bool?} force Disable bounds clamping\n   * @returns {geo.map}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.pan = function (delta, force) {\n    var base = m_this.baseLayer(),\n        evt, pt, corner1, corner2;\n\n    if (arg.clampBounds && !force && m_width && m_height) {\n      pt = m_this.displayToGcs({\n        x: delta.x,\n        y: delta.y\n      });\n\n      corner1 = m_this.gcsToDisplay({\n        x: -180,\n        y: 82\n      });\n      corner2 = m_this.gcsToDisplay({\n        x: 180,\n        y: -82\n      });\n\n      if (corner1.x > 0 && corner2.x < m_width) {\n        // if the map is too small horizontally\n        delta.x = (-corner1.x + m_width - corner2.x) / 2;\n      } else {\n        delta.x = Math.max(Math.min(delta.x, -corner1.x), m_width - corner2.x);\n      }\n      if (corner1.y > 0 && corner2.y < m_height) {\n        // if the map is too small horizontally\n        delta.y = (-corner1.y + m_height - corner2.y) / 2;\n      } else {\n        delta.y = Math.max(Math.min(delta.y, -corner1.y), m_height - corner2.y);\n      }\n    }\n\n    evt = {\n      geo: {},\n      screenDelta: delta,\n      eventType: geo.event.pan\n    };\n    // first pan the base layer\n    if (base) {\n      base.renderer().geoTrigger(geo.event.pan, evt, true);\n    }\n\n    // If the base renderer says the pan is invalid, then cancel the action.\n    if (evt.geo.preventDefault) {\n      return;\n    }\n    m_center = m_this.displayToGcs({\n      x: m_width / 2,\n      y: m_height / 2\n    });\n    m_this._updateBounds();\n\n    m_this.children().forEach(function (child) {\n      child.geoTrigger(geo.event.pan, evt, true);\n    });\n\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set center of the map to the given geographic coordinates, or get the\n   * current center.  Uses bare objects {x: 0, y: 0}.\n   *\n   * @param {Object} coordinates\n   * @returns {Object|geo.map}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.center = function (coordinates, force) {\n    var newCenter, currentCenter;\n\n    if (coordinates === undefined) {\n      return m_center;\n    }\n\n    // get the screen coordinates of the new center\n    coordinates = geo.util.normalizeCoordinates(coordinates);\n    newCenter = m_this.gcsToDisplay(coordinates);\n    currentCenter = m_this.gcsToDisplay(m_center);\n\n    // call the pan method\n    m_this.pan({\n      x: currentCenter.x - newCenter.x,\n      y: currentCenter.y - newCenter.y\n    }, force);\n\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Add layer to the map\n   *\n   * @param {geo.layer} layer to be added to the map\n   * @return {geom.map}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.createLayer = function (layerName, arg) {\n    var newLayer = geo.createLayer(\n      layerName, m_this, arg);\n\n    if (newLayer !== null || newLayer !== undefined) {\n      newLayer._resize(m_x, m_y, m_width, m_height);\n    } else {\n      return null;\n    }\n\n    if (newLayer.referenceLayer() || m_this.children().length === 0) {\n      m_this.baseLayer(newLayer);\n    }\n    m_this.addChild(newLayer);\n    m_this.modified();\n\n    // TODO: need a better way to set the initial coordinates of a layer\n    if (!newLayer.referenceLayer()) {\n      m_this.center(m_this.center());\n    }\n\n    m_this.geoTrigger(geo.event.layerAdd, {\n      type: geo.event.layerAdd,\n      target: m_this,\n      layer: newLayer\n    });\n\n    return newLayer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Remove layer from the map\n   *\n   * @param {geo.layer} layer that should be removed from the map\n   * @return {geo.map}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.deleteLayer = function (layer) {\n\n    if (layer !== null && layer !== undefined) {\n      layer._exit();\n\n      m_this.removeChild(layer);\n\n      m_this.modified();\n\n      m_this.geoTrigger(geo.event.layerRemove, {\n        type: geo.event.layerRemove,\n        target: m_this,\n        layer: layer\n      });\n    }\n\n    /// Return deleted layer (similar to createLayer) as in the future\n    /// we may provide extension of this method to support deletion of\n    /// layer using id or some sort.\n    return layer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Toggle visibility of a layer\n   *\n   *  @param {geo.layer} layer\n   *  @returns {Boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.toggle = function (layer) {\n    if (layer !== null && layer !== undefined) {\n      layer.visible(!layer.visible());\n      m_this.modified();\n\n      m_this.geoTrigger(geo.event.layerToggle, {\n        type: geo.event.layerToggle,\n        target: m_this,\n        layer: layer\n      });\n    }\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Resize map\n   *\n   * @param {Number} x x-offset in display space\n   * @param {Number} y y-offset in display space\n   * @param {Number} w width in display space\n   * @param {Number} h height in display space\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.resize = function (x, y, w, h) {\n    var i, layers = m_this.children();\n\n    m_x = x;\n    m_y  = y;\n    m_width = w;\n    m_height = h;\n\n    for (i = 0; i < layers.length; i += 1) {\n      layers[i]._resize(x, y, w, h);\n    }\n\n    m_this.geoTrigger(geo.event.resize, {\n      type: geo.event.resize,\n      target: m_this,\n      x: m_x,\n      y: m_y,\n      width: w,\n      height: h\n    });\n\n    m_this._updateBounds();\n    m_this.pan({x: 0, y: 0});\n    m_this.modified();\n\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Convert from gcs coordinates to display coordinates\n   *\n   * @param {*} input {[geo.latlng], [{x:_x, y: _y}], [x1,y1, x2, y2]}\n   * @return {object}\n   *\n   * @note Currently only lat-lon inputs are supported\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.gcsToDisplay = function (input) {\n    var world, output;\n\n    /// Now handle different data types\n    if ((input instanceof Array &&\n         input.length > 0) || input instanceof Object) {\n      world = m_baseLayer.toLocal(input);\n      output = m_baseLayer.renderer().worldToDisplay(world);\n    } else {\n      /// Everything else\n      throw \"Conversion method latLonToDisplay does not handle \" + input;\n    }\n\n    return output;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Convert from display to latitude longitude coordinates\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.displayToGcs = function (input) {\n    var output;\n\n    /// Now handle different data types\n    if ((input instanceof Array && input.length > 0) ||\n         input instanceof Object) {\n      output = m_baseLayer.renderer().displayToWorld(input);\n      output = m_baseLayer.fromLocal(output);\n    } else {\n      throw \"Conversion method displayToGcs does not handle \" + input;\n    }\n    return output;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Queries each layer for information at this location.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.query = function () {\n    // TODO Implement this\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Sets or gets base layer for this map\n   *\n   * @param {geo.layer} baseLayer optional\n   * @returns {geo.map|geo.layer}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.baseLayer = function (baseLayer) {\n    var save;\n    if (baseLayer !== undefined) {\n\n      // The GCS of the layer must match the map\n      if (m_gcs !== baseLayer.gcs()) {\n        m_this.gcs(baseLayer.gcs());\n      }\n\n      m_baseLayer = baseLayer;\n\n      // Set the layer as the reference layer\n      m_baseLayer.referenceLayer(true);\n\n      if (arg.center) {\n        // This assumes that the base layer is initially centered at\n        // (0, 0).  May want to add an explicit call to the base layer\n        // to set a given center.\n        m_this.center(arg.center, true);\n      }\n      save = m_zoom;\n      m_zoom = null;\n      m_this.zoom(save);\n\n      m_this._updateBounds();\n\n      // This forces the map into a state with valid bounds\n      // when clamping is on.  The original call to center\n      // is forced to initialize the camera position in the\n      // base layer so no adjustment is done there.\n      m_this.pan({x: 0, y: 0});\n      return m_this;\n    }\n    return m_baseLayer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Manually force to render map\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.draw = function () {\n    var i, layers = m_this.children();\n\n    m_this.geoTrigger(geo.event.draw, {\n        type: geo.event.draw,\n        target: m_this\n      }\n    );\n\n    m_this._update();\n\n    for (i = 0; i < layers.length; i += 1) {\n      layers[i].draw();\n    }\n\n    m_this.geoTrigger(geo.event.drawEnd, {\n        type: geo.event.drawEnd,\n        target: m_this\n      }\n    );\n\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Attach a file reader to a layer in the map to be used as a drop target.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.fileReader = function (readerType, opts) {\n    var layer, renderer;\n    opts = opts || {};\n    if (!readerType) {\n      return m_fileReader;\n    }\n    layer = opts.layer;\n    if (!layer) {\n      renderer = opts.renderer;\n      if (!renderer) {\n        renderer = \"d3\";\n      }\n      layer = m_this.createLayer(\"feature\", {renderer: renderer});\n    }\n    opts.layer = layer;\n    opts.renderer = renderer;\n    m_fileReader = geo.createFileReader(readerType, opts);\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize the map\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    var i;\n\n    if (m_node === undefined || m_node === null) {\n      throw \"Map require DIV node\";\n    }\n\n    if (arg !== undefined && arg.layers !== undefined) {\n      for (i = 0; i < arg.layers.length; i += 1) {\n        if (i === 0) {\n          m_this.baseLayer(arg.layers[i]);\n        }\n\n        m_this.addLayer(arg.layers[i]);\n      }\n    }\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update map\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function (request) {\n    var i, layers = m_this.children();\n    for (i = 0; i < layers.length; i += 1) {\n      layers[i]._update(request);\n    }\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Exit this map\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.exit = function () {\n    var i, layers = m_this.children();\n    for (i = 0; i < layers.length; i += 1) {\n      layers[i]._exit();\n    }\n    if (m_this.interactor()) {\n      m_this.interactor().destroy();\n      m_this.interactor(null);\n    }\n    m_this.node().off(\".geo\");\n    $(window).off(\"resize\", resizeSelf);\n    s_exit();\n  };\n\n  this._init(arg);\n\n  // set up drag/drop handling\n  this.node().on(\"dragover.geo\", function (e) {\n    var evt = e.originalEvent;\n\n    if (m_this.fileReader()) {\n      evt.stopPropagation();\n      evt.preventDefault();\n      evt.dataTransfer.dropEffect = \"copy\";\n    }\n  })\n  .on(\"drop.geo\", function (e) {\n    var evt = e.originalEvent, reader = m_this.fileReader(),\n        i, file;\n\n    function done() {\n      m_this.draw();\n    }\n\n    if (reader) {\n      evt.stopPropagation();\n      evt.preventDefault();\n\n      for (i = 0; i < evt.dataTransfer.files.length; i += 1) {\n        file = evt.dataTransfer.files[i];\n        if (reader.canRead(file)) {\n          reader.read(file, done); // to do: trigger event on done\n        }\n      }\n    }\n  });\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get or set the map interactor\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.interactor = function (arg) {\n    if (arg === undefined) {\n      return m_interactor;\n    }\n    m_interactor = arg;\n\n    // this makes it possible to set a null interactor\n    // i.e. map.interactor(null);\n    if (m_interactor) {\n      m_interactor.map(m_this);\n    }\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get or set the map clock\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.clock = function (arg) {\n    if (arg === undefined) {\n      return m_clock;\n    }\n    m_clock = arg;\n\n    if (m_clock) {\n      m_clock.object(m_this);\n    }\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get or set the min/max zoom range.\n   *\n   * @param {Object} arg {min: minimumzoom, max: maximumzom}\n   * @returns {Object|geo.map}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.zoomRange = function (arg) {\n    if (arg === undefined) {\n      return $.extend({}, m_validZoomRange);\n    }\n    m_validZoomRange.min = arg.min;\n    m_validZoomRange.max = arg.max;\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Start an animated zoom/pan.\n   *\n   * Options:\n   * <pre>\n   *   opts = {\n   *     center: { x: ... , y: ... } // the new center\n   *     zoom: ... // the new zoom level\n   *     duration: ... // the duration (in ms) of the transition\n   *     ease: ... // an easing function [0, 1] -> [0, 1]\n   *   }\n   * </pre>\n   *\n   * Call with no arguments to return the current transition information.\n   *\n   * @param {object?} opts\n   * @returns {geo.map}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.transition = function (opts) {\n\n    if (opts === undefined) {\n      return m_transition;\n    }\n\n    if (m_transition) {\n      m_queuedTransition = opts;\n      return m_this;\n    }\n\n    function interp1(p0, p1, t) {\n      return p0 + (p1 - p0) * t;\n    }\n    function defaultInterp(p0, p1) {\n      return function (t) {\n        return [\n          interp1(p0[0], p1[0], t),\n          interp1(p0[1], p1[1], t),\n          interp1(p0[2], p1[2], t)\n        ];\n      };\n    }\n\n    // Transform zoom level into z-coordinate and inverse\n    function zoom2z(z) {\n      return 360 * Math.pow(2, -1 - z);\n    }\n    function z2zoom(z) {\n      return -1 - Math.log2(z / 360);\n    }\n\n    var defaultOpts = {\n      center: m_this.center(),\n      zoom: m_this.zoom(),\n      duration: 1000,\n      ease: function (t) {\n        return t;\n      },\n      interp: defaultInterp,\n      done: null,\n      zCoord: true\n    };\n\n    if (opts.center) {\n      opts.center = geo.util.normalizeCoordinates(opts.center);\n    }\n    $.extend(defaultOpts, opts);\n\n    m_transition = {\n      start: {\n        center: m_this.center(),\n        zoom: m_this.zoom()\n      },\n      end: {\n        center: defaultOpts.center,\n        zoom: defaultOpts.zoom\n      },\n      ease: defaultOpts.ease,\n      zCoord: defaultOpts.zCoord,\n      done: defaultOpts.done,\n      duration: defaultOpts.duration\n    };\n\n    if (defaultOpts.zCoord) {\n      m_transition.interp = defaultOpts.interp(\n        [\n          m_transition.start.center.x,\n          m_transition.start.center.y,\n          zoom2z(m_transition.start.zoom)\n        ],\n        [\n          m_transition.end.center.x,\n          m_transition.end.center.y,\n          zoom2z(m_transition.end.zoom)\n        ]\n      );\n    } else {\n      m_transition.interp = defaultOpts.interp(\n        [\n          m_transition.start.center.x,\n          m_transition.start.center.y,\n          m_transition.start.zoom\n        ],\n        [\n          m_transition.end.center.x,\n          m_transition.end.center.y,\n          m_transition.end.zoom\n        ]\n      );\n    }\n\n    function anim(time) {\n      var done = m_transition.done, next;\n      next = m_queuedTransition;\n\n      if (!m_transition.start.time) {\n        m_transition.start.time = time;\n        m_transition.end.time = time + defaultOpts.duration;\n      }\n      m_transition.time = time - m_transition.start.time;\n      if (time >= m_transition.end.time || next) {\n        if (!next) {\n          m_this.center(m_transition.end.center);\n          m_this.zoom(m_transition.end.zoom);\n        }\n\n        m_transition = null;\n\n        m_this.geoTrigger(geo.event.transitionend, defaultOpts);\n\n        if (done) {\n          done();\n        }\n\n        if (next) {\n          m_queuedTransition = null;\n          m_this.transition(next);\n        }\n\n        return;\n      }\n\n      var z = m_transition.ease(\n        (time - m_transition.start.time) / defaultOpts.duration\n      );\n\n      var p = m_transition.interp(z);\n      if (m_transition.zCoord) {\n        p[2] = z2zoom(p[2]);\n      }\n      m_this.center({\n        x: p[0],\n        y: p[1]\n      });\n      m_this.zoom(p[2]);\n\n      window.requestAnimationFrame(anim);\n    }\n\n    m_this.geoTrigger(geo.event.transitionstart, defaultOpts);\n\n    if (defaultOpts.cancelNavigation) {\n      m_this.geoTrigger(geo.event.transitionend, defaultOpts);\n      return m_this;\n    } else if (defaultOpts.cancelAnimation) {\n      // run the navigation synchronously\n      defaultOpts.duration = 0;\n      anim(0);\n    } else {\n      window.requestAnimationFrame(anim);\n    }\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update the internally cached map bounds.\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._updateBounds = function () {\n    m_bounds.lowerLeft = m_this.displayToGcs({\n      x: 0,\n      y: m_height\n    });\n    m_bounds.lowerRight = m_this.displayToGcs({\n      x: m_width,\n      y: m_height\n    });\n    m_bounds.upperLeft = m_this.displayToGcs({\n      x: 0,\n      y: 0\n    });\n    m_bounds.upperRight = m_this.displayToGcs({\n      x: m_width,\n      y: 0\n    });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get the locations of the current map corners as latitudes/longitudes.\n   * The return value of this function is an object as follows: ::\n   *\n   *    {\n   *        lowerLeft: {x: ..., y: ...},\n   *        upperLeft: {x: ..., y: ...},\n   *        lowerRight: {x: ..., y: ...},\n   *        upperRight: {x: ..., y: ...}\n   *    }\n   *\n   * @todo Provide a setter\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.bounds = function () {\n    return m_bounds;\n  };\n\n\n  this.interactor(arg.interactor || geo.mapInteractor());\n  this.clock(arg.clock || geo.clock());\n\n  function resizeSelf() {\n    m_this.resize(0, 0, m_node.width(), m_node.height());\n  }\n\n  if (arg.autoResize) {\n    $(window).resize(resizeSelf);\n  }\n\n  return this;\n};\n\n/**\n * General object specification for map types.  Any additional\n * values in the object are passed to the map constructor.\n * @typedef geo.map.spec\n * @type {object}\n * @property {object[]} [data=[]] The default data array to\n * apply to each feature if none exists\n * @property {geo.layer.spec[]} [layers=[]] Layers to create\n */\n\n/**\n * Create a map from an object.  Any errors in the creation\n * of the map will result in returning null.\n * @param {geo.map.spec} spec The object specification\n * @returns {geo.map|null}\n */\ngeo.map.create = function (spec) {\n  \"use strict\";\n\n  var map = geo.map(spec);\n\n  if (!map) {\n    console.warn(\"Could not create map.\");\n    return null;\n  }\n\n  spec.data = spec.data || [];\n  spec.layers = spec.layers || [];\n\n  spec.layers.forEach(function (l) {\n    l.data = l.data || spec.data;\n    l.layer = geo.layer.create(map, l);\n  });\n\n  return map;\n};\n\ninherit(geo.map, geo.sceneObject);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class feature\n *\n * @class\n * @extends geo.sceneObject\n * @returns {geo.feature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.feature = function (arg) {\n  \"use strict\";\n  if (!(this instanceof geo.feature)) {\n    return new geo.feature(arg);\n  }\n  geo.sceneObject.call(this);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  arg = arg || {};\n\n  var m_this = this,\n      s_exit = this._exit,\n      m_selectionAPI = arg.selectionAPI === undefined ? false : arg.selectionAPI,\n      m_style = {},\n      m_layer = arg.layer === undefined ? null : arg.layer,\n      m_gcs = arg.gcs === undefined ? \"EPSG:4326\" : arg.gcs,\n      m_visible = arg.visible === undefined ? true : arg.visible,\n      m_bin = arg.bin === undefined ? 0 : arg.bin,\n      m_renderer = arg.renderer === undefined ? null : arg.renderer,\n      m_dataTime = geo.timestamp(),\n      m_buildTime = geo.timestamp(),\n      m_updateTime = geo.timestamp(),\n      m_selectedFeatures = [];\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Private method to bind mouse handlers on the map element.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._bindMouseHandlers = function () {\n\n    // Don't bind handlers for improved performance on features that don't\n    // require it.\n    if (!m_selectionAPI) {\n      return;\n    }\n\n    // First unbind to be sure that the handlers aren't bound twice.\n    m_this._unbindMouseHandlers();\n\n    m_this.geoOn(geo.event.mousemove, m_this._handleMousemove);\n    m_this.geoOn(geo.event.mouseclick, m_this._handleMouseclick);\n    m_this.geoOn(geo.event.brushend, m_this._handleBrushend);\n    m_this.geoOn(geo.event.brush, m_this._handleBrush);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Private method to unbind mouse handlers on the map element.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._unbindMouseHandlers = function () {\n    m_this.geoOff(geo.event.mousemove, m_this._handleMousemove);\n    m_this.geoOff(geo.event.mouseclick, m_this._handleMouseclick);\n    m_this.geoOff(geo.event.brushend, m_this._handleBrushend);\n    m_this.geoOff(geo.event.brush, m_this._handleBrush);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * For binding mouse events, use functions with\n   * the following call signatures:\n   *\n   * function handler(arg) {\n   *   // arg.data - the data object of the feature\n   *   // arg.index - the index inside the data array of the featue\n   *   // arg.mouse - mouse information object (see src/core/mapInteractor.js)\n   * }\n   *\n   * i.e.\n   *\n   * feature.geoOn(geo.event.feature.mousemove, function (arg) {\n   *   // do something with the feature marker.\n   * });\n   */\n  ////////////////////////////////////////////////////////////////////////////\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Search for features containing the given point.\n   *\n   * Returns an object: ::\n   *\n   *   {\n   *     data: [...] // an array of data objects for matching features\n   *     index: [...] // an array of indices of the matching features\n   *   }\n   *\n   * @argument {Object} coordinate\n   * @returns {Object}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.pointSearch = function () {\n    // base class method does nothing\n    return {\n      index: [],\n      found: []\n    };\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Private mousemove handler\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._handleMousemove = function () {\n    var mouse = m_this.layer().map().interactor().mouse(),\n        data = m_this.data(),\n        over = m_this.pointSearch(mouse.geo),\n        newFeatures = [], oldFeatures = [], lastTop = -1, top = -1;\n\n    // Get the index of the element that was previously on top\n    if (m_selectedFeatures.length) {\n      lastTop = m_selectedFeatures[m_selectedFeatures.length - 1];\n    }\n\n    // There are probably faster ways of doing this:\n    newFeatures = over.index.filter(function (i) {\n      return m_selectedFeatures.indexOf(i) < 0;\n    });\n    oldFeatures = m_selectedFeatures.filter(function (i) {\n      return over.index.indexOf(i) < 0;\n    });\n\n    geo.feature.eventID += 1;\n    // Fire events for mouse in first.\n    newFeatures.forEach(function (i, idx) {\n      m_this.geoTrigger(geo.event.feature.mouseover, {\n        data: data[i],\n        index: i,\n        mouse: mouse,\n        eventID: geo.feature.eventID,\n        top: idx === newFeatures.length - 1\n      }, true);\n    });\n\n    geo.feature.eventID += 1;\n    // Fire events for mouse out next\n    oldFeatures.forEach(function (i, idx) {\n      m_this.geoTrigger(geo.event.feature.mouseout, {\n        data: data[i],\n        index: i,\n        mouse: mouse,\n        eventID: geo.feature.eventID,\n        top: idx === oldFeatures.length - 1\n      }, true);\n    });\n\n    geo.feature.eventID += 1;\n    // Fire events for mouse move last\n    over.index.forEach(function (i, idx) {\n      m_this.geoTrigger(geo.event.feature.mousemove, {\n        data: data[i],\n        index: i,\n        mouse: mouse,\n        eventID: geo.feature.eventID,\n        top: idx === over.index.length - 1\n      }, true);\n    });\n\n    // Replace the selected features array\n    m_selectedFeatures = over.index;\n\n    // Get the index of the element that is now on top\n    if (m_selectedFeatures.length) {\n      top = m_selectedFeatures[m_selectedFeatures.length - 1];\n    }\n\n    if (lastTop !== top) {\n      // The element on top changed so we need to fire mouseon/mouseoff\n      if (lastTop !== -1) {\n        m_this.geoTrigger(geo.event.feature.mouseoff, {\n          data: data[lastTop],\n          index: lastTop,\n          mouse: mouse\n        }, true);\n      }\n\n      if (top !== -1) {\n        m_this.geoTrigger(geo.event.feature.mouseon, {\n          data: data[top],\n          index: top,\n          mouse: mouse\n        }, true);\n      }\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Private mouseclick handler\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._handleMouseclick = function () {\n    var mouse = m_this.layer().map().interactor().mouse(),\n        data = m_this.data(),\n        over = m_this.pointSearch(mouse.geo);\n\n    geo.feature.eventID += 1;\n    over.index.forEach(function (i, idx) {\n      m_this.geoTrigger(geo.event.feature.mouseclick, {\n        data: data[i],\n        index: i,\n        mouse: mouse,\n        eventID: geo.feature.eventID,\n        top: idx === over.index.length - 1\n      }, true);\n    });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Private brush handler.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._handleBrush = function (brush) {\n    var idx = m_this.boxSearch(brush.gcs.lowerLeft, brush.gcs.upperRight),\n        data = m_this.data();\n\n    geo.feature.eventID += 1;\n    idx.forEach(function (i, idx) {\n      m_this.geoTrigger(geo.event.feature.brush, {\n        data: data[i],\n        index: i,\n        mouse: brush.mouse,\n        brush: brush,\n        eventID: geo.feature.eventID,\n        top: idx === idx.length - 1\n      }, true);\n    });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Private brushend handler.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._handleBrushend = function (brush) {\n    var idx = m_this.boxSearch(brush.gcs.lowerLeft, brush.gcs.upperRight),\n        data = m_this.data();\n\n    geo.feature.eventID += 1;\n    idx.forEach(function (i, idx) {\n      m_this.geoTrigger(geo.event.feature.brushend, {\n        data: data[i],\n        index: i,\n        mouse: brush.mouse,\n        brush: brush,\n        eventID: geo.feature.eventID,\n        top: idx === idx.length - 1\n      }, true);\n    });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set style used by the feature\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.style = function (arg1, arg2) {\n    if (arg1 === undefined) {\n      return m_style;\n    } else if (typeof arg1 === \"string\" && arg2 === undefined) {\n      return m_style[arg1];\n    } else if (arg2 === undefined) {\n      m_style = $.extend({}, m_style, arg1);\n      m_this.modified();\n      return m_this;\n    } else {\n      m_style[arg1] = arg2;\n      m_this.modified();\n      return m_this;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * A uniform getter that always returns a function even for constant styles.\n   * Maybe extend later to support accessor-like objects.  If undefined input,\n   * return all the styles as an object.\n   *\n   * @param {string|undefined} key\n   * @return {function}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.style.get = function (key) {\n    var tmp, out;\n    if (key === undefined) {\n      var all = {}, k;\n      for (k in m_style) {\n        if (m_style.hasOwnProperty(k)) {\n          all[k] = m_this.style.get(k);\n        }\n      }\n      return all;\n    }\n    if (key.toLowerCase().match(/color$/)) {\n      if (geo.util.isFunction(m_style[key])) {\n        tmp = geo.util.ensureFunction(m_style[key]);\n        out = function () {\n          return geo.util.convertColor(\n            tmp.apply(this, arguments)\n          );\n        };\n      } else {\n        // if the color is not a function, only convert it once\n        out = geo.util.ensureFunction(geo.util.convertColor(m_style[key]));\n      }\n    } else {\n      out = geo.util.ensureFunction(m_style[key]);\n    }\n    return out;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get layer referenced by the feature\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.layer = function () {\n    return m_layer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get renderer used by the feature\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.renderer = function () {\n    return m_renderer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get list of drawables or nodes that are context/api specific.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.drawables = function () {\n    return m_this._drawables();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set projection of the feature\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.gcs = function (val) {\n    if (val === undefined) {\n      return m_gcs;\n    } else {\n      m_gcs = val;\n      m_this.modified();\n      return m_this;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set visibility of the feature\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.visible = function (val) {\n    if (val === undefined) {\n      return m_visible;\n    } else {\n      m_visible = val;\n      m_this.modified();\n      return m_this;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set bin of the feature\n   *\n   * Bin number is typically used for sorting the order of rendering\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.bin = function (val) {\n    if (val === undefined) {\n      return m_bin;\n    } else {\n      m_bin = val;\n      m_this.modified();\n      return m_this;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set timestamp of data change\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.dataTime = function (val) {\n    if (val === undefined) {\n      return m_dataTime;\n    } else {\n      m_dataTime = val;\n      m_this.modified();\n      return m_this;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set timestamp of last time build happened\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.buildTime = function (val) {\n    if (val === undefined) {\n      return m_buildTime;\n    } else {\n      m_buildTime = val;\n      m_this.modified();\n      return m_this;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set timestamp of last time update happened\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.updateTime = function (val) {\n    if (val === undefined) {\n      return m_updateTime;\n    } else {\n      m_updateTime = val;\n      m_this.modified();\n      return m_this;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set data\n   *\n   * @returns {Array}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.data = function (data) {\n    if (data === undefined) {\n      return m_this.style(\"data\") || [];\n    } else {\n      m_this.style(\"data\", data);\n      m_this.dataTime().modified();\n      m_this.modified();\n      return m_this;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Query if the selection API is enabled for this feature.\n   * @returns {bool}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.selectionAPI = function () {\n    return m_selectionAPI;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   *\n   * Derived class should implement this\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    if (!m_layer) {\n      throw \"Feature requires a valid layer\";\n    }\n    m_style = $.extend({},\n                {\"opacity\": 1.0}, arg.style === undefined ? {} :\n                arg.style);\n    m_this._bindMouseHandlers();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Build\n   *\n   * Derived class should implement this\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._build = function () {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get context specific drawables\n   *\n   * Derived class should implement this\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._drawables = function () {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update\n   *\n   * Derived class should implement this\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function () {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Destroy\n   *\n   * Derived class should implement this\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    m_this._unbindMouseHandlers();\n    m_selectedFeatures = [];\n    m_style = {};\n    arg = {};\n    s_exit();\n  };\n\n  this._init(arg);\n  return this;\n};\n\n/**\n * The most recent feature event triggered.\n * @type {number}\n */\ngeo.feature.eventID = 0;\n\n/**\n * General object specification for feature types.\n * @typedef geo.feature.spec\n * @type {object}\n * @property {string} type A supported feature type.\n * @property {object[]} [data=[]] An array of arbitrary objects used to\n * construct the feature.  These objects (and their associated\n * indices in the array) will be passed back to style and attribute\n * accessors provided by the user.  In general the number of\n * \"markers\" drawn will be equal to the length of this array.\n */\n\n/**\n * Create a feature from an object.  The implementation here is\n * meant to define the general interface of creating features\n * from a javascript object.  See documentation from individual\n * feature types for specific details.  In case of an error in\n * the arguments this method will return null;\n * @param {geo.layer} layer The layer to add the feature to\n * @param {geo.feature.spec} [spec={}] The object specification\n * @returns {geo.feature|null}\n */\ngeo.feature.create = function (layer, spec) {\n  \"use strict\";\n\n  var type = spec.type;\n\n  // Check arguments\n  if (!layer instanceof geo.layer) {\n    console.warn(\"Invalid layer\");\n    return null;\n  }\n  if (typeof spec !== \"object\") {\n    console.warn(\"Invalid spec\");\n    return null;\n  }\n  var feature = layer.createFeature(type);\n  if (!feature) {\n    console.warn(\"Could not create feature type '\" + type + \"'\");\n    return null;\n  }\n\n  spec = spec || {};\n  spec.data = spec.data || [];\n  return feature.style(spec);\n};\n\ninherit(geo.feature, geo.sceneObject);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class pointFeature\n *\n * @class\n * @extends geo.feature\n * @returns {geo.pointFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.pointFeature = function (arg) {\n  \"use strict\";\n  if (!(this instanceof geo.pointFeature)) {\n    return new geo.pointFeature(arg);\n  }\n  arg = arg || {};\n  geo.feature.call(this, arg);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      s_init = this._init,\n      m_rangeTree = null,\n      s_data = this.data,\n      s_style = this.style,\n      m_maxRadius = 0;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set position\n   *\n   * @returns {geo.pointFeature}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.position = function (val) {\n    if (val === undefined) {\n      return m_this.style(\"position\");\n    } else {\n      m_this.style(\"position\", val);\n      m_this.dataTime().modified();\n      m_this.modified();\n    }\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update the current range tree object.  Should be called whenever the\n   * data changes.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._updateRangeTree = function () {\n    var pts, position,\n        radius = m_this.style.get(\"radius\"),\n        stroke = m_this.style.get(\"stroke\"),\n        strokeWidth = m_this.style.get(\"strokeWidth\");\n\n    position = m_this.position();\n\n    m_maxRadius = 0;\n\n    // create an array of positions in geo coordinates\n    pts = m_this.data().map(function (d, i) {\n      var pt = position(d);\n      pt.idx = i;\n\n      // store the maximum point radius\n      m_maxRadius = Math.max(\n        m_maxRadius,\n        radius(d, i) + (stroke(d, i) ? strokeWidth(d, i) : 0)\n      );\n\n      return pt;\n    });\n\n    m_rangeTree = new geo.util.RangeTree(pts);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Returns an array of datum indices that contain the given point.\n   * Largely adapted from wigglemaps pointQuerier:\n   *\n   * https://github.com/dotskapes/wigglemaps/blob/cf5bed3fbfe2c3e48d31799462a80c564be1fb60/src/query/PointQuerier.js\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.pointSearch = function (p) {\n    var min, max, data, idx = [], box, found = [], ifound = [], map, pt,\n        stroke = m_this.style.get(\"stroke\"),\n        strokeWidth = m_this.style.get(\"strokeWidth\"),\n        radius = m_this.style.get(\"radius\");\n\n    if (!m_this.selectionAPI()) {\n      return [];\n    }\n\n    data = m_this.data();\n    if (!data || !data.length) {\n      return {\n        found: [],\n        index: []\n      };\n    }\n\n    map = m_this.layer().map();\n    pt = map.gcsToDisplay(p);\n\n    // Get the upper right corner in geo coordinates\n    min = map.displayToGcs({\n      x: pt.x - m_maxRadius,\n      y: pt.y + m_maxRadius   // GCS coordinates are bottom to top\n    });\n\n    // Get the lower left corner in geo coordinates\n    max = map.displayToGcs({\n      x: pt.x + m_maxRadius,\n      y: pt.y - m_maxRadius\n    });\n\n    // Find points inside the bounding box\n    box = new geo.util.Box(geo.util.vect(min.x, min.y), geo.util.vect(max.x, max.y));\n    m_rangeTree.search(box).forEach(function (q) {\n      idx.push(q.idx);\n    });\n\n    // Filter by circular region\n    idx.forEach(function (i) {\n      var d = data[i],\n          p = m_this.position()(d, i),\n          dx, dy, rad;\n\n      rad = radius(data[i], i);\n      rad += stroke(data[i], i) ? strokeWidth(data[i], i) : 0;\n      p = map.gcsToDisplay(p);\n      dx = p.x - pt.x;\n      dy = p.y - pt.y;\n      if (Math.sqrt(dx * dx + dy * dy) <= rad) {\n        found.push(d);\n        ifound.push(i);\n      }\n    });\n\n    return {\n      data: found,\n      index: ifound\n    };\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Returns an array of datum indices that are contained in the given box.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.boxSearch = function (lowerLeft, upperRight) {\n    var pos = m_this.position(),\n        idx = [];\n    // TODO: use the range tree\n    m_this.data().forEach(function (d, i) {\n      var p = pos(d);\n      if (p.x >= lowerLeft.x &&\n          p.x <= upperRight.x &&\n          p.y >= lowerLeft.y &&\n          p.y <= upperRight.y\n      ) {\n        idx.push(i);\n      }\n    });\n    return idx;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Overloaded data method that updates the internal range tree on write.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.data = function (data) {\n    if (data === undefined) {\n      return s_data();\n    }\n    s_data(data);\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Overloaded style method that updates the internal range tree on write.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.style = function (arg1, arg2) {\n    var val = s_style(arg1, arg2);\n    if (val === m_this && m_this.selectionAPI()) {\n      m_this._updateRangeTree();\n    }\n    return val;\n  };\n  this.style.get = s_style.get;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Returns the bounding box for a given datum in screen coordinates as an\n   * object: ::\n   *\n   *   {\n   *     min: {\n   *       x: value,\n   *       y: value\n   *     },\n   *     max: {\n   *       x: value,\n   *       y: value\n   *     }\n   *   }\n   *\n   * @returns {object}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._boundingBox = function (d) {\n    var pt, radius;\n\n    // get the position in geo coordinates\n    pt = m_this.position()(d);\n\n    // convert to screen coordinates\n    pt = m_this.layer().map().gcsToDisplay(pt);\n\n    // get the radius of the points (should we add stroke width?)\n    radius = m_this.style().radius(d);\n\n    return {\n      min: {\n        x: pt.x - radius,\n        y: pt.y - radius\n      },\n      max: {\n        x: pt.x + radius,\n        y: pt.y + radius\n      }\n    };\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    s_init.call(m_this, arg);\n\n    var defaultStyle = $.extend(\n      {},\n      {\n        radius: 10.0,\n        stroke: true,\n        strokeColor: { r: 0.0, g: 1.0, b: 0.0 },\n        strokeWidth: 2.0,\n        strokeOpacity: 1.0,\n        fillColor: { r: 1.0, g: 0.0, b: 0.0 },\n        fill: true,\n        fillOpacity: 1.0,\n        sprites: false,\n        sprites_image: null,\n        position: function (d) { return d; }\n      },\n      arg.style === undefined ? {} : arg.style\n    );\n\n    if (arg.position !== undefined) {\n      defaultStyle.position = arg.position;\n    }\n\n    m_this.style(defaultStyle);\n    m_this.dataTime().modified();\n  };\n\n  return m_this;\n};\n\ngeo.event.pointFeature = $.extend({}, geo.event.feature);\n\n/**\n * Object specification for a point feature.\n *\n * @extends geo.feature.spec // need to make a jsdoc plugin for this to work\n * @typedef geo.pointFeature.spec\n * @type {object}\n */\n\n/**\n * Create a pointFeature from an object.\n * @see {@link geo.feature.create}\n * @param {geo.layer} layer The layer to add the feature to\n * @param {geo.pointFeature.spec} spec The object specification\n * @returns {geo.pointFeature|null}\n */\ngeo.pointFeature.create = function (layer, renderer, spec) {\n  \"use strict\";\n\n  spec.type = \"point\";\n  return geo.feature.create(layer, spec);\n};\n\ninherit(geo.pointFeature, geo.feature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class lineFeature\n *\n * @class\n * @extends geo.feature\n * @returns {geo.lineFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.lineFeature = function (arg) {\n  \"use strict\";\n  if (!(this instanceof geo.lineFeature)) {\n    return new geo.lineFeature(arg);\n  }\n  arg = arg || {};\n  geo.feature.call(this, arg);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      s_init = this._init;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set line accessor\n   *\n   * @returns {geo.pointFeature}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.line = function (val) {\n    if (val === undefined) {\n      return m_this.style(\"line\");\n    } else {\n      m_this.style(\"line\", val);\n      m_this.dataTime().modified();\n      m_this.modified();\n    }\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set position accessor\n   *\n   * @returns {geo.pointFeature}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.position = function (val) {\n    if (val === undefined) {\n      return m_this.style(\"position\");\n    } else {\n      m_this.style(\"position\", val);\n      m_this.dataTime().modified();\n      m_this.modified();\n    }\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Returns an array of datum indices that contain the given point.\n   * This is a slow implementation with runtime order of the number of\n   * vertices.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.pointSearch = function (p) {\n    var data, pt, map, line, width, indices = [], found = [], pos;\n    data = m_this.data();\n    if (!data || !data.length) {\n      return {\n        found: [],\n        index: []\n      };\n    }\n\n    map = m_this.layer().map();\n    line = m_this.line();\n    width = m_this.style.get(\"strokeWidth\");\n    pos = m_this.position();\n    pt = map.gcsToDisplay(p);\n\n    // minimum l2 distance squared from\n    // q -> line(u, v)\n    function lineDist2(q, u, v) {\n      var t, l2 = dist2(u, v);\n\n      if (l2 < 1) {\n        // u, v are within 1 pixel\n        return dist2(q, u);\n      }\n\n      t = ((q.x - u.x) * (v.x - u.x) + (q.y - u.y) * (v.y - u.y)) / l2;\n      if (t < 0) { return dist2(q, u); }\n      if (t > 1) { return dist2(q, v); }\n      return dist2(\n        q,\n        {\n          x: u.x + t * (v.x - u.x),\n          y: u.y + t * (v.y - u.y)\n        }\n      );\n    }\n\n    // l2 distance squared from u to v\n    function dist2(u, v) {\n      var dx = u.x - v.x,\n          dy = u.y - v.y;\n      return dx * dx + dy * dy;\n    }\n\n    // for each line\n    data.forEach(function (d, index) {\n      var last = null;\n\n      try {\n        line(d, index).forEach(function (current, j) {\n\n          // get the screen coordinates of the current point\n          var p = pos(current, j, d, index);\n          var s = map.gcsToDisplay(p);\n          var r = Math.ceil(width(p, j, d, index) / 2) + 2;\n          r = r * r;\n\n          if (last) {\n            // test the line segment s -> last\n            if (lineDist2(pt, s, last) <= r) {\n\n              // short circuit the loop here\n              throw \"found\";\n            }\n          }\n\n          last = s;\n        });\n      } catch (err) {\n        if (err !== \"found\") {\n          throw err;\n        }\n        found.push(d);\n        indices.push(index);\n      }\n    });\n\n    return {\n      data: found,\n      index: indices\n    };\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Returns an array of line indices that are contained in the given box.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.boxSearch = function (lowerLeft, upperRight, opts) {\n    var pos = m_this.position(),\n        idx = [],\n        line = m_this.line();\n\n    opts = opts || {};\n    opts.partial = opts.partial || false;\n    if (opts.partial) {\n      throw \"Unimplemented query method.\";\n    }\n\n    m_this.data().forEach(function (d, i) {\n      var inside = true;\n      line(d, i).forEach(function (e, j) {\n        if (!inside) { return; }\n        var p = pos(e, j, d, i);\n        if (!(p.x >= lowerLeft.x  &&\n              p.x <= upperRight.x &&\n              p.y >= lowerLeft.y  &&\n              p.y <= upperRight.y)\n        ) {\n          inside = false;\n        }\n      });\n      if (inside) {\n        idx.push(i);\n      }\n    });\n    return idx;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    s_init.call(m_this, arg);\n\n    var defaultStyle = $.extend(\n      {},\n      {\n        \"strokeWidth\": 1.0,\n        // Default to gold color for lines\n        \"strokeColor\": { r: 1.0, g: 0.8431372549, b: 0.0 },\n        \"strokeStyle\": \"solid\",\n        \"strokeOpacity\": 1.0,\n        \"line\": function (d) { return d; },\n        \"position\": function (d) { return d; }\n      },\n      arg.style === undefined ? {} : arg.style\n    );\n\n    if (arg.line !== undefined) {\n      defaultStyle.line = arg.line;\n    }\n\n    if (arg.position !== undefined) {\n      defaultStyle.position = arg.position;\n    }\n\n\n    m_this.style(defaultStyle);\n\n    m_this.dataTime().modified();\n  };\n\n  this._init(arg);\n  return this;\n};\n\n/**\n * Create a lineFeature from an object.\n * @see {@link geo.feature.create}\n * @param {geo.layer} layer The layer to add the feature to\n * @param {geo.lineFeature.spec} spec The object specification\n * @returns {geo.lineFeature|null}\n */\ngeo.lineFeature.create = function (layer, spec) {\n  \"use strict\";\n\n  spec.type = \"line\";\n  return geo.feature.create(layer, spec);\n};\n\ninherit(geo.lineFeature, geo.feature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class pathFeature\n *\n * @class\n * @extends geo.feature\n * @returns {geo.pathFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.pathFeature = function (arg) {\n  \"use strict\";\n  if (!(this instanceof geo.pathFeature)) {\n    return new geo.pathFeature(arg);\n  }\n  arg = arg || {};\n  geo.feature.call(this, arg);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      m_position = arg.position === undefined ? [] : arg.position,\n      s_init = this._init;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set positions\n   *\n   * @returns {geo.pathFeature}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.position = function (val) {\n    if (val === undefined) {\n      return m_position;\n    }\n    // Copy incoming array of positions\n    m_position = val;\n    m_this.dataTime().modified();\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    s_init.call(m_this, arg);\n\n    var defaultStyle = $.extend(\n      {},\n      {\n        \"strokeWidth\": function () { return 1; },\n        \"strokeColor\": function () { return { r: 1.0, g: 1.0, b: 1.0 }; }\n      },\n      arg.style === undefined ? {} : arg.style\n    );\n\n    m_this.style(defaultStyle);\n\n    if (m_position) {\n      m_this.dataTime().modified();\n    }\n  };\n\n  this._init(arg);\n  return this;\n};\n\ninherit(geo.pathFeature, geo.feature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class polygonFeature\n *\n * @class\n * @extends geo.feature\n * @returns {geo.polygonFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.polygonFeature = function (arg) {\n  \"use strict\";\n  if (!(this instanceof geo.polygonFeature)) {\n    return new geo.polygonFeature(arg);\n  }\n  arg = arg || {};\n  geo.feature.call(this, arg);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      m_position,\n      m_polygon,\n      s_init = this._init,\n      s_data = this.data,\n      m_coordinates = {outer: [], inner: []};\n\n  if (arg.line === undefined) {\n    m_polygon = function (d) {\n      return d;\n    };\n  } else {\n    m_polygon = arg.polygon;\n  }\n\n  if (arg.position === undefined) {\n    m_position = function (d) {\n      return d;\n    };\n  } else {\n    m_position = arg.position;\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Override the parent data method to keep track of changes to the\n   * internal coordinates.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.data = function (arg) {\n    var ret = s_data(arg);\n    if (arg !== undefined) {\n      getCoordinates();\n    }\n    return ret;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get the internal coordinates whenever the data changes.  For now, we do\n   * the computation in world coordinates, but we will need to work in GCS\n   * for other projections.\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function getCoordinates() {\n    var posFunc = m_this.position(),\n        polyFunc = m_this.polygon();\n    m_coordinates = m_this.data().map(function (d, i) {\n      var poly = polyFunc(d);\n      var outer, inner;\n\n      outer = (poly.outer || []).map(function (d0, j) {\n        return posFunc.call(m_this, d0, j, d, i);\n      });\n\n      inner = (poly.inner || []).map(function (hole) {\n        return (hole || []).map(function (d0, k) {\n          return posFunc.call(m_this, d0, k, d, i);\n        });\n      });\n      return {\n        outer: outer,\n        inner: inner\n      };\n    });\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set line accessor\n   *\n   * @returns {geo.pointFeature}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.polygon = function (val) {\n    if (val === undefined) {\n      return m_polygon;\n    } else {\n      m_polygon = val;\n      m_this.dataTime().modified();\n      m_this.modified();\n      getCoordinates();\n    }\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set position accessor\n   *\n   * @returns {geo.pointFeature}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.position = function (val) {\n    if (val === undefined) {\n      return m_position;\n    } else {\n      m_position = val;\n      m_this.dataTime().modified();\n      m_this.modified();\n      getCoordinates();\n    }\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Point searce method for selection api.  Returns markers containing the\n   * given point.\n   * @argument {Object} coordinate\n   * @returns {Object}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.pointSearch = function (coordinate) {\n    var found = [], indices = [], data = m_this.data();\n    m_coordinates.forEach(function (coord, i) {\n      var inside = geo.util.pointInPolygon(\n        coordinate,\n        coord.outer,\n        coord.inner\n      );\n      if (inside) {\n        indices.push(i);\n        found.push(data[i]);\n      }\n    });\n    return {\n      index: indices,\n      found: found\n    };\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    s_init.call(m_this, arg);\n\n    var defaultStyle = $.extend(\n      {},\n      {\n        \"fillColor\": { r: 0.0,  g: 0.5, b: 0.5 },\n        \"fillOpacity\": 1.0\n      },\n      arg.style === undefined ? {} : arg.style\n    );\n\n    m_this.style(defaultStyle);\n\n    if (m_position) {\n      m_this.dataTime().modified();\n    }\n  };\n\n  this._init(arg);\n  return this;\n};\n\ninherit(geo.polygonFeature, geo.feature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class planeFeature\n *\n * @class\n * @extends geo.polygonFeature\n * @returns {geo.planeFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.planeFeature = function (arg) {\n  \"use strict\";\n  if (!(this instanceof geo.planeFeature)) {\n    return new geo.planeFeature(arg);\n  }\n  arg = arg || {};\n\n  // Defaults\n  arg.ul = arg.ul === undefined ? [0.0, 1.0, 0.0] : arg.ul;\n  arg.lr = arg.lr === undefined ? [1.0, 0.0, 0.0] : arg.lr;\n  arg.depth = arg.depth === undefined ? 0.0 : arg.depth;\n\n  geo.polygonFeature.call(this, arg);\n\n  var m_this = this,\n      m_origin = [arg.ul.x, arg.lr.y, arg.depth],\n      m_upperLeft = [arg.ul.x, arg.ul.y, arg.depth],\n      m_lowerRight = [arg.lr.x, arg.lr.y, arg.depth],\n      m_defaultDepth = arg.depth,\n      m_drawOnAsyncResourceLoad = arg.drawOnAsyncResourceLoad === undefined ?\n                                    true : false,\n      s_init = this._init;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set origin\n   *\n   * @returns {geo.planeFeature}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.origin = function (val) {\n    if (val === undefined) {\n      return m_origin;\n    } else if (val instanceof Array) {\n      if (val.length > 3 || val.length < 2) {\n        throw \"Upper left point requires point in 2 or 3 dimension\";\n      }\n      m_origin = val.slice(0);\n      if (m_origin.length === 2) {\n        m_origin[2] = m_defaultDepth;\n      }\n    } else if (val instanceof geo.latlng) {\n      m_origin = [val.x(), val.y(), m_defaultDepth];\n    }\n    m_this.dataTime().modified();\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set pt1\n   *\n   * @returns {geo.planeFeature}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.upperLeft = function (val) {\n    if (val === undefined) {\n      return m_upperLeft;\n    } else if (val instanceof Array) {\n      if (val.length > 3 || val.length < 2) {\n        throw \"Upper left point requires point in 2 or 3 dimension\";\n      }\n      m_upperLeft = val.slice(0);\n      if (m_upperLeft.length === 2) {\n        m_upperLeft[2] = m_defaultDepth;\n      }\n    } else if (val instanceof geo.latlng) {\n      m_upperLeft = [val.x(), val.y(), m_defaultDepth];\n    }\n    m_this.dataTime().modified();\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set origin\n   *\n   * @returns {geo.planeFeature}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.lowerRight = function (val) {\n    if (val === undefined) {\n      return m_lowerRight;\n    } else if (val instanceof Array) {\n      if (val.length > 3 || val.length < 2) {\n        throw \"Upper left point requires point in 2 or 3 dimension\";\n      }\n      m_lowerRight = val.slice(0);\n      if (m_lowerRight.length === 2) {\n        m_lowerRight[2] = m_defaultDepth;\n      }\n      m_this.dataTime().modified();\n    } else if (val instanceof geo.latlng) {\n      m_lowerRight = [val.x(), val.y(), m_defaultDepth];\n    }\n    m_this.dataTime().modified();\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set if draw should happen as soon as a async resource is loaded\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.drawOnAsyncResourceLoad = function (val) {\n    if (val === undefined) {\n      return m_drawOnAsyncResourceLoad;\n    } else {\n      m_drawOnAsyncResourceLoad = val;\n      return m_this;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    var style = null;\n    s_init.call(m_this, arg);\n    style = m_this.style();\n    if (style.image === undefined) {\n      style.image = null;\n    }\n    m_this.style(style);\n  };\n\n  this._init(arg);\n  return this;\n};\n\ninherit(geo.planeFeature, geo.polygonFeature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class vectorFeature\n *\n * @class\n * @extends geo.feature\n * @returns {geo.vectorFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.vectorFeature = function (arg) {\n  'use strict';\n  if (!(this instanceof geo.vectorFeature)) {\n    return new geo.vectorFeature(arg);\n  }\n  arg = arg || {};\n  geo.feature.call(this, arg);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      s_init = this._init,\n      s_style = this.style;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get or set the accessor for the origin of the vector.  This is the point\n   * that the vector base resides at.  Defaults to (0, 0, 0).\n   * @param {geo.accessor|geo.geoPosition} [accessor] The origin accessor\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.origin = function (val) {\n    if (val === undefined) {\n      return s_style('origin');\n    } else {\n      s_style('origin', val);\n      m_this.dataTime().modified();\n      m_this.modified();\n    }\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get or set the accessor for the displacement (coordinates) of the vector.\n   * @param {geo.accessor|geo.geoPosition} [accessor] The accessor\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.delta = function (val) {\n    if (val === undefined) {\n      return s_style('delta');\n    } else {\n      s_style('delta', val);\n      m_this.dataTime().modified();\n      m_this.modified();\n    }\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   * @protected\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    s_init.call(m_this, arg);\n\n    var defaultStyle = $.extend(\n      {},\n      {\n        strokeColor: 'black',\n        strokeWidth: 2.0,\n        strokeOpacity: 1.0,\n        // TODO: define styles for the end markers\n        // originStyle: 'none',\n        // endStyle: 'arrow',\n        origin: {x: 0, y: 0, z: 0},\n        delta: function (d) { return d; },\n        scale: null // size scaling factor (null -> renderer decides)\n      },\n      arg.style === undefined ? {} : arg.style\n    );\n\n    if (arg.origin !== undefined) {\n      defaultStyle.origin = arg.origin;\n    }\n\n    m_this.style(defaultStyle);\n    m_this.dataTime().modified();\n  };\n};\n\ninherit(geo.vectorFeature, geo.feature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class geomFeature\n *\n * @class\n * @extends geo.feature\n * @returns {geo.geomFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.geomFeature = function (arg) {\n  \"use strict\";\n  if (!(this instanceof geo.geomFeature)) {\n    return new geo.geomFeature(arg);\n  }\n  arg = arg || {};\n  geo.feature.call(this, arg);\n\n  arg.style = arg.style === undefined ? $.extend({}, {\n    \"color\": [1.0, 1.0, 1.0],\n    \"point_sprites\": false,\n    \"point_sprites_image\": null\n  }, arg.style) : arg.style;\n\n  // Update style\n  this.style(arg.style);\n\n  return this;\n};\n\ninherit(geo.geomFeature, geo.feature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class graphFeature\n *\n * @class\n * @extends geo.feature\n * @returns {geo.graphFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.graphFeature = function (arg) {\n  \"use strict\";\n\n  if (!(this instanceof geo.graphFeature)) {\n    return new geo.graphFeature(arg);\n  }\n  arg = arg || {};\n  geo.feature.call(this, arg);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      s_draw = this.draw,\n      s_style = this.style,\n      m_nodes = null,\n      m_points = null,\n      m_children = function (d) { return d.children; },\n      m_links = [],\n      s_init = this._init,\n      s_exit = this._exit;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    s_init.call(m_this, arg);\n\n    var defaultStyle = $.extend(true, {},\n      {\n        nodes: {\n          radius: 5.0,\n          fill: true,\n          fillColor: { r: 1.0, g: 0.0, b: 0.0 },\n          strokeColor: { r: 0, g: 0, b: 0 }\n        },\n        links: {\n          strokeColor: { r: 0.0, g: 0.0, b: 0.0 }\n        },\n        linkType: \"path\" /* 'path' || 'line' */\n      },\n      arg.style === undefined ? {} : arg.style\n    );\n\n    m_this.style(defaultStyle);\n    m_this.nodes(function (d) { return d; });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Call child _build methods\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._build = function () {\n    m_this.children().forEach(function (child) {\n      child._build();\n    });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Call child _update methods\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function () {\n    m_this.children().forEach(function (child) {\n      child._update();\n    });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Custom _exit method to remove all sub-features\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    m_this.data([]);\n    m_links.forEach(function (link) {\n      link._exit();\n      m_this.removeChild(link);\n    });\n    m_links = [];\n    m_points._exit();\n    m_this.removeChild(m_points);\n    s_exit();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set style\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.style = function (arg, arg2) {\n    var out = s_style.call(m_this, arg, arg2);\n    if (out !== m_this) {\n      return out;\n    }\n    // set styles for sub-features\n    m_points.style(arg.nodes);\n    m_links.forEach(function (l) {\n      l.style(arg.links);\n    });\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set links accessor.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.links = function (arg) {\n    if (arg === undefined) {\n      return m_children;\n    }\n\n    m_children = geo.util.ensureFunction(arg);\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set nodes\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.nodes = function (val) {\n    if (val === undefined) {\n      return m_nodes;\n    }\n    m_nodes = val;\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get internal node feature\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.nodeFeature = function () {\n    return m_points;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get internal link features\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.linkFeatures = function () {\n    return m_links;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Build the feature for drawing\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.draw = function () {\n\n    var layer = m_this.layer(),\n        data = m_this.data(),\n        nLinks = 0,\n        style;\n\n    // get the feature style object\n    style = m_this.style();\n\n    // Bind data to the point nodes\n    m_points.data(data);\n    m_points.style(style.nodes);\n\n    // get links from node connections\n    data.forEach(function (source) {\n      (source.children || []).forEach(function (target) {\n        var link;\n        nLinks += 1;\n        if (m_links.length < nLinks) {\n          link = geo.createFeature(\n            style.linkType, layer, layer.renderer()\n          ).style(style.links);\n          m_this.addChild(link);\n          m_links.push(link);\n        }\n        m_links[nLinks - 1].data([source, target]);\n      });\n    });\n\n    m_links.splice(nLinks, m_links.length - nLinks).forEach(function (l) {\n      l._exit();\n      m_this.removeChild(l);\n    });\n\n    s_draw();\n    return m_this;\n  };\n\n  m_points = geo.createFeature(\n    \"point\",\n    this.layer(),\n    this.layer().renderer()\n  );\n  m_this.addChild(m_points);\n\n  if (arg.nodes) {\n    this.nodes(arg.nodes);\n  }\n\n  this._init(arg);\n  return this;\n};\n\ninherit(geo.graphFeature, geo.feature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Transform geometric data of a feature from source projection to destination\n * projection.\n *\n * @namespace\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.transform = {};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Custom transform for a feature used for OpenStreetMap\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.transform.osmTransformFeature = function (destGcs, feature, inplace) {\n  /// TODO\n  /// Currently we make assumption that incoming feature is in 4326\n  /// which may not be true.\n\n  \"use strict\";\n\n  if (!feature) {\n    console.log(\"[warning] Invalid (null) feature\");\n    return;\n  }\n\n  if (feature.gcs() === destGcs) {\n    return;\n  }\n\n  if (!(feature instanceof geo.pointFeature ||\n        feature instanceof geo.lineFeature)) {\n    throw \"Supports only point or line feature\";\n  }\n\n  var noOfComponents = null,\n      pointOffset = 0,\n      count = null,\n      inPos = null,\n      outPos = null,\n      srcGcs = feature.gcs(),\n      i,\n      yCoord;\n\n  inplace = !!inplace;\n  if (feature instanceof geo.pointFeature ||\n      feature instanceof geo.lineFeature) {\n\n    ///  If source GCS is not in 4326, transform it first into 4326\n    /// before we transform it for OSM.\n    if (srcGcs !== \"EPSG:4326\") {\n      geo.transform.transformFeature(\"EPSG:4326\", feature, true);\n    }\n\n    inPos = feature.positions();\n    count = inPos.length;\n\n    if (!(inPos instanceof Array)) {\n      throw \"Supports Array of 2D and 3D points\";\n    }\n\n    if (inPos.length > 0 && inPos[0] instanceof geo.latlng) {\n      noOfComponents = 2;\n      pointOffset = 1;\n    } else {\n      noOfComponents = (count % 2 === 0 ? 2 :\n                       (count % 3 === 0 ? 3 : null));\n      pointOffset = noOfComponents;\n    }\n\n    if (noOfComponents !== 2 && noOfComponents !== 3) {\n      throw \"Transform points require points in 2D or 3D\";\n    }\n\n    if (inplace) {\n      outPos = inPos;\n    } else {\n      outPos = inPos.slice(0);\n    }\n\n    for (i = 0; i < count; i += pointOffset) {\n\n      /// Y goes from 0 (top edge is 85.0511 °N) to 2zoom − 1\n      /// (bottom edge is 85.0511 °S) in a Mercator projection.\n      if (inPos[i] instanceof geo.latlng) {\n        yCoord = inPos[i].lat();\n      } else {\n        yCoord = inPos[i + 1];\n      }\n\n      if (yCoord > 85.0511) {\n        yCoord = 85.0511;\n      }\n      if (yCoord < -85.0511) {\n        yCoord = -85.0511;\n      }\n      if (inPos[i] instanceof geo.latlng) {\n        outPos[i] = geo.latlng(geo.mercator.lat2y(yCoord), outPos[i].lng());\n      } else {\n        outPos[i + 1] = geo.mercator.lat2y(yCoord);\n      }\n    }\n\n    if (inplace) {\n      feature.positions(outPos);\n      feature.gcs(destGcs);\n    }\n    return outPos;\n  }\n\n  return null;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Transform a feature to destination GCS\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.transform.transformFeature = function (destGcs, feature, inplace) {\n  \"use strict\";\n\n  if (!feature) {\n    throw \"Invalid (null) feature\";\n  }\n\n  if (!(feature instanceof geo.pointFeature ||\n        feature instanceof geo.lineFeature)) {\n    throw \"Supports only point or line feature\";\n  }\n\n  if (feature.gcs() === destGcs) {\n    return feature.positions();\n  }\n\n  if (destGcs === \"EPSG:3857\") {\n    return geo.transform.osmTransformFeature(destGcs, feature, inplace);\n  }\n\n  var noOfComponents = null,\n      pointOffset = 0,\n      count = null,\n      inPos = null,\n      outPos = null,\n      projPoint = null,\n      srcGcs = feature.gcs(),\n      i,\n      projSrcGcs = new proj4.Proj(srcGcs),\n      projDestGcs = new proj4.Proj(destGcs);\n\n  inplace = !!inplace;\n  if (feature instanceof geo.pointFeature ||\n      feature instanceof geo.lineFeature) {\n    inPos = feature.positions();\n    count = inPos.length;\n\n    if (!(inPos instanceof Array)) {\n      throw \"Supports Array of 2D and 3D points\";\n    }\n\n    if (inPos.length > 0 && inPos[0] instanceof geo.latlng) {\n      noOfComponents = 2;\n      pointOffset = 1;\n    } else {\n      noOfComponents = (count % 2 === 0 ? 2 :\n                       (count % 3 === 0 ? 3 : null));\n      pointOffset = noOfComponents;\n    }\n\n    if (noOfComponents !== 2 && noOfComponents !== 3) {\n      throw \"Transform points require points in 2D or 3D\";\n    }\n\n    if (inplace) {\n      outPos = inPos;\n    } else {\n      outPos = [];\n      outPos.length = inPos.length;\n    }\n\n    for (i = 0; i < count; i += pointOffset) {\n      if (noOfComponents === 2) {\n        projPoint = new proj4.Point(inPos[i], inPos[i + 1], 0.0);\n      } else {\n        projPoint = new proj4.Point(inPos[i], inPos[i + 1], inPos[i + 2]);\n      }\n\n      proj4.transform(projSrcGcs, projDestGcs, projPoint);\n\n      if (noOfComponents === 2) {\n        outPos[i] =  projPoint.x;\n        outPos[i + 1] = projPoint.y;\n      } else {\n        outPos[i] = projPoint.x;\n        outPos[i + 1] = projPoint.y;\n        outPos[i + 2] = projPoint.z;\n      }\n    }\n\n    if (inplace) {\n      feature.positions(outPos);\n      feature.gcs(destGcs);\n    }\n\n    return outPos;\n  }\n\n  return null;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Transform geometric data of a layer from source projection to destination\n * projection.\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.transform.transformLayer = function (destGcs, layer, baseLayer) {\n  \"use strict\";\n\n  var features, count, i;\n\n  if (!layer) {\n    throw \"Requires valid layer for tranformation\";\n  }\n\n  if (!baseLayer) {\n    throw \"Requires baseLayer used by the map\";\n  }\n\n  if (layer === baseLayer) {\n    return;\n  }\n\n  if (layer instanceof geo.featureLayer) {\n    features = layer.features();\n    count = features.length;\n    i = 0;\n\n    for (i = 0; i < count; i += 1) {\n      if (destGcs === \"EPSG:3857\" && baseLayer instanceof geo.osmLayer) {\n        geo.transform.osmTransformFeature(\n          destGcs, features[i], true);\n      } else {\n        geo.transform.transformFeature(\n          destGcs, features[i], true);\n      }\n    }\n\n    layer.gcs(destGcs);\n  } else {\n    throw \"Only feature layer transformation is supported\";\n  }\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Transform position coordinates from source projection to destination\n * projection.\n *\n * @param {string} srcGcs GCS of the coordinates\n * @param {string} destGcs Desired GCS of the transformed coordinates\n * @param {object} coordinates\n * @return {geo.latlng|geo.latlng[]} Transformed coordinates\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.transform.transformCoordinates = function (srcGcs, destGcs, coordinates,\n                                               numberOfComponents) {\n  \"use strict\";\n\n  var i, count, offset, xCoord, yCoord, zCoord, xAcc,\n      yAcc, zAcc, writer, output, projPoint,\n      projSrcGcs = new proj4.Proj(srcGcs),\n      projDestGcs = new proj4.Proj(destGcs);\n\n  /// Default Z accessor\n  zAcc = function () {\n    return 0.0;\n  };\n\n  if (destGcs === srcGcs) {\n    return coordinates;\n  }\n\n  /// TODO: Can we check for EPSG code?\n  if (!destGcs || !srcGcs) {\n    throw \"Invalid source or destination GCS\";\n  }\n\n  /// Helper methods\n  function handleLatLngCoordinates() {\n    if (coordinates[0] && coordinates[0] instanceof geo.latlng) {\n      xAcc = function (index) {\n        return coordinates[index].x();\n      };\n      yAcc = function (index) {\n        return coordinates[index].y();\n      };\n      writer = function (index, x, y) {\n        output[index] = geo.latlng(y, x);\n      };\n    } else {\n      xAcc = function () {\n        return coordinates.x();\n      };\n      yAcc = function () {\n        return coordinates.y();\n      };\n      writer = function (index, x, y) {\n        output = geo.latlng(y, x);\n      };\n    }\n  }\n\n  /// Helper methods\n  function handleArrayCoordinates() {\n    if (coordinates[0] instanceof Array) {\n      if (coordinates[0].length === 2) {\n        xAcc = function (index) {\n          return coordinates[index][0];\n        };\n        yAcc = function (index) {\n          return coordinates[index][1];\n        };\n        writer = function (index, x, y) {\n          output[index] = [x, y];\n        };\n      } else if (coordinates[0].length === 3) {\n        xAcc = function (index) {\n          return coordinates[index][0];\n        };\n        yAcc = function (index) {\n          return coordinates[index][1];\n        };\n        zAcc = function (index) {\n          return coordinates[index][2];\n        };\n        writer = function (index, x, y, z) {\n          output[index] = [x, y, z];\n        };\n      } else {\n        throw \"Invalid coordinates. Requires two or three components per array\";\n      }\n    } else {\n      if (coordinates.length === 2) {\n        offset = 2;\n\n        xAcc = function (index) {\n          return coordinates[index * offset];\n        };\n        yAcc = function (index) {\n          return coordinates[index * offset + 1];\n        };\n        writer = function (index, x, y) {\n          output[index] = x;\n          output[index + 1] = y;\n        };\n      } else if (coordinates.length === 3) {\n        offset = 3;\n\n        xAcc = function (index) {\n          return coordinates[index * offset];\n        };\n        yAcc = function (index) {\n          return coordinates[index * offset + 1];\n        };\n        zAcc = function (index) {\n          return coordinates[index * offset + 2];\n        };\n        writer = function (index, x, y, z) {\n          output[index] = x;\n          output[index + 1] = y;\n          output[index + 2] = z;\n        };\n      } else if (numberOfComponents) {\n        if (numberOfComponents === 2 || numberOfComponents || 3) {\n          offset = numberOfComponents;\n\n          xAcc = function (index) {\n            return coordinates[index];\n          };\n          yAcc = function (index) {\n            return coordinates[index + 1];\n          };\n          if (numberOfComponents === 2) {\n            writer = function (index, x, y) {\n              output[index] = x;\n              output[index + 1] = y;\n            };\n          } else {\n            zAcc = function (index) {\n              return coordinates[index + 2];\n            };\n            writer = function (index, x, y, z) {\n              output[index] = x;\n              output[index + 1] = y;\n              output[index + 2] = z;\n            };\n          }\n        } else {\n          throw \"Number of components should be two or three\";\n        }\n      } else {\n        throw \"Invalid coordinates\";\n      }\n    }\n  }\n\n  /// Helper methods\n  function handleObjectCoordinates() {\n    if (coordinates[0] &&\n        \"x\" in coordinates[0] &&\n        \"y\" in coordinates[0]) {\n      xAcc = function (index) {\n        return coordinates[index].x;\n      };\n      yAcc = function (index) {\n        return coordinates[index].y;\n      };\n\n      if (\"z\" in coordinates[0]) {\n        zAcc = function (index) {\n          return coordinates[index].z;\n        };\n        writer = function (index, x, y, z) {\n          output[i] = {x: x, y: y, z: z};\n        };\n      } else {\n        writer = function (index, x, y) {\n          output[index] = {x: x, y: y};\n        };\n      }\n    } else if (coordinates &&\n        \"x\" in coordinates && \"y\" in coordinates) {\n      xAcc = function () {\n        return coordinates.x;\n      };\n      yAcc = function () {\n        return coordinates.y;\n      };\n\n      if (\"z\" in coordinates) {\n        zAcc = function () {\n          return coordinates.z;\n        };\n        writer = function (index, x, y, z) {\n          output = {x: x, y: y, z: z};\n        };\n      } else {\n        writer = function (index, x, y) {\n          output = {x: x, y: y};\n        };\n      }\n    } else {\n      throw \"Invalid coordinates\";\n    }\n  }\n\n  if (coordinates instanceof Array) {\n    output = [];\n    output.length = coordinates.length;\n    count = coordinates.length;\n\n    if (coordinates[0] instanceof Array ||\n        coordinates[0] instanceof geo.latlng ||\n        coordinates[0] instanceof Object) {\n      offset = 1;\n\n      if (coordinates[0] instanceof Array) {\n        handleArrayCoordinates();\n      } else if (coordinates[0] instanceof geo.latlng) {\n        handleLatLngCoordinates();\n      } else if (coordinates[0] instanceof Object) {\n        handleObjectCoordinates();\n      }\n    } else {\n      handleArrayCoordinates();\n    }\n  } else if (coordinates && coordinates instanceof Object) {\n    count = 1;\n    offset = 1;\n    if (coordinates instanceof geo.latlng) {\n      handleLatLngCoordinates();\n    } else if (coordinates && \"x\" in coordinates && \"y\" in coordinates) {\n      handleObjectCoordinates();\n    } else {\n      throw \"Coordinates are not valid\";\n    }\n  }\n\n  if (destGcs === \"EPSG:3857\" && srcGcs === \"EPSG:4326\") {\n    for (i = 0; i < count; i += offset) {\n      /// Y goes from 0 (top edge is 85.0511 °N) to 2zoom − 1\n      /// (bottom edge is 85.0511 °S) in a Mercator projection.\n      xCoord = xAcc(i);\n      yCoord = yAcc(i);\n      zCoord = zAcc(i);\n\n      if (yCoord > 85.0511) {\n        yCoord = 85.0511;\n      }\n      if (yCoord < -85.0511) {\n        yCoord = -85.0511;\n      }\n\n      writer(i, xCoord, geo.mercator.lat2y(yCoord), zCoord);\n    }\n\n    return output;\n  } else {\n    for (i = 0; i < count; i += offset) {\n      projPoint = new proj4.Point(xAcc(i), yAcc(i), zAcc(i));\n      proj4.transform(projSrcGcs, projDestGcs, projPoint);\n      writer(i, projPoint.x, projPoint.y, projPoint.z);\n      return output;\n    }\n  }\n};\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class renderer\n *\n * @class\n * @extends geo.object\n * @returns {geo.renderer}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.renderer = function (arg) {\n  \"use strict\";\n\n  if (!(this instanceof geo.renderer)) {\n    return new geo.renderer(arg);\n  }\n  geo.object.call(this);\n\n  arg = arg || {};\n  var m_this = this,\n      m_layer = arg.layer === undefined ? null : arg.layer,\n      m_canvas = arg.canvas === undefined ? null : arg.canvas,\n      m_initialized = false;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get layer of the renderer\n   *\n   * @returns {*}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.layer = function () {\n    return m_layer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get canvas for the renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.canvas = function (val) {\n    if (val === undefined) {\n      return m_canvas;\n    } else {\n      m_canvas = val;\n      m_this.modified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get map that this renderer belongs to\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.map = function () {\n    if (m_layer) {\n      return m_layer.map();\n    } else {\n      return null;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get base layer that belongs to this renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.baseLayer = function () {\n    if (m_this.map()) {\n      return m_this.map().baseLayer();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set if renderer has been initialized\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.initialized = function (val) {\n    if (val === undefined) {\n      return m_initialized;\n    } else {\n      m_initialized = val;\n      return m_this;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get render API used by the renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.api = function () {\n    throw \"Should be implemented by derivied classes\";\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Reset to default\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.reset = function () {\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Convert array of points from world to GCS coordinate space\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.worldToGcs = function () {\n    throw \"Should be implemented by derivied classes\";\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Convert array of points from display to GCS space\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.displayToGcs = function () {\n    throw \"Should be implemented by derivied classes\";\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Convert array of points from display to GCS space\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.gcsToDisplay = function () {\n    throw \"Should be implemented by derivied classes\";\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Convert array of points from world to display space\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.worldToDisplay = function () {\n    throw \"Should be implemented by derivied classes\";\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Convert array of points from display to world space\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.displayToWorld = function () {\n    throw \"Should be implemented by derivied classes\";\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get mouse coodinates related to canvas\n   *\n   * @param {object} event\n   * @returns {object}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.relMouseCoords = function (event) {\n    var totalOffsetX = 0,\n        totalOffsetY = 0,\n        canvasX = 0,\n        canvasY = 0,\n        currentElement = m_this.canvas();\n\n    do {\n      totalOffsetX += currentElement.offsetLeft - currentElement.scrollLeft;\n      totalOffsetY += currentElement.offsetTop - currentElement.scrollTop;\n      currentElement = currentElement.offsetParent;\n    } while (currentElement);\n\n    canvasX = event.pageX - totalOffsetX;\n    canvasY = event.pageY - totalOffsetY;\n\n    return {\n      x: canvasX,\n      y: canvasY\n    };\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function () {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle resize event\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._resize = function () {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Render\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._render = function () {\n  };\n\n  return this;\n};\n\ninherit(geo.renderer, geo.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of osmLayer\n *\n * @class\n * @extends geo.featureLayer\n *\n * @param {Object} arg - arg can contain following keys: baseUrl,\n *        imageFormat (such as png or jpeg), and displayLast\n *        (to decide whether or not render tiles from last zoom level).\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.osmLayer = function (arg) {\n  \"use strict\";\n\n  if (!(this instanceof geo.osmLayer)) {\n    return new geo.osmLayer(arg);\n  }\n  geo.featureLayer.call(this, arg);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Private member variables\n   *\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n    s_exit = this._exit,\n    m_tiles = {},\n    m_hiddenBinNumber = -1,\n    m_lastVisibleBinNumber = -1,\n    m_visibleBinNumber = 1000,\n    m_pendingNewTiles = [],\n    m_pendingInactiveTiles = [],\n    m_numberOfCachedTiles = 0,\n    m_tileCacheSize = 100,\n    m_baseUrl = \"http://tile.openstreetmap.org/\",\n    m_imageFormat = \"png\",\n    m_updateTimerId = null,\n    m_lastVisibleZoom = null,\n    m_visibleTilesRange = {},\n    s_init = this._init,\n    m_pendingNewTilesStat = {},\n    s_update = this._update,\n    m_updateDefer = null,\n    m_zoom = null,\n    m_tileUrl;\n\n  if (arg && arg.baseUrl !== undefined) {\n    m_baseUrl = arg.baseUrl;\n  }\n\n  if (m_baseUrl.charAt(m_baseUrl.length - 1) !== \"/\") {\n    m_baseUrl += \"/\";\n  }\n\n  if (arg && arg.imageFormat !== undefined) {\n    m_imageFormat = arg.imageFormat;\n  }\n\n  if (arg && arg.displayLast !== undefined && arg.displayLast) {\n    m_lastVisibleBinNumber = 999;\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Returns a url string containing the requested tile.  This default\n   * version uses the open street map standard, but the user can\n   * change the default behavior.\n   *\n   * @param {integer} zoom The zoom level\n   * @param {integer} x The tile from the xth row\n   * @param {integer} y The tile from the yth column\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  m_tileUrl = function (zoom, x, y) {\n    return m_baseUrl + zoom + \"/\" + x +\n      \"/\" + y + \".\" + m_imageFormat;\n  };\n\n  if (arg && arg.tileUrl !== undefined) {\n    m_tileUrl = arg.tileUrl;\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Check if a tile is visible in current view\n   *\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function isTileVisible(tile) {\n    if (tile.zoom in m_visibleTilesRange) {\n      if (tile.index_x >= m_visibleTilesRange[tile.zoom].startX &&\n          tile.index_x <= m_visibleTilesRange[tile.zoom].endX &&\n          tile.index_y >= m_visibleTilesRange[tile.zoom].startY &&\n          tile.index_y <= m_visibleTilesRange[tile.zoom].endY) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Draw new tiles and remove the old ones\n   *\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function drawTiles() {\n    m_this._removeTiles();\n    m_this.draw();\n    delete m_pendingNewTilesStat[m_updateTimerId];\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set tile cache size\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.tileCacheSize = function (val) {\n    if (val === undefined) {\n      return m_tileCacheSize;\n    }\n    m_tileCacheSize = val;\n    m_this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set the tile url formatting function.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.tileUrl = function (val) {\n    if (val === undefined) {\n      return m_tileUrl;\n    }\n    m_tileUrl = val;\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Transform a point or array of points in latitude-longitude-altitude\n   * space to local space of the layer\n   *\n   * @param {*} input\n   * Input can be of following types:\n   *\n   *   1. geo.latlng\n   *   2. [geo.latlng]\n   *   3. [x1,y1, x2, y2]\n   *   4. [[x,y]]\n   *   5. {x:val: y:val, z:val},\n   *   6. [{x:val: y:val}]\n   *\n   * returns geo.latlng, [geo.latlng], or {x:lon, y:lat}, [{x:lon, y:lat}]\n   * [x1,y1, x2, y2], [[x,y]]\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.toLocal = function (input) {\n    var i, output, delta;\n\n    /// Now handle different data types\n    if (input instanceof Array && input.length > 0) {\n      output = [];\n      output.length = input.length;\n\n      /// Input is array of geo.latlng\n      if (input[0] instanceof geo.latlng) {\n        for (i = 0; i < input.length; i += 1) {\n          output[i] = geo.latlng(input[i]);\n          output[i].lat(geo.mercator.lat2y(output[i].lat()));\n        }\n      } else if (input[0] instanceof Array) {\n        delta = input % 3 === 0 ? 3 : 2;\n\n        if (delta === 2) {\n          for (i = 0; i < input.length; i += delta) {\n            output[i] = input[i];\n            output[i + 1] = geo.mercator.lat2y(input[i + 1]);\n          }\n        } else {\n          for (i = 0; i < input.length; i += delta) {\n            output[i] = input[i];\n            output[i + 1] = geo.mercator.lat2y(input[i + 1]);\n            output[i + 2] = input[i + 2];\n          }\n        }\n      } else if (input[0] instanceof Object &&\n                 \"x\" in input[0] && \"y\" in input[0] && \"z\" in input[0]) {\n        /// Input is array of object\n        output[i] = { x: input[i].x, y: geo.mercator.lat2y(input[i].y),\n                      z: input[i].z };\n      } else if (input[0] instanceof Object &&\n                 \"x\" in input[0] && \"y\" in input[0] && \"z\" in input[0]) {\n        /// Input is array of object\n        output[i] = { x: input[i].x, y: geo.mercator.lat2y(input[i].y)};\n      } else if (input.length >= 2) {\n        output = input.slice(0);\n        output[1] = geo.mercator.lat2y(input[1]);\n      }\n    } else if (input instanceof geo.latlng) {\n      output = {};\n      output.x = input.x();\n      output.y = geo.mercator.lat2y(input.y());\n    } else {\n      output = {};\n      output.x = input.x;\n      output.y = geo.mercator.lat2y(input.y);\n    }\n\n    return output;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Transform a point or array of points in local space to\n   * latitude-longitude space\n   *\n   * @input Input An object, array, of array of objects/array representing 2D\n   * point in space. [x,y], [[x,y]], [{x:val: y:val}], {x:val, y:val}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.fromLocal = function (input) {\n    var i, output;\n\n    if (input instanceof Array && input.length > 0) {\n      output = [];\n      output.length = input.length;\n\n      if (input[0] instanceof Object) {\n        for (i = 0; i < input.length; i += 1) {\n          output[i] = {};\n          output[i].x = input[i].x;\n          output[i].y = geo.mercator.y2lat(input[i].y);\n        }\n      } else if (input[0] instanceof Array) {\n        for (i = 0; i < input.length; i += 1) {\n          output[i] = input[i];\n          output[i][1] = geo.mercator.y2lat(input[i][1]);\n        }\n      } else {\n        for (i = 0; i < input.length; i += 1) {\n          output[i] = input[i];\n          output[i + 1] = geo.mercator.y2lat(input[i + 1]);\n        }\n      }\n    } else {\n      output = {};\n      output.x = input.x;\n      output.y = geo.mercator.y2lat(input.y);\n    }\n\n    return output;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Check if a tile exists in the cache\n   *\n   * @param {number} zoom The zoom value for the map [1-17]\n   * @param {number} x X axis tile index\n   * @param {number} y Y axis tile index\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._hasTile = function (zoom, x, y) {\n    if (!m_tiles[zoom]) {\n      return false;\n    }\n    if (!m_tiles[zoom][x]) {\n      return false;\n    }\n    if (!m_tiles[zoom][x][y]) {\n      return false;\n    }\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create a new tile\n   * @param {number} x X axis tile index\n   * @param {number} y Y axis tile index\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._addTile = function (request, zoom, x, y) {\n    if (!m_tiles[zoom]) {\n      m_tiles[zoom] = {};\n    }\n    if (!m_tiles[zoom][x]) {\n      m_tiles[zoom][x] = {};\n    }\n    if (m_tiles[zoom][x][y]) {\n      return;\n    }\n\n    /// Compute corner points\n    var noOfTilesX = Math.max(1, Math.pow(2, zoom)),\n        noOfTilesY = Math.max(1, Math.pow(2, zoom)),\n        /// Convert into mercator\n        totalLatDegrees = 360.0,\n        lonPerTile = 360.0 / noOfTilesX,\n        latPerTile = totalLatDegrees / noOfTilesY,\n        llx = -180.0 + x * lonPerTile,\n        lly = -totalLatDegrees * 0.5 + y * latPerTile,\n        urx = -180.0 + (x + 1) * lonPerTile,\n        ury = -totalLatDegrees * 0.5 + (y + 1) * latPerTile,\n        tile = new Image();\n\n    tile.LOADING = true;\n    tile.LOADED = false;\n    tile.REMOVED = false;\n    tile.REMOVING = false;\n    tile.INVALID = false;\n\n    tile.crossOrigin = \"anonymous\";\n    tile.zoom = zoom;\n    tile.index_x = x;\n    tile.index_y = y;\n    tile.llx = llx;\n    tile.lly = lly;\n    tile.urx = urx;\n    tile.ury = ury;\n    tile.lastused = new Date();\n\n    tile.src = m_tileUrl(zoom, x, Math.pow(2, zoom) - 1 - y);\n\n    m_tiles[zoom][x][y] = tile;\n    m_pendingNewTiles.push(tile);\n    m_numberOfCachedTiles += 1;\n    return tile;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Clear tiles that are no longer required\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  /* jshint -W089 */\n  this._removeTiles = function () {\n    var i, x, y, tile, zoom, currZoom = m_zoom,\n        lastZoom = m_lastVisibleZoom;\n\n    if (!m_tiles) {\n      return m_this;\n    }\n\n    for (zoom in m_tiles) {\n      for (x in m_tiles[zoom]) {\n        for (y in m_tiles[zoom][x]) {\n          tile = m_tiles[zoom][x][y];\n          if (tile) {\n            tile.REMOVING = true;\n            m_pendingInactiveTiles.push(tile);\n          }\n        }\n      }\n    }\n\n    /// First remove the tiles if we have cached more than max cached limit\n    m_pendingInactiveTiles.sort(function (a, b) {\n      return a.lastused - b.lastused;\n    });\n\n    i = 0;\n\n    /// Get rid of tiles if we have reached our threshold. However,\n    /// If the tile is required for current zoom, then do nothing.\n    /// Also do not delete the tile if it is from the previous zoom\n    while (m_numberOfCachedTiles > m_tileCacheSize &&\n      i < m_pendingInactiveTiles.length) {\n      tile = m_pendingInactiveTiles[i];\n\n      if (isTileVisible(tile)) {\n        i += 1;\n      } else {\n        m_this.deleteFeature(tile.feature);\n        delete m_tiles[tile.zoom][tile.index_x][tile.index_y];\n        m_pendingInactiveTiles.splice(i, 1);\n        m_numberOfCachedTiles -= 1;\n      }\n    }\n\n    for (i = 0; i < m_pendingInactiveTiles.length; i += 1) {\n      tile = m_pendingInactiveTiles[i];\n      tile.REMOVING = false;\n      tile.REMOVED = false;\n      if (tile.zoom !== currZoom && tile.zoom === lastZoom) {\n        tile.feature.bin(m_lastVisibleBinNumber);\n      } else if (tile.zoom !== currZoom) {\n        tile.feature.bin(m_hiddenBinNumber);\n      } else {\n        tile.lastused = new Date();\n        tile.feature.bin(m_visibleBinNumber);\n      }\n      tile.feature._update();\n    }\n    m_pendingInactiveTiles = [];\n\n    return m_this;\n  };\n  /* jshint +W089 */\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create / delete tiles as necessary\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._addTiles = function (request) {\n    var feature, ren = m_this.renderer(),\n        /// First get corner points\n        /// In display coordinates the origin is on top left corner (0, 0)\n        llx = 0.0, lly = m_this.height(), urx = m_this.width(), ury = 0.0,\n        temp = null, tile = null, tile1x = null, tile1y = null, tile2x = null,\n        tile2y = null, invJ = null, i = 0, j = 0, lastStartX, lastStartY,\n        lastEndX, lastEndY, currStartX, currStartY, currEndX, currEndY,\n        worldPt1 = ren.displayToWorld([llx, lly]),\n        worldPt2 = ren.displayToWorld([urx, ury]),\n        worldDeltaY = null, displayDeltaY = null,\n        worldDelta = null, displayDelta = null,\n        noOfTilesRequired = null, worldDeltaPerTile = null,\n        minDistWorldDeltaPerTile = null, distWorldDeltaPerTile;\n\n    worldPt1[0] = Math.max(worldPt1[0], -180.0);\n    worldPt1[0] = Math.min(worldPt1[0], 180.0);\n    worldPt1[1] = Math.max(worldPt1[1], -180.0);\n    worldPt1[1] = Math.min(worldPt1[1], 180.0);\n\n    worldPt2[0] = Math.max(worldPt2[0], -180.0);\n    worldPt2[0] = Math.min(worldPt2[0], 180.0);\n    worldPt2[1] = Math.max(worldPt2[1], -180.0);\n    worldPt2[1] = Math.min(worldPt2[1], 180.0);\n\n    /// Compute tile zoom\n    worldDelta = Math.abs(worldPt2[0] - worldPt1[0]);\n    worldDeltaY = Math.abs(worldPt2[1] - worldPt1[1]);\n\n    displayDelta = urx - llx;\n    displayDeltaY = lly - ury;\n\n    /// Reuse variables\n    if (displayDeltaY > displayDelta) {\n      displayDelta = displayDeltaY;\n      worldDelta = worldDeltaY;\n    }\n\n    noOfTilesRequired = Math.round(displayDelta / 256.0);\n    worldDeltaPerTile = worldDelta / noOfTilesRequired;\n\n    /// Minimize per pixel distortion\n    minDistWorldDeltaPerTile = Number.POSITIVE_INFINITY;\n    for (i = 20; i >= 2; i = i - 1) {\n      distWorldDeltaPerTile = Math.abs(360.0 / Math.pow(2, i) - worldDeltaPerTile);\n      if (distWorldDeltaPerTile < minDistWorldDeltaPerTile) {\n        minDistWorldDeltaPerTile = distWorldDeltaPerTile;\n        m_zoom = i;\n      }\n    }\n\n    /// Compute tilex and tiley\n    tile1x = geo.mercator.long2tilex(worldPt1[0], m_zoom);\n    tile1y = geo.mercator.lat2tiley(worldPt1[1], m_zoom);\n\n    tile2x = geo.mercator.long2tilex(worldPt2[0], m_zoom);\n    tile2y = geo.mercator.lat2tiley(worldPt2[1], m_zoom);\n\n    /// Clamp tilex and tiley\n    tile1x = Math.max(tile1x, 0);\n    tile1x = Math.min(Math.pow(2, m_zoom) - 1, tile1x);\n    tile1y = Math.max(tile1y, 0);\n    tile1y = Math.min(Math.pow(2, m_zoom) - 1, tile1y);\n\n    tile2x = Math.max(tile2x, 0);\n    tile2x = Math.min(Math.pow(2, m_zoom) - 1, tile2x);\n    tile2y = Math.max(tile2y, 0);\n    tile2y = Math.min(Math.pow(2, m_zoom) - 1, tile2y);\n\n    /// Check and update variables appropriately if view\n    /// direction is flipped. This should not happen but\n    /// just in case.\n    if (tile1x > tile2x) {\n      temp = tile1x;\n      tile1x = tile2x;\n      tile2x = temp;\n    }\n    if (tile2y > tile1y) {\n      temp = tile1y;\n      tile1y = tile2y;\n      tile2y = temp;\n    }\n\n    /// Compute current tile indices\n    currStartX = tile1x;\n    currEndX = tile2x;\n    currStartY = (Math.pow(2, m_zoom) - 1 - tile1y);\n    currEndY = (Math.pow(2, m_zoom) - 1 - tile2y);\n    if (currEndY < currStartY) {\n      temp = currStartY;\n      currStartY = currEndY;\n      currEndY = temp;\n    }\n\n    /// Compute last tile indices\n    lastStartX = geo.mercator.long2tilex(worldPt1[0],\n                   m_lastVisibleZoom);\n    lastStartY = geo.mercator.lat2tiley(worldPt1[1],\n                   m_lastVisibleZoom);\n    lastEndX = geo.mercator.long2tilex(worldPt2[0],\n                   m_lastVisibleZoom);\n    lastEndY = geo.mercator.lat2tiley(worldPt2[1],\n                   m_lastVisibleZoom);\n    lastStartY = Math.pow(2, m_lastVisibleZoom) - 1 - lastStartY;\n    lastEndY   = Math.pow(2, m_lastVisibleZoom) - 1 - lastEndY;\n\n    if (lastEndY < lastStartY) {\n      temp = lastStartY;\n      lastStartY = lastEndY;\n      lastEndY = temp;\n    }\n\n    m_visibleTilesRange = {};\n    m_visibleTilesRange[m_zoom] = { startX: currStartX, endX: currEndX,\n                                    startY: currStartY, endY: currEndY };\n\n    m_visibleTilesRange[m_lastVisibleZoom] =\n                                { startX: lastStartX, endX: lastEndX,\n                                  startY: lastStartY, endY: lastEndY };\n    m_pendingNewTilesStat[m_updateTimerId] = { total:\n      ((tile2x - tile1x + 1) * (tile1y - tile2y + 1)), count: 0 };\n\n    for (i = tile1x; i <= tile2x; i += 1) {\n      for (j = tile2y; j <= tile1y; j += 1) {\n        invJ = (Math.pow(2, m_zoom) - 1 - j);\n        if (!m_this._hasTile(m_zoom, i, invJ)) {\n          tile = m_this._addTile(request, m_zoom, i, invJ);\n        } else {\n          tile = m_tiles[m_zoom][i][invJ];\n          tile.feature.bin(m_visibleBinNumber);\n          if (tile.LOADED && m_updateTimerId in m_pendingNewTilesStat) {\n            m_pendingNewTilesStat[m_updateTimerId].count += 1;\n          }\n          tile.lastused = new Date();\n          tile.feature._update();\n        }\n        tile.updateTimerId = m_updateTimerId;\n      }\n    }\n\n    // define a function here to set tile properties after it is loaded\n    function tileOnLoad(tile) {\n      var defer = $.Deferred();\n      m_this.addDeferred(defer);\n\n      return function () {\n        if (tile.INVALID) {\n          return;\n        }\n        tile.LOADING = false;\n        tile.LOADED = true;\n        if ((tile.REMOVING || tile.REMOVED) &&\n          tile.feature &&\n          tile.zoom !== m_zoom) {\n          tile.feature.bin(m_hiddenBinNumber);\n          tile.REMOVING = false;\n          tile.REMOVED = true;\n        } else {\n          tile.REMOVED = false;\n          tile.lastused = new Date();\n          tile.feature.bin(m_visibleBinNumber);\n        }\n\n        if (tile.updateTimerId === m_updateTimerId &&\n            m_updateTimerId in m_pendingNewTilesStat) {\n          tile.feature.bin(m_visibleBinNumber);\n          m_pendingNewTilesStat[m_updateTimerId].count += 1;\n        } else {\n          tile.REMOVED = true;\n          tile.feature.bin(m_hiddenBinNumber);\n        }\n        tile.feature._update();\n\n        if (m_updateTimerId in m_pendingNewTilesStat &&\n            m_pendingNewTilesStat[m_updateTimerId].count >=\n            m_pendingNewTilesStat[m_updateTimerId].total) {\n          drawTiles();\n        }\n        defer.resolve();\n      };\n    }\n\n    /// And now finally add them\n    for (i = 0; i < m_pendingNewTiles.length; i += 1) {\n      tile = m_pendingNewTiles[i];\n      feature = m_this.createFeature(\"plane\", {drawOnAsyncResourceLoad: false,\n                    onload: tileOnLoad(tile)})\n                  .origin([tile.llx, tile.lly])\n                  .upperLeft([tile.llx, tile.ury])\n                  .lowerRight([tile.urx, tile.lly])\n                  .gcs(\"EPSG:3857\")\n                  .style(\"image\", tile);\n      tile.feature = feature;\n      tile.feature._update();\n    }\n    m_pendingNewTiles = [];\n\n    if (m_updateTimerId in m_pendingNewTilesStat &&\n        m_pendingNewTilesStat[m_updateTimerId].count >=\n        m_pendingNewTilesStat[m_updateTimerId].total) {\n      drawTiles();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update OSM tiles as needed\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function updateOSMTiles(request) {\n    if (request === undefined) {\n      request = {};\n    }\n\n    if (!m_zoom) {\n      m_zoom = m_this.map().zoom();\n    }\n\n    if (!m_lastVisibleZoom) {\n      m_lastVisibleZoom = m_zoom;\n    }\n\n    /// Add tiles that are currently visible\n    m_this._addTiles(request);\n\n    /// Update the zoom\n    if (m_lastVisibleZoom !== m_zoom) {\n      m_lastVisibleZoom = m_zoom;\n    }\n\n    m_this.updateTime().modified();\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create / delete tiles as necessary\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._updateTiles = function (request) {\n    var defer = $.Deferred();\n    m_this.addDeferred(defer);\n\n    if (m_updateTimerId !== null) {\n      clearTimeout(m_updateTimerId);\n      m_updateDefer.resolve();\n      m_updateDefer = defer;\n      if (m_updateTimerId in m_pendingNewTilesStat) {\n        delete m_pendingNewTilesStat[m_updateTimerId];\n      }\n      /// Set timeout for 60 ms. 60 ms seems to playing well\n      /// with the events. Also, 60ms corresponds to 15 FPS.\n      m_updateTimerId = setTimeout(function () {\n        updateOSMTiles(request);\n        m_updateDefer.resolve();\n      }, 100);\n    } else {\n      m_updateDefer = defer;\n      m_updateTimerId = setTimeout(function () {\n        updateOSMTiles(request);\n        m_updateDefer.resolve();\n      }, 0);\n    }\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   *\n   * Do not call parent _init method as its already been executed\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function () {\n    s_init.call(m_this);\n    m_this.gcs(\"EPSG:3857\");\n    m_this.map().zoomRange({\n      min: 0,\n      max: 18\n    });\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update layer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function (request) {\n    /// Update tiles (create new / delete old etc...)\n    m_this._updateTiles(request);\n\n    /// Now call base class update\n    s_update.call(m_this, request);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update baseUrl for map tiles.  Map all tiles as needing to be refreshed.\n   *\n   * @param baseUrl: the new baseUrl for the map.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  /* jshint -W089 */\n  this.updateBaseUrl = function (baseUrl) {\n    if (baseUrl.charAt(m_baseUrl.length - 1) !== \"/\") {\n      baseUrl += \"/\";\n    }\n    if (baseUrl !== m_baseUrl) {\n      m_baseUrl = baseUrl;\n\n      var tile, x, y, zoom;\n      for (zoom in m_tiles) {\n        for (x in m_tiles[zoom]) {\n          for (y in m_tiles[zoom][x]) {\n            tile = m_tiles[zoom][x][y];\n            tile.INVALID = true;\n            m_this.deleteFeature(tile.feature);\n          }\n        }\n      }\n      m_tiles = {};\n      m_pendingNewTiles = [];\n      m_pendingInactiveTiles = [];\n      m_numberOfCachedTiles = 0;\n      m_visibleTilesRange = {};\n      m_pendingNewTilesStat = {};\n\n      if (m_updateTimerId !== null) {\n        clearTimeout(m_updateTimerId);\n        m_updateTimerId = null;\n      }\n      this._update();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Exit\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    m_tiles = {};\n    m_pendingNewTiles = [];\n    m_pendingInactiveTiles = [];\n    m_numberOfCachedTiles = 0;\n    m_visibleTilesRange = {};\n    m_pendingNewTilesStat = {};\n    s_exit();\n  };\n\n  return this;\n};\n\ninherit(geo.osmLayer, geo.featureLayer);\n\ngeo.registerLayer(\"osm\", geo.osmLayer);\n","/**\n * @namespace\n */\ngeo.gl = {};\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class vglRenderer\n *\n * @class\n * @extends geo.renderer\n * @param canvas\n * @returns {geo.gl.renderer}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.gl.renderer = function (arg) {\n  'use strict';\n\n  if (!(this instanceof geo.gl.renderer)) {\n    return new geo.gl.renderer(arg);\n  }\n  geo.renderer.call(this, arg);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get context specific renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.contextRenderer = function () {\n    throw 'Should be implemented by derived classes';\n  };\n\n  return this;\n};\n\ninherit(geo.gl.renderer, geo.renderer);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of lineFeature\n *\n * @class\n * @extends geo.lineFeature\n * @returns {geo.gl.lineFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.gl.lineFeature = function (arg) {\n  'use strict';\n  if (!(this instanceof geo.gl.lineFeature)) {\n    return new geo.gl.lineFeature(arg);\n  }\n  arg = arg || {};\n  geo.lineFeature.call(this, arg);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      s_exit = this._exit,\n      m_actor = null,\n      m_mapper = null,\n      m_material = null,\n      m_pixelWidthUnif = null,\n      m_dynamicDraw = arg.dynamicDraw === undefined ? false : arg.dynamicDraw,\n      s_init = this._init,\n      s_update = this._update;\n\n  function createVertexShader() {\n      var vertexShaderSource = [\n        '#ifdef GL_ES',\n        '  precision highp float;',\n        '#endif',\n        'attribute vec3 pos;',\n        'attribute vec3 prev;',\n        'attribute vec3 next;',\n        'attribute float offset;',\n\n        'attribute vec3 strokeColor;',\n        'attribute float strokeOpacity;',\n        'attribute float strokeWidth;',\n\n        'uniform mat4 modelViewMatrix;',\n        'uniform mat4 projectionMatrix;',\n        'uniform float pixelWidth;',\n\n        'varying vec3 strokeColorVar;',\n        'varying float strokeWidthVar;',\n        'varying float strokeOpacityVar;',\n\n        'void main(void)',\n        '{',\n        /* If any vertex has been deliberately set to a negative opacity,\n         * skip doing computations on it. */\n        '  if (strokeOpacity < 0.0) {',\n        '    gl_Position = vec4(2, 2, 0, 1);',\n        '    return;',\n        '  }',\n        '  const float PI = 3.14159265358979323846264;',\n        '  vec4 worldPos = projectionMatrix * modelViewMatrix * vec4(pos.xyz, 1);',\n        '  if (worldPos.w != 0.0) {',\n        '    worldPos = worldPos/worldPos.w;',\n        '  }',\n        '  vec4 worldNext = projectionMatrix * modelViewMatrix * vec4(next.xyz, 1);',\n        '  if (worldNext.w != 0.0) {',\n        '    worldNext = worldNext/worldNext.w;',\n        '  }',\n        '  vec4 worldPrev = projectionMatrix* modelViewMatrix * vec4(prev.xyz, 1);',\n        '  if (worldPrev.w != 0.0) {',\n        '    worldPrev = worldPrev/worldPrev.w;',\n        '  }',\n        '  strokeColorVar = strokeColor;',\n        '  strokeWidthVar = strokeWidth;',\n        '  strokeOpacityVar = strokeOpacity;',\n        '  vec2 deltaNext = worldNext.xy - worldPos.xy;',\n        '  vec2 deltaPrev = worldPos.xy - worldPrev.xy;',\n        '  float angleNext = PI * 0.5;',\n        '  if (deltaNext.y < 0.0) { angleNext = -angleNext; } ',\n        '  if (deltaNext.x != 0.0) {',\n        '    angleNext = atan(deltaNext.y, deltaNext.x);',\n        '  }',\n        '  float anglePrev = PI * 0.5;',\n        '  if (deltaPrev.y < 0.0) { anglePrev = -anglePrev; } ',\n        '  if (deltaPrev.x != 0.0) {',\n        '    anglePrev = atan(deltaPrev.y, deltaPrev.x);',\n        '  }',\n        '  if (deltaPrev.xy == vec2(0.0, 0.0)) anglePrev = angleNext;',\n        '  if (deltaNext.xy == vec2(0.0, 0.0)) angleNext = anglePrev;',\n        '  float angle = (anglePrev + angleNext) / 2.0;',\n        '  float cosAngle = cos(anglePrev - angle);',\n        '  if (cosAngle < 0.1) { cosAngle = sign(cosAngle) * 1.0; angle = 0.0; }',\n        '  float distance = (offset * strokeWidth * pixelWidth) /',\n        '                    cosAngle;',\n        '  worldPos.x += distance * sin(angle);',\n        '  worldPos.y -= distance * cos(angle);',\n        '  gl_Position = worldPos;',\n        '}'\n      ].join('\\n'),\n      shader = new vgl.shader(gl.VERTEX_SHADER);\n      shader.setShaderSource(vertexShaderSource);\n      return shader;\n    }\n\n  function createFragmentShader() {\n    var fragmentShaderSource = [\n      '#ifdef GL_ES',\n      '  precision highp float;',\n      '#endif',\n      'varying vec3 strokeColorVar;',\n      'varying float strokeWidthVar;',\n      'varying float strokeOpacityVar;',\n      'void main () {',\n      '  gl_FragColor = vec4 (strokeColorVar, strokeOpacityVar);',\n      '}'\n    ].join('\\n'),\n    shader = new vgl.shader(gl.FRAGMENT_SHADER);\n    shader.setShaderSource(fragmentShaderSource);\n    return shader;\n  }\n\n  function createGLLines() {\n    var i = null,\n        j = null,\n        k = null,\n        v,\n        prev = [],\n        next = [],\n        numPts = m_this.data().length,\n        itemIndex = 0,\n        lineItemIndex = 0,\n        lineItem = null,\n        currIndex = null,\n        lineSegments = [],\n        pos = null,\n        posTmp = null,\n        strkColor = null,\n        start = null,\n        position = [],\n        strkWidthArr = [],\n        strkColorArr = [],\n        strkOpacityArr = [],\n        geom = vgl.geometryData(),\n        posFunc = m_this.position(),\n        strkWidthFunc = m_this.style.get('strokeWidth'),\n        strkColorFunc = m_this.style.get('strokeColor'),\n        strkOpacityFunc = m_this.style.get('strokeOpacity'),\n        buffers = vgl.DataBuffers(1024),\n        // Sources\n        posData = vgl.sourceDataP3fv({'name': 'pos'}),\n        prvPosData = vgl.sourceDataAnyfv(\n            3, vgl.vertexAttributeKeysIndexed.Four, {'name': 'prev'}),\n        nxtPosData = vgl.sourceDataAnyfv(\n            3, vgl.vertexAttributeKeysIndexed.Five, {'name': 'next'}),\n        offPosData = vgl.sourceDataAnyfv(\n            1, vgl.vertexAttributeKeysIndexed.Six, {'name': 'offset'}),\n        strkWidthData = vgl.sourceDataAnyfv(\n            1, vgl.vertexAttributeKeysIndexed.One, {'name': 'strokeWidth'}),\n        strkColorData = vgl.sourceDataAnyfv(\n            3, vgl.vertexAttributeKeysIndexed.Two, {'name': 'strokeColor'}),\n        strkOpacityData = vgl.sourceDataAnyfv(\n            1, vgl.vertexAttributeKeysIndexed.Three,\n            {'name': 'strokeOpacity'}),\n        // Primitive indices\n        triangles = vgl.triangles(),\n        order = m_this.featureVertices(),\n        addVert = function (prevPos, currPos, nextPos, offset,\n                            width, color, opacity) {\n          buffers.write('prev', prevPos, currIndex, 1);\n          buffers.write('pos', currPos, currIndex, 1);\n          buffers.write('next', nextPos, currIndex, 1);\n          buffers.write('offset', [offset], currIndex, 1);\n          buffers.write('indices', [currIndex], currIndex, 1);\n          buffers.write('strokeWidth', [width], currIndex, 1);\n          buffers.write('strokeColor', color, currIndex, 1);\n          buffers.write('strokeOpacity', [opacity], currIndex, 1);\n          currIndex += 1;\n        };\n\n    m_this.data().forEach(function (item) {\n      lineItem = m_this.line()(item, itemIndex);\n      lineSegments.push(lineItem.length);\n      lineItem.forEach(function (lineItemData) {\n        pos = posFunc(lineItemData, lineItemIndex, item, itemIndex);\n        if (pos instanceof geo.latlng) {\n          position.push([pos.x(), pos.y(), 0.0]);\n        } else {\n          position.push([pos.x, pos.y, pos.z || 0.0]);\n        }\n        strkWidthArr.push(strkWidthFunc(lineItemData, lineItemIndex,\n                                        item, itemIndex));\n        strkColor = strkColorFunc(lineItemData, lineItemIndex,\n                                  item, itemIndex);\n        strkColorArr.push([strkColor.r, strkColor.g, strkColor.b]);\n        strkOpacityArr.push(strkOpacityFunc(lineItemData, lineItemIndex,\n                                            item, itemIndex));\n\n        // Assuming that we will have atleast two points\n        if (lineItemIndex === 0) {\n          posTmp = position[position.length - 1];\n          prev.push(posTmp);\n        } else {\n          prev.push(position[position.length - 2]);\n          next.push(position[position.length - 1]);\n        }\n\n        lineItemIndex += 1;\n      });\n      next.push(position[position.length - 1]);\n      lineItemIndex = 0;\n      itemIndex += 1;\n    });\n\n    position = geo.transform.transformCoordinates(\n                 m_this.gcs(), m_this.layer().map().gcs(),\n                 position, 3);\n    prev = geo.transform.transformCoordinates(\n                 m_this.gcs(), m_this.layer().map().gcs(),\n                 prev, 3);\n    next = geo.transform.transformCoordinates(\n                 m_this.gcs(), m_this.layer().map().gcs(),\n                 next, 3);\n\n    buffers.create('pos', 3);\n    buffers.create('next', 3);\n    buffers.create('prev', 3);\n    buffers.create('offset', 1);\n    buffers.create('indices', 1);\n    buffers.create('strokeWidth', 1);\n    buffers.create('strokeColor', 3);\n    buffers.create('strokeOpacity', 1);\n\n    numPts = position.length;\n\n    start = buffers.alloc(numPts * 6);\n    currIndex = start;\n\n    i = 0;\n    k = 0;\n    for (j = 0; j < lineSegments.length; j += 1) {\n      i += 1;\n      for (k = 0; k < lineSegments[j] - 1; k += 1) {\n        for (v = 0; v < order.length; v += 1) {\n          addVert(prev[i + order[v][0]], position[i + order[v][0]],\n                  next[i + order[v][0]], order[v][1],\n                  strkWidthArr[i + order[v][0]],\n                  strkColorArr[i + order[v][0]],\n                  strkOpacityArr[i + order[v][0]]);\n        }\n        i += 1;\n      }\n    }\n\n    posData.pushBack(buffers.get('pos'));\n    geom.addSource(posData);\n\n    prvPosData.pushBack(buffers.get('prev'));\n    geom.addSource(prvPosData);\n\n    nxtPosData.pushBack(buffers.get('next'));\n    geom.addSource(nxtPosData);\n\n    strkWidthData.pushBack(buffers.get('strokeWidth'));\n    geom.addSource(strkWidthData);\n\n    strkColorData.pushBack(buffers.get('strokeColor'));\n    geom.addSource(strkColorData);\n\n    strkOpacityData.pushBack(buffers.get('strokeOpacity'));\n    geom.addSource(strkOpacityData);\n\n    offPosData.pushBack(buffers.get('offset'));\n    geom.addSource(offPosData);\n\n    triangles.setIndices(buffers.get('indices'));\n    geom.addPrimitive(triangles);\n\n    m_mapper.setGeometryData(geom);\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return the arrangement of vertices used for each line segment.\n   *\n   * @returns {Number}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.featureVertices = function () {\n    return [[-1, 1], [0, -1], [-1, -1], [-1, 1], [0, 1], [0, -1]];\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return the number of vertices used for each line segment.\n   *\n   * @returns {Number}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.verticesPerFeature = function () {\n    return this.featureVertices().length;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    var prog = vgl.shaderProgram(),\n        vs = createVertexShader(),\n        fs = createFragmentShader(),\n        // Vertex attributes\n        posAttr = vgl.vertexAttribute('pos'),\n        prvAttr = vgl.vertexAttribute('prev'),\n        nxtAttr = vgl.vertexAttribute('next'),\n        offAttr = vgl.vertexAttribute('offset'),\n        strkWidthAttr = vgl.vertexAttribute('strokeWidth'),\n        strkColorAttr = vgl.vertexAttribute('strokeColor'),\n        strkOpacityAttr = vgl.vertexAttribute('strokeOpacity'),\n        // Shader uniforms\n        mviUnif = new vgl.modelViewUniform('modelViewMatrix'),\n        prjUnif = new vgl.projectionUniform('projectionMatrix');\n\n    m_pixelWidthUnif =  new vgl.floatUniform('pixelWidth',\n                          1.0 / m_this.renderer().width());\n    s_init.call(m_this, arg);\n    m_material = vgl.material();\n    m_mapper = vgl.mapper({dynamicDraw: m_dynamicDraw});\n\n    prog.addVertexAttribute(posAttr, vgl.vertexAttributeKeys.Position);\n    prog.addVertexAttribute(strkWidthAttr, vgl.vertexAttributeKeysIndexed.One);\n    prog.addVertexAttribute(strkColorAttr, vgl.vertexAttributeKeysIndexed.Two);\n    prog.addVertexAttribute(strkOpacityAttr, vgl.vertexAttributeKeysIndexed.Three);\n    prog.addVertexAttribute(prvAttr, vgl.vertexAttributeKeysIndexed.Four);\n    prog.addVertexAttribute(nxtAttr, vgl.vertexAttributeKeysIndexed.Five);\n    prog.addVertexAttribute(offAttr, vgl.vertexAttributeKeysIndexed.Six);\n\n    prog.addUniform(mviUnif);\n    prog.addUniform(prjUnif);\n    prog.addUniform(m_pixelWidthUnif);\n\n    prog.addShader(fs);\n    prog.addShader(vs);\n\n    m_material.addAttribute(prog);\n    m_material.addAttribute(vgl.blend());\n\n    m_actor = vgl.actor();\n    m_actor.setMaterial(m_material);\n    m_actor.setMapper(m_mapper);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return list of actors\n   *\n   * @returns {vgl.actor[]}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.actors = function () {\n    if (!m_actor) {\n      return [];\n    }\n    return [m_actor];\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Build\n   *\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._build = function () {\n    if (m_actor) {\n      m_this.renderer().contextRenderer().removeActor(m_actor);\n    }\n\n    createGLLines();\n\n    m_this.renderer().contextRenderer().addActor(m_actor);\n    m_this.buildTime().modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update\n   *\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function () {\n    s_update.call(m_this);\n\n    if (m_this.dataTime().getMTime() >= m_this.buildTime().getMTime() ||\n        m_this.updateTime().getMTime() <= m_this.getMTime()) {\n      m_this._build();\n    }\n\n    m_pixelWidthUnif.set(1.0 / m_this.renderer().width());\n    m_actor.setVisible(m_this.visible());\n    m_actor.material().setBinNumber(m_this.bin());\n    m_this.updateTime().modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Destroy\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    m_this.renderer().contextRenderer().removeActor(m_actor);\n    s_exit();\n  };\n\n  this._init(arg);\n  return this;\n};\n\ninherit(geo.gl.lineFeature, geo.lineFeature);\n\n// Now register it\ngeo.registerFeature('vgl', 'line', geo.gl.lineFeature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of pointFeature\n *\n * @class\n * @extends geo.pointFeature\n * @returns {geo.gl.pointFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.gl.pointFeature = function (arg) {\n  \"use strict\";\n  if (!(this instanceof geo.gl.pointFeature)) {\n    return new geo.gl.pointFeature(arg);\n  }\n  arg = arg || {};\n  geo.pointFeature.call(this, arg);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      s_exit = this._exit,\n      m_actor = null,\n      m_pixelWidthUniform = null,\n      m_aspectUniform = null,\n      m_dynamicDraw = arg.dynamicDraw === undefined ? false : arg.dynamicDraw,\n      m_primitiveShape = \"triangle\", // arg can change this, below\n      s_init = this._init,\n      s_update = this._update;\n  if (arg.primitiveShape === \"triangle\" || arg.primitiveShape === \"square\") {\n    m_primitiveShape = arg.primitiveShape;\n  }\n\n  var vertexShaderSource = [\n      \"attribute vec3 pos;\",\n      \"attribute vec2 unit;\",\n      \"attribute float rad;\",\n      \"attribute vec3 fillColor;\",\n      \"attribute vec3 strokeColor;\",\n      \"attribute float fillOpacity;\",\n      \"attribute float strokeWidth;\",\n      \"attribute float strokeOpacity;\",\n      \"attribute float fill;\",\n      \"attribute float stroke;\",\n      \"uniform float pixelWidth;\",\n      \"uniform float aspect;\",\n      \"uniform mat4 modelViewMatrix;\",\n      \"uniform mat4 projectionMatrix;\",\n      \"varying vec3 unitVar;\",\n      \"varying vec4 fillColorVar;\",\n      \"varying vec4 strokeColorVar;\",\n      \"varying float radiusVar;\",\n      \"varying float strokeWidthVar;\",\n      \"varying float fillVar;\",\n      \"varying float strokeVar;\",\n      \"void main(void)\",\n      \"{\",\n      \"  strokeWidthVar = strokeWidth;\",\n      \"  // No stroke or fill implies nothing to draw\",\n      \"  if (stroke < 1.0 || strokeWidth <= 0.0 || strokeOpacity <= 0.0) {\",\n      \"    strokeVar = 0.0;\",\n      \"    strokeWidthVar = 0.0;\",\n      \"  }\",\n      \"  else\",\n      \"    strokeVar = 1.0;\",\n      \"  if (fill < 1.0 || rad <= 0.0 || fillOpacity <= 0.0)\",\n      \"    fillVar = 0.0;\",\n      \"  else\",\n      \"    fillVar = 1.0;\",\n      /* If the point has no visible pixels, skip doing computations on it. */\n      \"  if (fillVar == 0.0 && strokeVar == 0.0) {\",\n      \"    gl_Position = vec4(2, 2, 0, 1);\",\n      \"    return;\",\n      \"  }\",\n      \"  fillColorVar = vec4 (fillColor, fillOpacity);\",\n      \"  strokeColorVar = vec4 (strokeColor, strokeOpacity);\",\n      \"  unitVar = vec3 (unit, 1.0);\",\n      \"  radiusVar = rad;\",\n      \"  vec4 p = (projectionMatrix * modelViewMatrix * vec4(pos, 1.0)).xyzw;\",\n      \"  if (p.w != 0.0) {\",\n      \"    p = p / p.w;\",\n      \"  }\",\n      \"  p += (rad + strokeWidthVar) * \",\n      \"vec4 (unit.x * pixelWidth, unit.y * pixelWidth * aspect, 0.0, 1.0);\",\n      \"  gl_Position = vec4(p.xyz, 1.0);\",\n      \"}\"\n    ].join(\"\\n\");\n\n  function createVertexShader() {\n    var shader = new vgl.shader(gl.VERTEX_SHADER);\n\n    shader.setShaderSource(vertexShaderSource);\n    return shader;\n  }\n\n  var fragmentShaderSource = [\n      \"#ifdef GL_ES\",\n      \"  precision highp float;\",\n      \"#endif\",\n      \"uniform float aspect;\",\n      \"varying vec3 unitVar;\",\n      \"varying vec4 fillColorVar;\",\n      \"varying vec4 strokeColorVar;\",\n      \"varying float radiusVar;\",\n      \"varying float strokeWidthVar;\",\n      \"varying float fillVar;\",\n      \"varying float strokeVar;\",\n      \"void main () {\",\n      \"  vec4 strokeColor, fillColor;\",\n      \"  float endStep;\",\n      \"  // No stroke or fill implies nothing to draw\",\n      \"  if (fillVar == 0.0 && strokeVar == 0.0)\",\n      \"    discard;\",\n      \"  // Get normalized texture coordinates and polar r coordinate\",\n      \"  float rad = length (unitVar.xy);\",\n      \"  if (rad > 1.0)\",\n      \"    discard;\",\n      \"  // If there is no stroke, the fill region should transition to nothing\",\n      \"  if (strokeVar == 0.0) {\",\n      \"    strokeColor = vec4 (fillColorVar.rgb, 0.0);\",\n      \"    endStep = 1.0;\",\n      \"  } else {\",\n      \"    strokeColor = strokeColorVar;\",\n      \"    endStep = radiusVar / (radiusVar + strokeWidthVar);\",\n      \"  }\",\n      \"  // Likewise, if there is no fill, the stroke should transition to nothing\",\n      \"  if (fillVar == 0.0)\",\n      \"    fillColor = vec4 (strokeColor.rgb, 0.0);\",\n      \"  else\",\n      \"    fillColor = fillColorVar;\",\n      \"  // Distance to antialias over\",\n      \"  float antialiasDist = 3.0 / (2.0 * radiusVar);\",\n      \"  if (rad < endStep) {\",\n      \"    float step = smoothstep (endStep - antialiasDist, endStep, rad);\",\n      \"    gl_FragColor = mix (fillColor, strokeColor, step);\",\n      \"  } else {\",\n      \"    float step = smoothstep (1.0 - antialiasDist, 1.0, rad);\",\n      \"    gl_FragColor = mix (strokeColor, vec4 (strokeColor.rgb, 0.0), step);\",\n      \"  }\",\n      \"}\"\n    ].join(\"\\n\");\n\n  function createFragmentShader() {\n    var shader = new vgl.shader(gl.FRAGMENT_SHADER);\n    shader.setShaderSource(fragmentShaderSource);\n    return shader;\n  }\n\n  var pointPolygon = function (x, y, w, h) {\n    var verts;\n    switch (m_primitiveShape) {\n      case \"triangle\":\n        /* Use an equilateral triangle.  While this has 30% more area than a\n         * square, the reduction in vertices should help more than the\n         * processing the additional fragments. */\n        verts = [\n          x, y - h * 2,\n          x - w * Math.sqrt(3.0), y + h,\n          x + w * Math.sqrt(3.0), y + h\n        ];\n        break;\n      default: // \"square\"\n        /* Use a surrounding square split diagonally into two triangles. */\n        verts = [\n          x - w, y + h,\n          x - w, y - h,\n          x + w, y + h,\n          x - w, y - h,\n          x + w, y - h,\n          x + w, y + h\n        ];\n        break;\n    }\n    return verts;\n  };\n\n  function createGLPoints() {\n    var i, numPts = m_this.data().length,\n        start, unit = pointPolygon(0, 0, 1, 1),\n        position = [], radius = [], strokeWidth = [],\n        fillColor = [], fill = [], strokeColor = [], stroke = [],\n        fillOpacity = [], strokeOpacity = [], posFunc, radFunc, strokeWidthFunc,\n        fillColorFunc, fillFunc, strokeColorFunc, strokeFunc, fillOpacityFunc,\n        strokeOpactityFunc, buffers = vgl.DataBuffers(1024),\n        sourcePositions = vgl.sourceDataP3fv({\"name\": \"pos\"}),\n        sourceUnits = vgl.sourceDataAnyfv(\n            2, vgl.vertexAttributeKeysIndexed.One, {\"name\": \"unit\"}),\n        sourceRadius = vgl.sourceDataAnyfv(\n            1, vgl.vertexAttributeKeysIndexed.Two, {\"name\": \"rad\"}),\n        sourceStokeWidth = vgl.sourceDataAnyfv(\n            1, vgl.vertexAttributeKeysIndexed.Three, {\"name\": \"strokeWidth\"}),\n        sourceFillColor = vgl.sourceDataAnyfv(\n            3, vgl.vertexAttributeKeysIndexed.Four, {\"name\": \"fillColor\"}),\n        sourceFill = vgl.sourceDataAnyfv(\n            1, vgl.vertexAttributeKeysIndexed.Five, {\"name\": \"fill\"}),\n        sourceStrokeColor = vgl.sourceDataAnyfv(\n            3, vgl.vertexAttributeKeysIndexed.Six, {\"name\": \"strokeColor\"}),\n        sourceStroke = vgl.sourceDataAnyfv(\n            1, vgl.vertexAttributeKeysIndexed.Seven, {\"name\": \"stroke\"}),\n        sourceAlpha = vgl.sourceDataAnyfv(\n            1, vgl.vertexAttributeKeysIndexed.Eight, {\"name\": \"fillOpacity\"}),\n        sourceStrokeOpacity = vgl.sourceDataAnyfv(\n            1, vgl.vertexAttributeKeysIndexed.Nine, {\"name\": \"strokeOpacity\"}),\n        trianglesPrimitive = vgl.triangles(),\n        mat = vgl.material(),\n        blend = vgl.blend(),\n        prog = vgl.shaderProgram(),\n        vertexShader = createVertexShader(),\n        fragmentShader = createFragmentShader(),\n        posAttr = vgl.vertexAttribute(\"pos\"),\n        unitAttr = vgl.vertexAttribute(\"unit\"),\n        radAttr = vgl.vertexAttribute(\"rad\"),\n        stokeWidthAttr = vgl.vertexAttribute(\"strokeWidth\"),\n        fillColorAttr = vgl.vertexAttribute(\"fillColor\"),\n        fillAttr = vgl.vertexAttribute(\"fill\"),\n        strokeColorAttr = vgl.vertexAttribute(\"strokeColor\"),\n        strokeAttr = vgl.vertexAttribute(\"stroke\"),\n        fillOpacityAttr = vgl.vertexAttribute(\"fillOpacity\"),\n        strokeOpacityAttr = vgl.vertexAttribute(\"strokeOpacity\"),\n        modelViewUniform = new vgl.modelViewUniform(\"modelViewMatrix\"),\n        projectionUniform = new vgl.projectionUniform(\"projectionMatrix\"),\n        geom = vgl.geometryData(),\n        mapper = vgl.mapper({dynamicDraw: m_dynamicDraw});\n\n    m_pixelWidthUniform = new vgl.floatUniform(\"pixelWidth\",\n                            2.0 / m_this.renderer().width());\n    m_aspectUniform = new vgl.floatUniform(\"aspect\",\n                        m_this.renderer().width() / m_this.renderer().height());\n\n    posFunc = m_this.position();\n    radFunc = m_this.style.get(\"radius\");\n    strokeWidthFunc = m_this.style.get(\"strokeWidth\");\n    fillColorFunc = m_this.style.get(\"fillColor\");\n    fillFunc = m_this.style.get(\"fill\");\n    strokeColorFunc = m_this.style.get(\"strokeColor\");\n    strokeFunc = m_this.style.get(\"stroke\");\n    fillOpacityFunc = m_this.style.get(\"fillOpacity\");\n    strokeOpactityFunc = m_this.style.get(\"strokeOpacity\");\n\n    m_this.data().forEach(function (item) {\n      var p = posFunc(item), c;\n\n      position.push([p.x, p.y, p.z || 0]);\n      radius.push(radFunc(item));\n      strokeWidth.push(strokeWidthFunc(item));\n      fill.push(fillFunc(item) ? 1.0 : 0.0);\n\n      c = fillColorFunc(item);\n      fillColor.push([c.r, c.g, c.b]);\n\n      c = strokeColorFunc(item);\n      strokeColor.push([c.r, c.g, c.b]);\n\n      stroke.push(strokeFunc(item) ? 1.0 : 0.0);\n      fillOpacity.push(fillOpacityFunc(item));\n      strokeOpacity.push(strokeOpactityFunc(item));\n    });\n\n    position = geo.transform.transformCoordinates(\n                  m_this.gcs(), m_this.layer().map().gcs(),\n                  position, 3);\n\n    buffers.create(\"pos\", 3);\n    buffers.create(\"indices\", 1);\n    buffers.create(\"unit\", 2);\n    buffers.create(\"rad\", 1);\n    buffers.create(\"strokeWidth\", 1);\n    buffers.create(\"fillColor\", 3);\n    buffers.create(\"fill\", 1);\n    buffers.create(\"strokeColor\", 3);\n    buffers.create(\"stroke\", 1);\n    buffers.create(\"fillOpacity\", 1);\n    buffers.create(\"strokeOpacity\", 1);\n\n    // TODO: Right now this is ugly but we will fix it.\n    prog.addVertexAttribute(posAttr, vgl.vertexAttributeKeys.Position);\n    prog.addVertexAttribute(unitAttr, vgl.vertexAttributeKeysIndexed.One);\n    prog.addVertexAttribute(radAttr, vgl.vertexAttributeKeysIndexed.Two);\n    prog.addVertexAttribute(stokeWidthAttr, vgl.vertexAttributeKeysIndexed.Three);\n    prog.addVertexAttribute(fillColorAttr, vgl.vertexAttributeKeysIndexed.Four);\n    prog.addVertexAttribute(fillAttr, vgl.vertexAttributeKeysIndexed.Five);\n    prog.addVertexAttribute(strokeColorAttr, vgl.vertexAttributeKeysIndexed.Six);\n    prog.addVertexAttribute(strokeAttr, vgl.vertexAttributeKeysIndexed.Seven);\n    prog.addVertexAttribute(fillOpacityAttr, vgl.vertexAttributeKeysIndexed.Eight);\n    prog.addVertexAttribute(strokeOpacityAttr, vgl.vertexAttributeKeysIndexed.Nine);\n\n    prog.addUniform(m_pixelWidthUniform);\n    prog.addUniform(m_aspectUniform);\n    prog.addUniform(modelViewUniform);\n    prog.addUniform(projectionUniform);\n\n    prog.addShader(fragmentShader);\n    prog.addShader(vertexShader);\n\n    mat.addAttribute(prog);\n    mat.addAttribute(blend);\n\n    m_actor = vgl.actor();\n    m_actor.setMaterial(mat);\n\n    var vpf = m_this.verticesPerFeature();\n\n    start = buffers.alloc(vpf * numPts);\n    for (i = 0; i < numPts; i += 1) {\n      buffers.repeat(\"pos\", position[i],\n                      start + i * vpf, vpf);\n      buffers.write(\"unit\", unit, start + i * vpf, vpf);\n      buffers.write(\"indices\", [i], start + i, 1);\n      buffers.repeat(\"rad\", [radius[i]], start + i * vpf, vpf);\n      buffers.repeat(\"strokeWidth\", [strokeWidth[i]], start + i * vpf, vpf);\n      buffers.repeat(\"fillColor\", fillColor[i], start + i * vpf, vpf);\n      buffers.repeat(\"fill\", [fill[i]], start + i * vpf, vpf);\n      buffers.repeat(\"strokeColor\", strokeColor[i], start + i * vpf, vpf);\n      buffers.repeat(\"stroke\", [stroke[i]], start + i * vpf, vpf);\n      buffers.repeat(\"fillOpacity\", [fillOpacity[i]], start + i * vpf, vpf);\n      buffers.repeat(\"strokeOpacity\", [strokeOpacity[i]], start + i * vpf, vpf);\n    }\n\n    sourcePositions.pushBack(buffers.get(\"pos\"));\n    geom.addSource(sourcePositions);\n\n    sourceUnits.pushBack(buffers.get(\"unit\"));\n    geom.addSource(sourceUnits);\n\n    sourceRadius.pushBack(buffers.get(\"rad\"));\n    geom.addSource(sourceRadius);\n\n    sourceStokeWidth.pushBack(buffers.get(\"strokeWidth\"));\n    geom.addSource(sourceStokeWidth);\n\n    sourceFillColor.pushBack(buffers.get(\"fillColor\"));\n    geom.addSource(sourceFillColor);\n\n    sourceFill.pushBack(buffers.get(\"fill\"));\n    geom.addSource(sourceFill);\n\n    sourceStrokeColor.pushBack(buffers.get(\"strokeColor\"));\n    geom.addSource(sourceStrokeColor);\n\n    sourceStroke.pushBack(buffers.get(\"stroke\"));\n    geom.addSource(sourceStroke);\n\n    sourceAlpha.pushBack(buffers.get(\"fillOpacity\"));\n    geom.addSource(sourceAlpha);\n\n    sourceStrokeOpacity.pushBack(buffers.get(\"strokeOpacity\"));\n    geom.addSource(sourceStrokeOpacity);\n\n    trianglesPrimitive.setIndices(buffers.get(\"indices\"));\n    geom.addPrimitive(trianglesPrimitive);\n\n    mapper.setGeometryData(geom);\n\n    m_actor.setMapper(mapper);\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return list of actors\n   *\n   * @returns {vgl.actor[]}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.actors = function () {\n    if (!m_actor) {\n      return [];\n    }\n    return [m_actor];\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return the number of vertices used for each point.\n   *\n   * @returns {Number}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.verticesPerFeature = function () {\n    var unit = pointPolygon(0, 0, 1, 1);\n    return unit.length / 2;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function () {\n    s_init.call(m_this, arg);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Build\n   *\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._build = function () {\n\n    if (m_actor) {\n      m_this.renderer().contextRenderer().removeActor(m_actor);\n    }\n\n    createGLPoints();\n\n    m_this.renderer().contextRenderer().addActor(m_actor);\n    m_this.renderer().contextRenderer().render();\n    m_this.buildTime().modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update\n   *\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function () {\n\n    s_update.call(m_this);\n\n    // For now build if the data or style changes. In the future we may\n    // we able to partially update the data using dynamic gl buffers.\n    if (m_this.dataTime().getMTime() >= m_this.buildTime().getMTime() ||\n        m_this.updateTime().getMTime() < m_this.getMTime()) {\n      m_this._build();\n    }\n\n    // Update uniforms\n    m_pixelWidthUniform.set(2.0 / m_this.renderer().width());\n    m_aspectUniform.set(m_this.renderer().width() /\n                        m_this.renderer().height());\n\n    m_actor.setVisible(m_this.visible());\n    m_actor.material().setBinNumber(m_this.bin());\n\n    m_this.updateTime().modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Destroy\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    m_this.renderer().contextRenderer().removeActor(m_actor);\n    s_exit();\n  };\n\n  m_this._init();\n  return this;\n};\n\ninherit(geo.gl.pointFeature, geo.pointFeature);\n\n// Now register it\ngeo.registerFeature(\"vgl\", \"point\", geo.gl.pointFeature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of geomFeature\n *\n * @class\n * @extends geo.geomFeature\n * @param {vgl.geometryData} arg\n * @returns {geo.gl.geomFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.gl.geomFeature = function (arg) {\n  \"use strict\";\n  if (!(this instanceof geo.gl.geomFeature)) {\n    return new geo.gl.geomFeature(arg);\n  }\n  arg = arg || {};\n  geo.geomFeature.call(this, arg);\n\n  // Initialize\n  var m_this = this,\n      m_geom = arg.geom || null,\n      m_actor = vgl.actor(),\n      m_mapper = vgl.mapper(),\n      m_material = null,\n      m_scalar = null,\n      m_color = arg.color || [1.0, 1.0, 1.0],\n      m_buildTime = null,\n      m_noOfPrimitives = 0;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._build = function () {\n    var style = m_this.style();\n\n    // Vertex color gets the preference\n    if (m_geom !== null) {\n      m_scalar = m_geom.sourceData(vgl.vertexAttributeKeys.Scalar);\n      m_color = m_geom.sourceData(vgl.vertexAttributeKeys.Color);\n      m_mapper.setGeometryData(m_geom);\n    }\n\n    this.setMapper(m_mapper);\n\n    if (style.point_sprites !== undefined && style.point_sprites &&\n        style.point_sprites_image !== undefined &&\n        style.point_sprites_image !== null &&\n        m_noOfPrimitives === 1 &&\n        m_geom.primitive(0).primitiveType() === gl.POINTS) {\n      m_material = vgl.utils.createPointSpritesMaterial(\n                     style.point_sprites_image);\n    } else if (m_scalar) {\n      if (m_color instanceof vgl.lookupTable) {\n        m_color.updateRange(m_scalar.scalarRange());\n        m_material = vgl.utils.createColorMappedMaterial(m_color);\n      } else {\n        m_color = vgl.lookupTable();\n        m_color.updateRange(m_scalar.scalarRange());\n        m_material = vgl.utils.createColorMappedMaterial(m_color);\n      }\n    } else if (m_color) {\n      m_material = vgl.utils.createColorMaterial();\n    } else {\n      m_material = vgl.utils.createSolidColorMaterial();\n    }\n    m_actor.setMaterial(m_material);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update\n   *\n   * @private\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function () {\n    if (m_buildTime &&\n        m_buildTime.getMTime() < m_this.getMTime()) {\n      if (m_color instanceof vgl.lookupTable) {\n        vgl.utils.updateColorMappedMaterial(m_this.material(),\n          m_this.style.color);\n      }/* else {\n        // TODO\n      }*/\n    } else {\n      m_buildTime = vgl.timestamp();\n      m_buildTime.modified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set geometry\n   *\n   * @returns {geo.gl.geomFeature}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.geometry = function (val) {\n    if (val === undefined) {\n      return m_geom;\n    } else {\n      m_geom = val;\n      m_this.modified();\n      return m_this;\n    }\n  };\n\n  return this;\n};\n\ninherit(geo.gl.geomFeature, geo.geomFeature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a plane feature given a lower left corner point geo.latlng\n * and and upper right corner point geo.latlng\n * @class\n * @extends geo.planeFeature\n * @param lowerleft\n * @param upperright\n * @returns {geo.planeFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.gl.planeFeature = function (arg) {\n  \"use strict\";\n  if (!(this instanceof geo.gl.planeFeature)) {\n    return new geo.gl.planeFeature(arg);\n  }\n  geo.planeFeature.call(this, arg);\n\n  var m_this = this,\n      s_exit = this._exit,\n      m_actor = null,\n      m_onloadCallback = arg.onload === undefined ? null : arg.onload;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Gets the coordinates for this plane\n   *\n   * @returns {Array} [[origin], [upper left] [lower right]]\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.coords = function () {\n    return [m_this.origin(), m_this.upperLeft(), m_this.lowerRight()];\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Build this feature\n   *\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._build = function () {\n    var or = m_this.origin(),\n        ul = m_this.upperLeft(),\n        lr = m_this.lowerRight(),\n        /// img could be a source or an Image\n        img = m_this.style().image,\n        image = null,\n        texture = null;\n\n    /// TODO If for some reason base layer changes its gcs at run time\n    /// then we need to trigger an event to rebuild every feature\n    or = geo.transform.transformCoordinates(m_this.gcs(),\n                                            m_this.layer().map().gcs(),\n                                            or);\n    ul = geo.transform.transformCoordinates(m_this.gcs(),\n                                            m_this.layer().map().gcs(),\n                                            ul);\n    lr = geo.transform.transformCoordinates(m_this.gcs(),\n                                            m_this.layer().map().gcs(),\n                                            lr);\n\n    m_this.buildTime().modified();\n\n    if (m_actor) {\n      m_this.renderer().contextRenderer().removeActor(m_actor);\n    }\n\n    if (img && img instanceof Image) {\n      image = img;\n    } else if (img) {\n      image = new Image();\n      image.src = img;\n    }\n\n    if (!image) {\n      m_actor = vgl.utils.createPlane(or[0], or[1], or[2],\n        ul[0], ul[1], ul[2],\n        lr[0], lr[1], lr[2]);\n\n      m_this.renderer().contextRenderer().addActor(m_actor);\n\n    } else {\n      m_actor = vgl.utils.createTexturePlane(or[0], or[1], or[2],\n        lr[0], lr[1], lr[2],\n        ul[0], ul[1], ul[2], true);\n      texture = vgl.texture();\n      m_this.visible(false);\n\n      /// TODO: Is there a reliable way to make sure that image is loaded already?\n      m_this.renderer().contextRenderer().addActor(m_actor);\n\n      if (image.complete) {\n        texture.setImage(image);\n        m_actor.material().addAttribute(texture);\n        /// NOTE Currently we assume that we want to show the feature as\n        /// soon as the image gets loaded. However, there might be a case\n        /// where we want to lock down the visibility. We will deal with that\n        /// later.\n        m_this.visible(true);\n\n        if (m_onloadCallback) {\n          m_onloadCallback.call(m_this);\n        }\n        //}\n      } else {\n        image.onload = function () {\n          texture.setImage(image);\n          m_actor.material().addAttribute(texture);\n          /// NOTE Currently we assume that we want to show the feature as\n          /// soon as the image gets loaded. However, there might be a case\n          /// where we want to lock down the visibility. We will deal with that\n          /// later.\n          m_this.visible(true);\n\n          if (m_onloadCallback) {\n            m_onloadCallback.call(m_this);\n          }\n\n          if (m_this.drawOnAsyncResourceLoad()) {\n            m_this._update();\n            m_this.layer().draw();\n          }\n        };\n      }\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update\n   *\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function () {\n    if (m_this.buildTime().getMTime() <= m_this.dataTime().getMTime()) {\n      m_this._build();\n    }\n\n    if (m_this.updateTime().getMTime() <= m_this.getMTime()) {\n      m_actor.setVisible(m_this.visible());\n      m_actor.material().setBinNumber(m_this.bin());\n    }\n\n    m_this.updateTime().modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Destroy\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    m_this.renderer().contextRenderer().removeActor(m_actor);\n    s_exit();\n  };\n\n  return this;\n};\n\ninherit(geo.gl.planeFeature, geo.planeFeature);\n\n// Now register it\ngeo.registerFeature(\"vgl\", \"plane\", geo.gl.planeFeature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of polygonFeature\n *\n * @class\n * @extends geo.polygonFeature\n * @returns {geo.gl.polygonFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.gl.polygonFeature = function (arg) {\n  'use strict';\n  if (!(this instanceof geo.gl.polygonFeature)) {\n    return new geo.gl.polygonFeature(arg);\n  }\n  arg = arg || {};\n  geo.polygonFeature.call(this, arg);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      s_exit = this._exit,\n      m_actor = vgl.actor(),\n      m_mapper = vgl.mapper(),\n      m_material = vgl.material(),\n      s_init = this._init,\n      s_update = this._update;\n\n  function createVertexShader() {\n      var vertexShaderSource = [\n        'attribute vec3 pos;',\n        'attribute vec3 fillColor;',\n        'attribute float fillOpacity;',\n        'uniform mat4 modelViewMatrix;',\n        'uniform mat4 projectionMatrix;',\n        'uniform float pixelWidth;',\n        'varying vec3 fillColorVar;',\n        'varying float fillOpacityVar;',\n\n        'void main(void)',\n        '{',\n        '  vec4 clipPos = projectionMatrix * modelViewMatrix * vec4(pos.xyz, 1);',\n        '  if (clipPos.w != 0.0) {',\n        '    clipPos = clipPos/clipPos.w;',\n        '  }',\n        '  fillColorVar = fillColor;',\n        '  fillOpacityVar = fillOpacity;',\n        '  gl_Position = clipPos;',\n        '}'\n      ].join('\\n'),\n      shader = new vgl.shader(gl.VERTEX_SHADER);\n      shader.setShaderSource(vertexShaderSource);\n      return shader;\n    }\n\n  function createFragmentShader() {\n    var fragmentShaderSource = [\n      '#ifdef GL_ES',\n      '  precision highp float;',\n      '#endif',\n      'varying vec3 fillColorVar;',\n      'varying float fillOpacityVar;',\n      'void main () {',\n      '  gl_FragColor = vec4 (fillColorVar, fillOpacityVar);',\n      '}'\n    ].join('\\n'),\n    shader = new vgl.shader(gl.FRAGMENT_SHADER);\n    shader.setShaderSource(fragmentShaderSource);\n    return shader;\n  }\n\n  function createGLPolygons() {\n    var i = null,\n        numPts = null,\n        start = null,\n        itemIndex = 0,\n        polygonItemCoordIndex = 0,\n        position = [],\n        fillColor = [],\n        fillOpacity = [],\n        fillColorNew = [],\n        fillOpacityNew = [],\n        posFunc = null,\n        fillColorFunc = null,\n        polygonItem = null,\n        fillOpacityFunc = null,\n        buffers = vgl.DataBuffers(1024),\n        sourcePositions = vgl.sourceDataP3fv(),\n        sourceFillColor =\n          vgl.sourceDataAnyfv(3, vgl.vertexAttributeKeysIndexed.Two),\n        sourceFillOpacity =\n          vgl.sourceDataAnyfv(1, vgl.vertexAttributeKeysIndexed.Three),\n        trianglePrimitive = vgl.triangles(),\n        geom = vgl.geometryData(),\n        polygon = null,\n        holes = null,\n        extRing = null,\n        extIndex = 0,\n        extLength = null,\n        intIndex = 0,\n        posInstance = null,\n        triangulator = new PNLTRI.Triangulator(),\n        triangList = null,\n        newTriangList = null,\n        fillColorInstance = null,\n        currentIndex = null;\n\n    posFunc = m_this.position();\n    fillColorFunc = m_this.style.get('fillColor');\n    fillOpacityFunc = m_this.style.get('fillOpacity');\n\n    m_this.data().forEach(function (item) {\n      polygon = m_this.polygon()(item, itemIndex);\n      polygonItem = polygon.outer;\n      holes = polygon.inner;\n      polygonItemCoordIndex = 0;\n      extRing = [];\n      extIndex = 0;\n      extLength = polygonItem.length - 1;\n      extRing[0] = [];\n      intIndex = 0;\n\n      polygonItem.forEach(function (extRingCoords) {\n        if (extIndex !== extLength) {\n          //extRing = extRing.concat(extRingCoords);\n          posInstance = posFunc(extRingCoords,\n                                polygonItemCoordIndex,\n                                item, itemIndex);\n          if (posInstance instanceof geo.latlng) {\n            extRing[0].push({x: posInstance.x(), y: posInstance.y()});\n          } else {\n            extRing[0].push({x: posInstance.x, y: posInstance.y});\n          }\n\n          fillColorInstance = fillColorFunc(extRingCoords,\n                                            polygonItemCoordIndex,\n                                            item, itemIndex);\n          fillColor.push([fillColorInstance.r,\n                          fillColorInstance.g,\n                          fillColorInstance.b]);\n          fillOpacity.push(fillOpacityFunc(extRingCoords,\n                                           polygonItemCoordIndex,\n                                           item,\n                                           itemIndex));\n          polygonItemCoordIndex += 1;\n        }\n        extIndex += 1;\n      });\n\n      polygonItemCoordIndex = 0;\n      holes.forEach(function (hole) {\n        extRing[intIndex + 1] = [];\n        hole.forEach(function (intRingCoords) {\n          posInstance = posFunc(intRingCoords, polygonItemCoordIndex,\n                                item, itemIndex);\n          fillColorInstance = fillColorFunc(intRingCoords,\n                                            polygonItemCoordIndex,\n                                            item, itemIndex);\n          fillColor.push([fillColorInstance.r,\n                          fillColorInstance.g,\n                          fillColorInstance.b]);\n          fillOpacity.push(fillOpacityFunc(intRingCoords,\n                                           polygonItemCoordIndex,\n                                           item, itemIndex));\n          polygonItemCoordIndex += 1;\n          if (posInstance instanceof geo.latlng) {\n            extRing[intIndex + 1].push({x: posInstance.x(), y: posInstance.y()});\n          } else {\n            extRing[intIndex + 1].push({x: posInstance.x, y: posInstance.y});\n          }\n        });\n        intIndex += 1;\n      });\n\n      //console.log(\"extRing \", extRing);\n      //console.log(\"result\", PolyK.Triangulate(extRing));\n      triangList = triangulator.triangulate_polygon(extRing);\n      newTriangList = [];\n\n      triangList.forEach(function (newIndices) {\n        Array.prototype.push.apply(newTriangList, newIndices);\n      });\n\n      for (i = 1; i < extRing.length; i += 1) {\n        extRing[0] = extRing[0].concat(extRing[i]);\n      }\n\n      newTriangList.forEach(function (polygonIndex) {\n        var polygonItemCoords = extRing[0][polygonIndex];\n        position.push([polygonItemCoords.x,\n                       polygonItemCoords.y,\n                       polygonItemCoords.z || 0.0]);\n        fillColorNew.push(fillColor[polygonIndex]);\n        fillOpacityNew.push(fillOpacity[polygonIndex]);\n      });\n\n      itemIndex += 1;\n    });\n\n    position = geo.transform.transformCoordinates(\n                 m_this.gcs(), m_this.layer().map().gcs(),\n                 position, 3);\n\n    buffers.create('pos', 3);\n    buffers.create('indices', 1);\n    buffers.create('fillColor', 3);\n    buffers.create('fillOpacity', 1);\n\n    numPts = position.length;\n\n    start = buffers.alloc(numPts);\n    currentIndex = start;\n\n    //console.log(\"numPts \", numPts);\n    for (i = 0; i < numPts; i += 1) {\n      buffers.write('pos', position[i], start + i, 1);\n      buffers.write('indices', [i], start + i, 1);\n      buffers.write('fillColor', fillColorNew[i], start + i, 1);\n      buffers.write('fillOpacity', [fillOpacityNew[i]], start + i, 1);\n    }\n\n    //console.log(buffers.get('fillColor'));\n    sourcePositions.pushBack(buffers.get('pos'));\n    geom.addSource(sourcePositions);\n\n    sourceFillColor.pushBack(buffers.get('fillColor'));\n    geom.addSource(sourceFillColor);\n\n    sourceFillOpacity.pushBack(buffers.get('fillOpacity'));\n    geom.addSource(sourceFillOpacity);\n\n    //console.log(buffers.get('indices'));\n    trianglePrimitive.setIndices(buffers.get('indices'));\n    geom.addPrimitive(trianglePrimitive);\n\n    m_mapper.setGeometryData(geom);\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    var blend = vgl.blend(),\n        prog = vgl.shaderProgram(),\n        posAttr = vgl.vertexAttribute('pos'),\n        fillColorAttr = vgl.vertexAttribute('fillColor'),\n        fillOpacityAttr = vgl.vertexAttribute('fillOpacity'),\n        modelViewUniform = new vgl.modelViewUniform('modelViewMatrix'),\n        projectionUniform = new vgl.projectionUniform('projectionMatrix'),\n        vertexShader = createVertexShader(),\n        fragmentShader = createFragmentShader();\n\n    s_init.call(m_this, arg);\n\n    prog.addVertexAttribute(posAttr, vgl.vertexAttributeKeys.Position);\n    prog.addVertexAttribute(fillColorAttr, vgl.vertexAttributeKeysIndexed.Two);\n    prog.addVertexAttribute(fillOpacityAttr, vgl.vertexAttributeKeysIndexed.Three);\n\n    prog.addUniform(modelViewUniform);\n    prog.addUniform(projectionUniform);\n\n    prog.addShader(fragmentShader);\n    prog.addShader(vertexShader);\n\n    m_material.addAttribute(prog);\n    m_material.addAttribute(blend);\n\n    m_actor.setMapper(m_mapper);\n    m_actor.setMaterial(m_material);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Build\n   *\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._build = function () {\n    if (m_actor) {\n      m_this.renderer().contextRenderer().removeActor(m_actor);\n    }\n\n    createGLPolygons();\n\n    m_this.renderer().contextRenderer().addActor(m_actor);\n    m_this.buildTime().modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update\n   *\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function () {\n    s_update.call(m_this);\n\n    if (m_this.dataTime().getMTime() >= m_this.buildTime().getMTime() ||\n        m_this.updateTime().getMTime() <= m_this.getMTime()) {\n      m_this._build();\n    }\n\n    m_actor.setVisible(m_this.visible());\n    m_actor.material().setBinNumber(m_this.bin());\n    m_this.updateTime().modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Destroy\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    m_this.renderer().contextRenderer().removeActor(m_actor);\n    s_exit();\n  };\n\n  this._init(arg);\n  return this;\n};\n\ninherit(geo.gl.polygonFeature, geo.polygonFeature);\n\n// Now register it\ngeo.registerFeature('vgl', 'polygon', geo.gl.polygonFeature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Single VGL viewer\n *\n * This singleton instance is used to share a single GL context across multiple\n * vlgRenderer and therefore layers.\n * @private\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.gl._vglViewerInstances = {\n  viewers: [],\n  maps: []\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Retrives the singleton, lazily constructs as necessary.\n *\n * @return {vgl.viewer} the single viewer instance.\n */\n//////////////////////////////////////////////////////////////////////////////\n\ngeo.gl.vglViewerInstance = function (map) {\n  \"use strict\";\n\n  var mapIdx,\n      maps = geo.gl._vglViewerInstances.maps,\n      viewers = geo.gl._vglViewerInstances.viewers,\n      canvas;\n\n  function makeViewer() {\n    canvas = $(document.createElement(\"canvas\"));\n    canvas.attr(\"class\", \"webgl-canvas\");\n    var viewer = vgl.viewer(canvas.get(0));\n    viewer.renderWindow().removeRenderer(\n    viewer.renderWindow().activeRenderer());\n    viewer.init();\n    return viewer;\n  }\n\n  for (mapIdx = 0; mapIdx < maps.length; mapIdx += 1) {\n    if (map === maps[mapIdx]) {\n      break;\n    }\n  }\n\n  if (map !== maps[mapIdx]) {\n    maps[mapIdx] = map;\n    viewers[mapIdx] = makeViewer();\n  }\n\n  viewers[mapIdx]._exit = function () {\n    if (canvas) {\n      canvas.off();\n      canvas.remove();\n    }\n  };\n\n  return viewers[mapIdx];\n};\n\ngeo.gl.vglViewerInstance.deleteCache = function (viewer) {\n  \"use strict\";\n\n  var mapIdx,\n      maps = geo.gl._vglViewerInstances.maps,\n      viewers = geo.gl._vglViewerInstances.viewers;\n\n  for (mapIdx = 0; mapIdx < viewers.length; mapIdx += 1) {\n    if (viewer === undefined || viewer === viewers[mapIdx]) {\n      viewer._exit();\n      maps.splice(mapIdx, 1);\n      viewers.splice(mapIdx, 1);\n    }\n  }\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class vglRenderer\n *\n * @class\n * @extends geo.gl.renderer\n * @param canvas\n * @returns {geo.gl.vglRenderer}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.gl.vglRenderer = function (arg) {\n  \"use strict\";\n\n  if (!(this instanceof geo.gl.vglRenderer)) {\n    return new geo.gl.vglRenderer(arg);\n  }\n  geo.gl.renderer.call(this, arg);\n\n  var m_this = this,\n      s_exit = this._exit,\n      m_viewer = geo.gl.vglViewerInstance(this.layer().map()),\n      m_contextRenderer = vgl.renderer(),\n      m_width = 0,\n      m_height = 0,\n      s_init = this._init;\n\n  m_contextRenderer.setResetScene(false);\n\n  /// TODO: Move this API to the base class\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return width of the renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.width = function () {\n    return m_width;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return height of the renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.height = function () {\n    return m_height;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Convert input data in display space to world space\n   *\n   * @param {object} input {x:val, y:val}, [{x:val, y:val}],\n   * [{x:val, y:val}], [x1,y1], [[x,y]]\n   *\n   * @returns {object} {x:val, y:val, z:val, w:val}, [{x:val, y:val, z:val, w:val}],\n              [[x, y, z, w]], [x1,y1,z1,w]\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.displayToWorld = function (input) {\n    var i,\n        delta,\n        ren = m_this.contextRenderer(),\n        cam = ren.camera(),\n        fdp = ren.focusDisplayPoint(),\n        output,\n        temp,\n        point;\n\n    /// Handle if the input is an array [...]\n    if (input instanceof Array && input.length > 0) {\n      output = [];\n    /// Input is array of object {x:val, y:val}\n      if (input[0] instanceof Object) {\n        delta = 1;\n        for (i = 0; i < input.length; i += delta) {\n          point = input[i];\n          temp = ren.displayToWorld(vec4.fromValues(\n                   point.x, point.y, fdp[2], 1.0),\n                   cam.viewMatrix(), cam.projectionMatrix(),\n                   m_width, m_height);\n          output.push({x: temp[0], y: temp[1], z: temp[2], w: temp[3]});\n        }\n    /// Input is array of 2d array [[x,y], [x,y]]\n      } else if (input[0] instanceof Array) {\n        delta = 1;\n        for (i = 0; i < input.length; i += delta) {\n          point = input[i];\n          temp = ren.displayToWorld(vec4.fromValues(\n                   point[0], point[1], fdp[2], 1.0),\n                   cam.viewMatrix(), cam.projectionMatrix(),\n                   m_width, m_height);\n          output.push(temp);\n        }\n    /// Input is flat array [x1,y1,x2,y2]\n      } else {\n        delta = input.length % 3 === 0 ? 3 : 2;\n        for (i = 0; i < input.length; i += delta) {\n          temp = ren.displayToWorld(vec4.fromValues(\n            input[i],\n            input[i + 1],\n            fdp[2],\n            1.0), cam.viewMatrix(), cam.projectionMatrix(),\n            m_width, m_height);\n          output.push(temp[0]);\n          output.push(temp[1]);\n          output.push(temp[2]);\n          output.push(temp[3]);\n        }\n      }\n    /// Input is object {x:val, y:val}\n    } else if (input instanceof Object) {\n      output = {};\n      temp = ren.displayToWorld(vec4.fromValues(\n               input.x, input.y, fdp[2], 1.0),\n               cam.viewMatrix(), cam.projectionMatrix(),\n               m_width, m_height);\n      output = {x: temp[0], y: temp[1], z: temp[2], w: temp[3]};\n    } else {\n      throw \"Display to world conversion requires array of 2D/3D points\";\n    }\n    return output;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Convert input data in world space to display space\n   *\n   * @param {object} input {x:val, y:val} or {x:val, y:val, z:val} or [{x:val, y:val}]\n   * [{x:val, y:val, z:val}] or [[x,y]] or  [[x,y,z]] or [x1,y1,z1, x2, y2, z2]\n   *\n   * @returns {object} {x:val, y:val} or [{x:val, y:val}] or [[x,y]] or\n   * [x1,y1, x2, y2]\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.worldToDisplay = function (input) {\n    var i, temp, delta,\n        ren = m_this.contextRenderer(), cam = ren.camera(),\n        fp = cam.focalPoint(), output = [];\n\n    /// Input is an array\n    if (input instanceof Array && input.length > 0) {\n      output = [];\n\n      /// Input is an array of objects\n      if (input[0] instanceof Object) {\n        delta = 1;\n        for (i = 0; i < input.length; i += delta) {\n          temp = ren.worldToDisplay(vec4.fromValues(\n                   input[i].x, input[i].y, fp[2], 1.0), cam.viewMatrix(),\n                   cam.projectionMatrix(),\n                   m_width, m_height);\n          output[i] = { x: temp[0], y: temp[1], z: temp[2] };\n        }\n      } else if (input[0] instanceof Array) {\n        /// Input is an array of array\n        delta = 1;\n        for (i = 0; i < input.length; i += delta) {\n          temp = ren.worldToDisplay(\n                   vec4.fromValues(input[i][0], input[i][1], fp[2], 1.0),\n                   cam.viewMatrix(), cam.projectionMatrix(), m_width, m_height);\n          output[i].push(temp);\n        }\n      } else {\n        /// Input is a flat array of 2 or 3 dimension\n        delta = input.length % 3 === 0 ? 3 : 2;\n        if (delta === 2) {\n          for (i = 0; i < input.length; i += delta) {\n            temp = ren.worldToDisplay(vec4.fromValues(\n                     input[i], input[i + 1], fp[2], 1.0), cam.viewMatrix(),\n                     cam.projectionMatrix(),\n                     m_width, m_height);\n            output.push(temp[0]);\n            output.push(temp[1]);\n            output.push(temp[2]);\n          }\n        } else {\n          for (i = 0; i < input.length; i += delta) {\n            temp = ren.worldToDisplay(vec4.fromValues(\n                         input[i], input[i + 1], input[i + 2], 1.0), cam.viewMatrix(),\n                         cam.projectionMatrix(),\n                         m_width, m_height);\n            output.push(temp[0]);\n            output.push(temp[1]);\n            output.push(temp[2]);\n          }\n        }\n      }\n    } else if (input instanceof Object) {\n      temp = ren.worldToDisplay(vec4.fromValues(\n               input.x, input.y, fp[2], 1.0), cam.viewMatrix(),\n               cam.projectionMatrix(),\n               m_width, m_height);\n\n      output = {x: temp[0], y: temp[1], z: temp[2]};\n    } else {\n      throw \"World to display conversion requires array of 2D/3D points\";\n    }\n\n    return output;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get context specific renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.contextRenderer = function () {\n    return m_contextRenderer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get API used by the renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.api = function () {\n    return \"vgl\";\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function () {\n    if (m_this.initialized()) {\n      return m_this;\n    }\n\n    s_init.call(m_this);\n\n    m_this.canvas($(m_viewer.canvas()));\n    if (m_viewer.renderWindow().renderers().length > 0) {\n      m_contextRenderer.setLayer(m_viewer.renderWindow().renderers().length);\n      m_contextRenderer.setResetScene(false);\n    }\n    m_viewer.renderWindow().addRenderer(m_contextRenderer);\n\n    m_this.layer().node().append(m_this.canvas());\n\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle resize event\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._resize = function (x, y, w, h) {\n    m_width = w;\n    m_height = h;\n    m_this.canvas().attr(\"width\", w);\n    m_this.canvas().attr(\"height\", h);\n    m_viewer.renderWindow().positionAndResize(x, y, w, h);\n    m_this._render();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Render\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._render = function () {\n    m_viewer.render();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Exit\n   * @todo remove all vgl objects\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    geo.gl.vglViewerInstance.deleteCache(m_viewer);\n    s_exit();\n  };\n\n  this._updateRendererCamera = function () {\n    var vglRenderer = m_this.contextRenderer(),\n        renderWindow = m_viewer.renderWindow(),\n        camera = vglRenderer.camera(),\n        pos, fp, cr;\n\n    vglRenderer.resetCameraClippingRange();\n    pos = camera.position();\n    fp = camera.focalPoint();\n    cr = camera.clippingRange();\n    renderWindow.renderers().forEach(function (renderer) {\n      var cam = renderer.camera();\n\n      if (cam !== camera) {\n        cam.setPosition(pos[0], pos[1], pos[2]);\n        cam.setFocalPoint(fp[0], fp[1], fp[2]);\n        cam.setClippingRange(cr[0], cr[1]);\n        renderer.render();\n      }\n    });\n  };\n\n  // connect to interactor events\n  this.geoOn(geo.event.pan, function (evt) {\n    var vglRenderer = m_this.contextRenderer(),\n        camera,\n        focusPoint,\n        centerDisplay,\n        centerGeo,\n        newCenterDisplay,\n        newCenterGeo,\n        renderWindow,\n        layer = m_this.layer();\n\n    // only the base layer needs to respond\n    if (layer.map().baseLayer() !== layer) {\n      return;\n    }\n\n    // skip handling if the renderer is unconnected\n    if (!vglRenderer || !vglRenderer.camera()) {\n      console.log(\"Pan event triggered on unconnected vgl renderer.\");\n    }\n\n    renderWindow = m_viewer.renderWindow();\n    camera = vglRenderer.camera();\n    focusPoint = renderWindow.focusDisplayPoint();\n\n    // Calculate the center in display coordinates\n    centerDisplay = [m_width / 2, m_height / 2, 0];\n\n    // Calculate the center in world coordinates\n    centerGeo = renderWindow.displayToWorld(\n      centerDisplay[0],\n      centerDisplay[1],\n      focusPoint,\n      vglRenderer\n    );\n\n    newCenterDisplay = [\n      centerDisplay[0] + evt.screenDelta.x,\n      centerDisplay[1] + evt.screenDelta.y\n    ];\n\n    newCenterGeo = renderWindow.displayToWorld(\n      newCenterDisplay[0],\n      newCenterDisplay[1],\n      focusPoint,\n      vglRenderer\n    );\n\n    camera.pan(\n      centerGeo[0] - newCenterGeo[0],\n      centerGeo[1] - newCenterGeo[1],\n      centerGeo[2] - newCenterGeo[2]\n    );\n\n    evt.center = {\n      x: newCenterGeo[0],\n      y: newCenterGeo[1],\n      z: newCenterGeo[2]\n    };\n\n    m_this._updateRendererCamera();\n  });\n\n  this.geoOn(geo.event.zoom, function (evt) {\n    var vglRenderer = m_this.contextRenderer(),\n        camera,\n        renderWindow,\n        layer = m_this.layer(),\n        center,\n        dir,\n        focusPoint,\n        position,\n        newZ;\n\n    // only the base layer needs to respond\n    if (layer.map().baseLayer() !== layer) {\n      return;\n    }\n\n    // skip handling if the renderer is unconnected\n    if (!vglRenderer || !vglRenderer.camera()) {\n      console.log(\"Zoom event triggered on unconnected vgl renderer.\");\n    }\n\n    renderWindow = m_viewer.renderWindow();\n    camera = vglRenderer.camera();\n    focusPoint = camera.focalPoint();\n    position = camera.position();\n    newZ = 360 * Math.pow(2, -evt.zoomLevel);\n\n    evt.pan = null;\n    if (evt.screenPosition) {\n      center = renderWindow.displayToWorld(\n        evt.screenPosition.x,\n        evt.screenPosition.y,\n        focusPoint,\n        vglRenderer\n      );\n      dir = [center[0] - position[0], center[1] - position[1], center[2] - position[2]];\n      evt.center = layer.fromLocal({\n        x: position[0] + dir[0] * (1 - newZ / position[2]),\n        y: position[1] + dir[1] * (1 - newZ / position[2])\n      });\n    }\n\n    camera.setPosition(position[0], position[1], 360 * Math.pow(2, -evt.zoomLevel));\n\n    m_this._updateRendererCamera();\n  });\n\n  return this;\n};\n\ninherit(geo.gl.vglRenderer, geo.gl.renderer);\n\ngeo.registerRenderer(\"vgl\", geo.gl.vglRenderer);\n","/** @namespace */\ngeo.d3 = {};\n\n(function () {\n  'use strict';\n\n  var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz',\n    strLength = 8;\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get a random string to use as a div ID\n   * @returns {string}\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  geo.d3.uniqueID = function () {\n    var strArray = [],\n        i;\n    strArray.length = strLength;\n    for (i = 0; i < strLength; i += 1) {\n      strArray[i] = chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    return strArray.join('');\n  };\n\n  // event propagated when the d3 renderer rescales its group element\n  geo.event.d3Rescale = 'geo_d3_rescale';\n}());\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * D3 specific subclass of object which adds an id property for d3 selections\n * on groups of objects by class id.\n * @class\n * @extends geo.sceneObject\n */\n//////////////////////////////////////////////////////////////////////////////\n\ngeo.d3.object = function (arg) {\n  'use strict';\n  // this is used to extend other geojs classes, so only generate\n  // a new object when that is not the case... like if this === window\n  if (!(this instanceof geo.object)) {\n    return new geo.d3.object(arg);\n  }\n  geo.sceneObject.call(this);\n\n  var m_id = 'd3-' + geo.d3.uniqueID(),\n      s_exit = this._exit,\n      m_this = this,\n      s_draw = this.draw;\n\n  this._d3id = function () {\n    return m_id;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n  *  Returns a d3 selection for the feature elements\n  */\n  ////////////////////////////////////////////////////////////////////////////\n  this.select = function () {\n    return m_this.renderer().select(m_this._d3id());\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n  *  Redraw the object.\n  */\n  ////////////////////////////////////////////////////////////////////////////\n  this.draw = function () {\n    m_this._update();\n    s_draw();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n  *  Removes the element from the svg and the renderer\n  */\n  ////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    m_this.renderer()._removeFeature(m_this._d3id());\n    s_exit();\n  };\n\n  return this;\n};\n\ninherit(geo.d3.object, geo.sceneObject);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of pointFeature\n *\n * @class\n * @extends geo.pointFeature\n * @extends geo.d3.object\n * @returns {geo.d3.pointFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.d3.pointFeature = function (arg) {\n  'use strict';\n  if (!(this instanceof geo.d3.pointFeature)) {\n    return new geo.d3.pointFeature(arg);\n  }\n  arg = arg || {};\n  geo.pointFeature.call(this, arg);\n  geo.d3.object.call(this);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      s_init = this._init,\n      s_update = this._update,\n      m_buildTime = geo.timestamp(),\n      m_style = {},\n      m_sticky;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    s_init.call(m_this, arg);\n    m_sticky = m_this.layer().sticky();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Build\n   *\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._build = function () {\n    var data = m_this.data(),\n        s_style = m_this.style.get(),\n        m_renderer = m_this.renderer(),\n        pos_func = m_this.position();\n\n    // call super-method\n    s_update.call(m_this);\n\n    // default to empty data array\n    if (!data) { data = []; }\n\n    // fill in d3 renderer style object defaults\n    m_style.id = m_this._d3id();\n    m_style.data = data;\n    m_style.append = 'circle';\n    m_style.attributes = {\n      r: m_renderer._convertScale(s_style.radius),\n      cx: function (d) {\n        return m_renderer.worldToDisplay(pos_func(d)).x;\n      },\n      cy: function (d) {\n        return m_renderer.worldToDisplay(pos_func(d)).y;\n      }\n    };\n    m_style.style = s_style;\n    m_style.classes = ['d3PointFeature'];\n\n    // pass to renderer to draw\n    m_this.renderer()._drawFeatures(m_style);\n\n    // update time stamps\n    m_buildTime.modified();\n    m_this.updateTime().modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update\n   *\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function () {\n    s_update.call(m_this);\n\n    if (m_this.getMTime() >= m_buildTime.getMTime()) {\n      m_this._build();\n    }\n\n    return m_this;\n  };\n\n  this._init(arg);\n  return this;\n};\n\ninherit(geo.d3.pointFeature, geo.pointFeature);\n\n// Now register it\ngeo.registerFeature('d3', 'point', geo.d3.pointFeature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class lineFeature\n *\n * @class\n * @extends geo.lineFeature\n * @extends geo.d3.object\n * @returns {geo.d3.lineFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.d3.lineFeature = function (arg) {\n  'use strict';\n  if (!(this instanceof geo.d3.lineFeature)) {\n    return new geo.d3.lineFeature(arg);\n  }\n  arg = arg || {};\n  geo.lineFeature.call(this, arg);\n  geo.d3.object.call(this);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      s_init = this._init,\n      m_buildTime = geo.timestamp(),\n      s_update = this._update;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    s_init.call(m_this, arg);\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Build\n   *\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._build = function () {\n    var data = m_this.data() || [],\n        s_style = m_this.style(),\n        m_renderer = m_this.renderer(),\n        pos_func = m_this.position(),\n        line = d3.svg.line()\n                .x(function (d) { return m_renderer.worldToDisplay(d).x; })\n                .y(function (d) { return m_renderer.worldToDisplay(d).y; });\n\n    s_update.call(m_this);\n    s_style.fill = function () { return false; };\n\n    data.forEach(function (item, idx) {\n      var m_style;\n      var ln = m_this.line()(item, idx);\n\n      var style = {}, key;\n      function wrapStyle(func) {\n        if (geo.util.isFunction(func)) {\n          return function () {\n            return func(ln[0], 0, item, idx);\n          };\n        } else {\n          return func;\n        }\n      }\n      for (key in s_style) {\n        if (s_style.hasOwnProperty(key)) {\n          style[key] = wrapStyle(s_style[key]);\n        }\n      }\n\n      // item is an object representing a single line\n      // m_this.line()(item) is an array of coordinates\n      m_style = {\n        data: [ln.map(function (d, i) { return pos_func(d, i, item, idx);})],\n        append: 'path',\n        attributes: {\n          d: line\n        },\n        id: m_this._d3id() + idx,\n        classes: ['d3LineFeature', 'd3SubLine-' + idx],\n        style: style\n      };\n\n      m_renderer._drawFeatures(m_style);\n    });\n\n    m_buildTime.modified();\n    m_this.updateTime().modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update\n   *\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function () {\n    s_update.call(m_this);\n\n    if (m_this.getMTime() >= m_buildTime.getMTime()) {\n      m_this._build();\n    }\n\n    return m_this;\n  };\n\n  this._init(arg);\n  return this;\n};\n\ninherit(geo.d3.lineFeature, geo.lineFeature);\n\ngeo.registerFeature('d3', 'line', geo.d3.lineFeature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class pathFeature\n *\n * @class\n * @extends geo.pathFeature\n * @extends geo.d3.object\n * @returns {geo.d3.pathFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.d3.pathFeature = function (arg) {\n  'use strict';\n  if (!(this instanceof geo.d3.pathFeature)) {\n    return new geo.d3.pathFeature(arg);\n  }\n  arg = arg || {};\n  geo.pathFeature.call(this, arg);\n  geo.d3.object.call(this);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      s_init = this._init,\n      m_buildTime = geo.timestamp(),\n      s_update = this._update,\n      m_style = {};\n\n  m_style.style = {};\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    s_init.call(m_this, arg);\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Build\n   *\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._build = function () {\n    var data = m_this.data() || [],\n        s_style = m_this.style(),\n        m_renderer = m_this.renderer(),\n        tmp, diag;\n    s_update.call(m_this);\n\n    diag = function (d) {\n        var p = {\n          source: d.source,\n          target: d.target\n        };\n        return d3.svg.diagonal()(p);\n      };\n    tmp = [];\n    data.forEach(function (d, i) {\n      var src, trg;\n      if (i < data.length - 1) {\n        src = d;\n        trg = data[i + 1];\n        tmp.push({\n          source: m_renderer.worldToDisplay(src),\n          target: m_renderer.worldToDisplay(trg)\n        });\n      }\n    });\n    m_style.data = tmp;\n    m_style.attributes = {\n      d: diag\n    };\n\n    m_style.id = m_this._d3id();\n    m_style.append = 'path';\n    m_style.classes = ['d3PathFeature'];\n    m_style.style = $.extend({\n      'fill': function () { return false; },\n      'fillColor': function () { return { r: 0, g: 0, b: 0 }; }\n    }, s_style);\n\n    m_this.renderer()._drawFeatures(m_style);\n\n    m_buildTime.modified();\n    m_this.updateTime().modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update\n   *\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function () {\n    s_update.call(m_this);\n\n    if (m_this.dataTime().getMTime() >= m_buildTime.getMTime()) {\n      m_this._build();\n    }\n\n    return m_this;\n  };\n\n  this._init(arg);\n  return this;\n};\n\ninherit(geo.d3.pathFeature, geo.pathFeature);\n\ngeo.registerFeature('d3', 'path', geo.d3.pathFeature);\n","/**\n * @class\n * @extends geo.graphFeature\n */\ngeo.d3.graphFeature = function (arg) {\n  'use strict';\n\n  var m_this = this;\n\n  if (!(this instanceof geo.d3.graphFeature)) {\n    return new geo.d3.graphFeature(arg);\n  }\n  geo.graphFeature.call(this, arg);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n  *  Returns a d3 selection for the graph elements\n  */\n  ////////////////////////////////////////////////////////////////////////////\n  this.select = function () {\n    var renderer = m_this.renderer(),\n        selection = {},\n        node = m_this.nodeFeature(),\n        links = m_this.linkFeatures();\n    selection.nodes = renderer.select(node._d3id());\n    selection.links = links.map(function (link) {\n      return renderer.select(link._d3id());\n    });\n    return selection;\n  };\n\n  return this;\n};\n\ninherit(geo.d3.graphFeature, geo.graphFeature);\n\ngeo.registerFeature('d3', 'graph', geo.d3.graphFeature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a plane feature given a lower left corner point geo.latlng\n * and and upper right corner point geo.latlng\n *\n * *CURRENTLY BROKEN*\n *\n * @class\n * @extends geo.planeFeature\n * @param lowerleft\n * @param upperright\n * @returns {geo.d3.planeFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.d3.planeFeature = function (arg) {\n  'use strict';\n  if (!(this instanceof geo.d3.planeFeature)) {\n    return new geo.d3.planeFeature(arg);\n  }\n  geo.planeFeature.call(this, arg);\n  geo.d3.object.call(this);\n\n  var m_this = this,\n      m_style = {},\n      s_update = this._update,\n      s_init = this._init,\n      m_buildTime = geo.timestamp();\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Normalize a coordinate as an object {x: ..., y: ...}\n   *\n   * @private\n   * @returns {Object}\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  function normalize(pt) {\n    if (Array.isArray(pt)) {\n      return {\n        x: pt[0],\n        y: pt[1]\n      };\n    } else if (pt instanceof geo.latlng) {\n      return {\n        x: pt.x(),\n        y: pt.y()\n      };\n    }\n    return pt;\n  }\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Build the feature object and pass to the renderer for drawing.\n   *\n   * @private\n   * @returns {geo.d3.planeFeature}\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this._build = function () {\n    var origin = normalize(m_this.origin()),\n        ul = normalize(m_this.upperLeft()),\n        lr = normalize(m_this.lowerRight()),\n        renderer = m_this.renderer(),\n        s = m_this.style();\n\n    delete s.fill_color;\n    delete s.color;\n    delete s.opacity;\n    if (!s.screenCoordinates) {\n      origin = renderer.worldToDisplay(origin);\n      ul = renderer.worldToDisplay(ul);\n      lr = renderer.worldToDisplay(lr);\n    }\n    m_style.id = m_this._d3id();\n    m_style.style = s;\n    m_style.attributes = {\n      x: ul.x,\n      y: ul.y,\n      width: lr.x - origin.x,\n      height: origin.y - ul.y\n    };\n    m_style.append = 'rect';\n    m_style.data = [0];\n    m_style.classes = ['d3PlaneFeature'];\n\n    renderer._drawFeatures(m_style);\n    m_buildTime.modified();\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Redraw the plane feature if necessary.\n   *\n   * @private\n   * @returns {geo.d3.planeFeature}\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this._update = function () {\n    s_update.call(m_this);\n\n    if (m_this.dataTime().getMTime() >= m_buildTime.getMTime()) {\n      m_this._build();\n    }\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initializes the plane feature style (over-riding the parent default).\n   *\n   * @private\n   * @returns {geo.d3.planeFeature}\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    s_init.call(m_this, arg || {});\n    m_this.style({\n      stroke: function () { return false; },\n      fill: function () { return true; },\n      fillColor: function () { return {r: 0.3, g: 0.3, b: 0.3}; },\n      fillOpacity: function () { return 0.5; }\n    });\n    return m_this;\n  };\n\n  this._init();\n  return this;\n};\n\ninherit(geo.d3.planeFeature, geo.planeFeature);\n\ngeo.registerFeature('d3', 'plane', geo.d3.planeFeature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of vectorFeature\n *\n * @class\n * @extends geo.vectorFeature\n * @extends geo.d3.object\n * @returns {geo.d3.vectorFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.d3.vectorFeature = function (arg) {\n  'use strict';\n  if (!(this instanceof geo.d3.vectorFeature)) {\n    return new geo.d3.vectorFeature(arg);\n  }\n  arg = arg || {};\n  geo.vectorFeature.call(this, arg);\n  geo.d3.object.call(this);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      s_init = this._init,\n      s_exit = this._exit,\n      s_update = this._update,\n      m_buildTime = geo.timestamp(),\n      m_style = {},\n      m_sticky;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Generate a unique ID for a marker definition\n   * @private\n   * @param {object} d Unused datum (for d3 compat)\n   * @param {number} i The marker index\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function markerID(d, i) {\n    return m_this._d3id() + '_marker_' + i;\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Add marker styles for vector arrows.\n   * @private\n   * @param {object[]} data The vector data array\n   * @param {function} stroke The stroke accessor\n   * @param {function} opacity The opacity accessor\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function updateMarkers(data, stroke, opacity) {\n\n    var renderer = m_this.renderer();\n    var sel = m_this.renderer()._definitions()\n      .selectAll('marker.geo-vector')\n        .data(data);\n    sel.enter()\n      .append('marker')\n        .attr('id', markerID)\n        .attr('class', 'geo-vector')\n        .attr('viewBox', '0 0 10 10')\n        .attr('refX', '1')\n        .attr('refY', '5')\n        .attr('markerWidth', '5')\n        .attr('markerHeight', '5')\n        .attr('orient', 'auto')\n        .append('path')\n          .attr('d', 'M 0 0 L 10 5 L 0 10 z');\n\n    sel.exit().remove();\n\n    sel.style('stroke', renderer._convertColor(stroke))\n      .style('fill', renderer._convertColor(stroke))\n      .style('opacity', opacity);\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   * @protected\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    s_init.call(m_this, arg);\n    m_sticky = m_this.layer().sticky();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Build\n   * @protected\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._build = function () {\n    var data = m_this.data(),\n        s_style = m_this.style.get(),\n        m_renderer = m_this.renderer(),\n        orig_func = m_this.origin(),\n        size_func = m_this.delta(),\n        cache = [],\n        scale = m_this.style('scale'),\n        max = Number.NEGATIVE_INFINITY;\n\n    // call super-method\n    s_update.call(m_this);\n\n    // default to empty data array\n    if (!data) { data = []; }\n\n    // cache the georeferencing\n    cache = data.map(function (d, i) {\n      var origin = m_renderer.worldToDisplay(orig_func(d, i)),\n          delta = size_func(d, i);\n      max = Math.max(max, delta.x * delta.x + delta.y * delta.y);\n      return {\n        x1: origin.x,\n        y1: origin.y,\n        dx: delta.x,\n        dy: -delta.y\n      };\n    });\n\n    max = Math.sqrt(max);\n    if (!scale) {\n      scale = 75 / max;\n    }\n\n    function getScale() {\n      return scale / m_renderer.scaleFactor();\n    }\n\n    // fill in d3 renderer style object defaults\n    m_style.id = m_this._d3id();\n    m_style.data = data;\n    m_style.append = 'line';\n    m_style.attributes = {\n      x1: function (d, i) {\n        return cache[i].x1;\n      },\n      y1: function (d, i) {\n        return cache[i].y1;\n      },\n      x2: function (d, i) {\n        return cache[i].x1 + getScale() * cache[i].dx;\n      },\n      y2: function (d, i) {\n        return cache[i].y1 + getScale() * cache[i].dy;\n      },\n      'marker-end': function (d, i) {\n        return 'url(#' + markerID(d, i) + ')';\n      }\n    };\n    m_style.style = {\n      stroke: function () { return true; },\n      strokeColor: s_style.strokeColor,\n      strokeWidth: s_style.strokeWidth,\n      strokeOpacity: s_style.strokeOpacity\n    };\n    m_style.classes = ['d3VectorFeature'];\n\n    // Add markers to the defition list\n    updateMarkers(data, s_style.strokeColor, s_style.strokeOpacity);\n\n    // pass to renderer to draw\n    m_this.renderer()._drawFeatures(m_style);\n\n    // update time stamps\n    m_buildTime.modified();\n    m_this.updateTime().modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update\n   * @protected\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function () {\n    s_update.call(m_this);\n\n    if (m_this.getMTime() >= m_buildTime.getMTime()) {\n      m_this._build();\n    } else {\n      updateMarkers(\n        m_style.data,\n        m_style.style.strokeColor,\n        m_style.style.strokeOpacity\n      );\n    }\n\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Exit\n   * @protected\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    s_exit.call(m_this);\n    m_style = {};\n    updateMarkers([], null, null);\n  };\n\n  this._init(arg);\n  return this;\n};\n\ninherit(geo.d3.vectorFeature, geo.vectorFeature);\n\n// Now register it\ngeo.registerFeature('d3', 'vector', geo.d3.vectorFeature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class d3Renderer\n *\n * @class\n * @extends geo.renderer\n * @returns {geo.d3.d3Renderer}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.d3.d3Renderer = function (arg) {\n  'use strict';\n\n  if (!(this instanceof geo.d3.d3Renderer)) {\n    return new geo.d3.d3Renderer(arg);\n  }\n  geo.renderer.call(this, arg);\n\n  var s_exit = this._exit;\n\n  geo.d3.object.call(this, arg);\n\n  arg = arg || {};\n\n  var m_this = this,\n      m_sticky = null,\n      m_features = {},\n      m_corners = null,\n      m_width = null,\n      m_height = null,\n      m_scale = 1,\n      m_dx = 0,\n      m_dy = 0,\n      m_svg = null,\n      m_defs = null;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set attributes to a d3 selection.\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function setAttrs(select, attrs) {\n    var key;\n    for (key in attrs) {\n      if (attrs.hasOwnProperty(key)) {\n        select.attr(key, attrs[key]);\n      }\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Meta functions for converting from geojs styles to d3.\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._convertColor = function (f, g) {\n    f = geo.util.ensureFunction(f);\n    g = g || function () { return true; };\n    return function () {\n      var c = 'none';\n      if (g.apply(this, arguments)) {\n        c = f.apply(this, arguments);\n        if (c.hasOwnProperty('r') &&\n            c.hasOwnProperty('g') &&\n            c.hasOwnProperty('b')) {\n          c = d3.rgb(255 * c.r, 255 * c.g, 255 * c.b);\n        }\n      }\n      return c;\n    };\n  };\n\n  this._convertPosition = function (f) {\n    f = geo.util.ensureFunction(f);\n    return function () {\n      return m_this.worldToDisplay(f.apply(this, arguments));\n    };\n  };\n\n  this._convertScale = function (f) {\n    f = geo.util.ensureFunction(f);\n    return function () {\n      return f.apply(this, arguments) / m_scale;\n    };\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set styles to a d3 selection. Ignores unkown style keys.\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function setStyles(select, styles) {\n    /* jshint validthis:true */\n    var key, k, f;\n    function fillFunc() {\n      if (styles.fill.apply(this, arguments)) {\n        return null;\n      } else {\n        return 'none';\n      }\n    }\n    function strokeFunc() {\n      if (styles.stroke.apply(this, arguments)) {\n        return null;\n      } else {\n        return 'none';\n      }\n    }\n    for (key in styles) {\n      if (styles.hasOwnProperty(key)) {\n        f = null;\n        k = null;\n        if (key === 'strokeColor') {\n          k = 'stroke';\n          f = m_this._convertColor(styles[key], styles.stroke);\n        } else if (key === 'stroke' && styles[key]) {\n          k = 'stroke';\n          f = strokeFunc;\n        } else if (key === 'strokeWidth') {\n          k = 'stroke-width';\n          f = m_this._convertScale(styles[key]);\n        } else if (key === 'strokeOpacity') {\n          k = 'stroke-opacity';\n          f = styles[key];\n        } else if (key === 'fillColor') {\n          k = 'fill';\n          f = m_this._convertColor(styles[key], styles.fill);\n        } else if (key === 'fill' && !styles.hasOwnProperty('fillColor')) {\n          k = 'fill';\n          f = fillFunc;\n        } else if (key === 'fillOpacity') {\n          k = 'fill-opacity';\n          f = styles[key];\n        }\n        if (k) {\n          select.style(k, f);\n        }\n      }\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get the map instance or return null if not connected to a map.\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function getMap() {\n    var layer = m_this.layer();\n    if (!layer) {\n      return null;\n    }\n    return layer.map();\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get the svg group element associated with this renderer instance.\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function getGroup() {\n    return m_svg.select('.group-' + m_this._d3id());\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set the initial lat-lon coordinates of the map view.\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function initCorners() {\n    var layer = m_this.layer(),\n        map = layer.map(),\n        width = m_this.layer().width(),\n        height = m_this.layer().height();\n\n    m_width = width;\n    m_height = height;\n    if (!m_width || !m_height) {\n      throw 'Map layer has size 0';\n    }\n    m_corners = {\n      'upperLeft': map.displayToGcs({'x': 0, 'y': 0}),\n      'lowerRight': map.displayToGcs({'x': width, 'y': height})\n    };\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set the translation, scale, and zoom for the current view.\n   * @note rotation not yet supported\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function setTransform() {\n\n    if (!m_corners) {\n      initCorners();\n    }\n\n    if (!m_sticky) {\n      return;\n    }\n\n    var layer = m_this.layer(),\n        map = layer.map(),\n        upperLeft = map.gcsToDisplay(m_corners.upperLeft),\n        lowerRight = map.gcsToDisplay(m_corners.lowerRight),\n        group = getGroup(),\n        dx, dy, scale;\n\n    // calculate the translation\n    dx = upperLeft.x;\n    dy = upperLeft.y;\n\n    // calculate the scale\n    scale = (lowerRight.y - upperLeft.y) / m_height;\n\n    // set the group transform property\n    group.attr('transform', 'matrix(' + [scale, 0, 0, scale, dx, dy].join() + ')');\n\n    // set internal variables\n    m_scale = scale;\n    m_dx = dx;\n    m_dy = dy;\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Convert from screen pixel coordinates to the local coordinate system\n   * in the SVG group element taking into account the transform.\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function baseToLocal(pt) {\n    return {\n      x: (pt.x - m_dx) / m_scale,\n      y: (pt.y - m_dy) / m_scale\n    };\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Convert from the local coordinate system in the SVG group element\n   * to screen pixel coordinates.\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function localToBase(pt) {\n    return {\n      x: pt.x * m_scale + m_dx,\n      y: pt.y * m_scale + m_dy\n    };\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function () {\n    if (!m_this.canvas()) {\n      var canvas;\n      m_svg = d3.select(m_this.layer().node().get(0)).append('svg');\n\n      // create a global svg definitions element\n      m_defs = m_svg.append('defs');\n\n      var shadow = m_defs\n        .append('filter')\n          .attr('id', 'geo-highlight')\n          .attr('x', '-100%')\n          .attr('y', '-100%')\n          .attr('width', '300%')\n          .attr('height', '300%');\n      shadow\n        .append('feMorphology')\n          .attr('operator', 'dilate')\n          .attr('radius', 2)\n          .attr('in', 'SourceAlpha')\n          .attr('result', 'dilateOut');\n      shadow\n        .append('feGaussianBlur')\n          .attr('stdDeviation', 5)\n          .attr('in', 'dilateOut')\n          .attr('result', 'blurOut');\n      shadow\n        .append('feColorMatrix')\n          .attr('type', 'matrix')\n          .attr('values', '-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0')\n          .attr('in', 'blurOut')\n          .attr('result', 'invertOut');\n      shadow\n        .append('feBlend')\n          .attr('in', 'SourceGraphic')\n          .attr('in2', 'invertOut')\n          .attr('mode', 'normal');\n      canvas = m_svg.append('g');\n\n      shadow = m_defs.append('filter')\n          .attr('id', 'geo-blur')\n          .attr('x', '-100%')\n          .attr('y', '-100%')\n          .attr('width', '300%')\n          .attr('height', '300%');\n\n      shadow\n        .append('feGaussianBlur')\n          .attr('stdDeviation', 20)\n          .attr('in', 'SourceGraphic');\n\n      m_sticky = m_this.layer().sticky();\n      m_svg.attr('class', m_this._d3id());\n      m_svg.attr('width', m_this.layer().node().width());\n      m_svg.attr('height', m_this.layer().node().height());\n\n      canvas.attr('class', 'group-' + m_this._d3id());\n\n      m_this.canvas(canvas);\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Convert from coordinates in the svg group element to lat/lon.\n   * Supports objects or arrays of objects.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.displayToWorld = function (pt) {\n    var map = getMap();\n    if (!map) {\n      throw 'Cannot project until this layer is connected to a map.';\n    }\n    if (Array.isArray(pt)) {\n      pt = pt.map(function (x) {\n        return map.displayToGcs(localToBase(x));\n      });\n    } else {\n      pt = map.displayToGcs(localToBase(pt));\n    }\n    return pt;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Convert from lat/lon to pixel coordinates in the svg group element.\n   * Supports objects or arrays of objects.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.worldToDisplay = function (pt) {\n    var map = getMap();\n    if (!map) {\n      throw 'Cannot project until this layer is connected to a map.';\n    }\n    var v;\n    if (Array.isArray(pt)) {\n      v = pt.map(function (x) {\n        return baseToLocal(map.gcsToDisplay(x));\n      });\n    } else {\n      v = baseToLocal(map.gcsToDisplay(pt));\n    }\n    return v;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get API used by the renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.api = function () {\n    return 'd3';\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return the current scaling factor to build features that shouldn't\n   * change size during zooms.  For example:\n   *\n   *  selection.append('circle')\n   *    .attr('r', r0 / renderer.scaleFactor());\n   *\n   * This will create a circle element with radius r0 independent of the\n   * current zoom level.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.scaleFactor = function () {\n    return m_scale;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle resize event\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._resize = function (x, y, w, h) {\n    if (!m_corners) {\n      initCorners();\n    }\n    m_svg.attr('width', w);\n    m_svg.attr('height', h);\n    setTransform();\n    m_this.layer().geoTrigger(geo.event.d3Rescale, { scale: m_scale }, true);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update noop for geo.d3.object api.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function () {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Exit\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    m_features = {};\n    m_this.canvas().remove();\n    s_exit();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get the definitions dom element for the layer\n   * @protected\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._definitions = function () {\n    return m_defs;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create a new feature element from an object that describes the feature\n   * attributes.  To be called from feature classes only.\n   *\n   * Input:\n   *  {\n   *    id:         A unique string identifying the feature.\n   *    data:       Array of data objects used in a d3 data method.\n   *    index:      A function that returns a unique id for each data element.\n   *    style:      An object containing element CSS styles.\n   *    attributes: An object containing element attributes.\n   *    classes:    An array of classes to add to the elements.\n   *    append:     The element type as used in d3 append methods.\n   *  }\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._drawFeatures = function (arg) {\n    m_features[arg.id] = {\n      data: arg.data,\n      index: arg.dataIndex,\n      style: arg.style,\n      attributes: arg.attributes,\n      classes: arg.classes,\n      append: arg.append\n    };\n    return m_this.__render(arg.id);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n  *  Updates a feature by performing a d3 data join.  If no input id is\n  *  provided then this method will update all features.\n  */\n  ////////////////////////////////////////////////////////////////////////////\n  this.__render = function (id) {\n    var key;\n    if (id === undefined) {\n      for (key in m_features) {\n        if (m_features.hasOwnProperty(key)) {\n          m_this.__render(key);\n        }\n      }\n      return m_this;\n    }\n    var data = m_features[id].data,\n        index = m_features[id].index,\n        style = m_features[id].style,\n        attributes = m_features[id].attributes,\n        classes = m_features[id].classes,\n        append = m_features[id].append,\n        selection = m_this.select(id).data(data, index);\n    selection.enter().append(append);\n    selection.exit().remove();\n    setAttrs(selection, attributes);\n    selection.attr('class', classes.concat([id]).join(' '));\n    setStyles(selection, style);\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n  *  Returns a d3 selection for the given feature id.\n  */\n  ////////////////////////////////////////////////////////////////////////////\n  this.select = function (id) {\n    return getGroup().selectAll('.' + id);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n  *  Removes a feature from the layer.\n  */\n  ////////////////////////////////////////////////////////////////////////////\n  this._removeFeature = function (id) {\n    m_this.select(id).remove();\n    delete m_features[id];\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n  *  Override draw method to do nothing.\n  */\n  ////////////////////////////////////////////////////////////////////////////\n  this.draw = function () {\n  };\n\n  // connect to pan event\n  this.layer().geoOn(geo.event.pan, setTransform);\n\n  // connect to zoom event\n  this.layer().geoOn(geo.event.zoom, function () {\n    setTransform();\n    m_this.__render();\n    m_this.layer().geoTrigger(geo.event.d3Rescale, { scale: m_scale }, true);\n  });\n\n  this.layer().geoOn(geo.event.resize, function (event) {\n    m_this._resize(event.x, event.y, event.width, event.height);\n  });\n\n  this._init(arg);\n  return this;\n};\n\ninherit(geo.d3.d3Renderer, geo.renderer);\n\ngeo.registerRenderer('d3', geo.d3.d3Renderer);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @namespace\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.gui = {};\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class uiLayer\n *\n * @class\n * @extends {geo.layer}\n * @returns {geo.gui.uiLayer}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.gui.uiLayer = function (arg) {\n  'use strict';\n\n  // The widget stays fixed on the screen.  (only available in d3 at the moment)\n  arg.renderer = 'd3';\n  arg.sticky = false;\n\n  if (!(this instanceof geo.gui.uiLayer)) {\n    return new geo.gui.uiLayer(arg);\n  }\n  geo.layer.call(this, arg);\n\n  var m_this = this,\n      s_exit = this._exit;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create a new ui control\n   *\n   * @returns {geo.gui.Widget} Will return a new control widget\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.createWidget = function (widgetName, arg) {\n\n    var newWidget = geo.createWidget(\n      widgetName, m_this, m_this.renderer(), arg);\n\n    m_this.addChild(newWidget);\n    newWidget._init();\n    m_this.modified();\n    return newWidget;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Delete a ui control\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.deleteWidget = function (widget) {\n    widget._exit();\n    m_this.removeChild(widget);\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Free memory and destroy the layer.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    m_this.children().forEach(function (child) {\n      m_this.deleteWidget(child);\n    });\n    s_exit();\n  };\n};\n\ninherit(geo.gui.uiLayer, geo.layer);\n\ngeo.registerLayer('ui', geo.gui.uiLayer);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class widget\n *\n * @class\n * @extends {geo.sceneObject}\n * @returns {geo.gui.widget}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.gui.widget = function (arg) {\n  'use strict';\n  if (!(this instanceof geo.gui.widget)) {\n    return new geo.gui.widget(arg);\n  }\n  geo.sceneObject.call(this, arg);\n\n  var m_this = this,\n      s_exit = this._exit,\n      m_layer = arg.layer;\n\n  this._init = function () {\n    m_this.modified();\n  };\n\n  this._exit = function () {\n    m_this.children().forEach(function (child) {\n      m_this._deleteFeature(child);\n    });\n    s_exit();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create feature give a name\n   *\n   * @returns {geo.Feature} Will return a new feature\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._createFeature = function (featureName, arg) {\n\n    var newFeature = geo.createFeature(\n      featureName, m_this, m_this.renderer(), arg);\n\n    m_this.addChild(newFeature);\n    m_this.modified();\n    return newFeature;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Delete feature\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._deleteFeature = function (feature) {\n    m_this.removeChild(feature);\n    feature._exit();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return the layer associated with this widget.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.layer = function () {\n    return m_layer;\n  };\n};\ninherit(geo.gui.widget, geo.sceneObject);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class sliderWidget\n *\n * @class\n * @extends {geo.gui.widget}\n * @returns {geo.gui.sliderWidget}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.gui.sliderWidget = function (arg) {\n  'use strict';\n  if (!(this instanceof geo.gui.sliderWidget)) {\n    return new geo.gui.sliderWidget(arg);\n  }\n  geo.gui.widget.call(this, arg);\n\n  var m_this = this,\n      s_exit = this._exit,\n      m_xscale,\n      m_yscale,\n      m_plus,\n      m_minus,\n      m_track,\n      m_nub,\n      m_width = 20, // Approximate size of the widget in pixels\n      m_height = 100,\n      m_nubSize = 10,\n      m_plusIcon,\n      m_minusIcon,\n      m_group,\n      m_lowContrast,\n      m_highlightDur = 100;\n\n  /* http://icomoon.io */\n  /* CC BY 3.0 http://creativecommons.org/licenses/by/3.0/ */\n  /* jshint -W101 */\n  m_plusIcon = 'M512 81.92c-237.568 0-430.080 192.614-430.080 430.080 0 237.568 192.563 430.080 430.080 430.080s430.080-192.563 430.080-430.080c0-237.517-192.563-430.080-430.080-430.080zM564.326 564.326v206.182h-104.653v-206.182h-206.234v-104.653h206.182v-206.234h104.704v206.182h206.182v104.704h-206.182z';\n  m_minusIcon = 'M512 81.92c-237.568 0-430.080 192.614-430.080 430.080 0 237.568 192.563 430.080 430.080 430.080s430.080-192.563 430.080-430.080c0-237.517-192.563-430.080-430.080-430.080zM770.56 459.674v104.704h-517.12v-104.704h517.12z';\n  /* jshint +W101 */\n\n  // Define off-white gray colors for low contrast ui (unselected).\n  m_lowContrast = {\n    white: '#f4f4f4',\n    black: '#505050'\n  };\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Add an icon from a path string.  Returns a d3 group element.\n *\n * @function\n * @argument {String} icon svg path string\n * @argument {Array} base where to append the element (d3 selection)\n * @argument {Number} cx Center x-coordinate\n * @argument {Number} cy Center y-coordinate\n * @argument {Number} size Icon size in pixels\n * @returns {object}\n * @private\n */\n//////////////////////////////////////////////////////////////////////////////\n  function put_icon(icon, base, cx, cy, size) {\n    var g = base.append('g');\n\n    // the scale factor\n    var s = size / 1024;\n\n    g.append('g')\n      .append('g')\n        .attr(\n          'transform',\n          'translate(' + cx + ',' + cy + ') scale(' + s + ') translate(-512,-512)'\n      )\n      .append('path')\n        .attr('d', icon)\n        .attr('class', 'geo-glyphicon');\n\n    return g;\n  }\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Initialize the slider widget in the map.\n *\n * @function\n * @returns {geo.gui.sliderWidget}\n * @private\n */\n//////////////////////////////////////////////////////////////////////////////\n  this._init = function () {\n    var svg = m_this.layer().renderer().canvas(),\n        x0 = 40,\n        y0 = 40 + m_width,\n        map = m_this.layer().map();\n\n    // create d3 scales for positioning\n    // TODO: make customizable and responsive\n    m_xscale = d3.scale.linear().domain([-4, 4]).range([x0, x0 + m_width]);\n    m_yscale = d3.scale.linear().domain([0, 1]).range([y0, y0 + m_height]);\n\n    // Create the main group element\n    svg = svg.append('g').classed('geo-ui-slider', true);\n    m_group = svg;\n\n    // Create + zoom button\n    m_plus = svg.append('g');\n    m_plus.append('circle')\n      .datum({\n        fill: 'white',\n        stroke: null\n      })\n      .classed('geo-zoom-in', true)\n      .attr('cx', m_xscale(0))\n      .attr('cy', m_yscale(0.0) - m_width + 2)\n      .attr('r', m_width / 2)\n      .style({\n        'cursor': 'pointer'\n      })\n      .on('click', function () {\n        var z = map.zoom();\n        map.transition({\n          zoom: z + 1,\n          ease: d3.ease('cubic-in-out'),\n          duration: 500\n        });\n      })\n      .on('mousedown', function () {\n        d3.event.stopPropagation();\n      });\n\n    put_icon(\n      m_plusIcon,\n      m_plus,\n      m_xscale(0),\n      m_yscale(0) - m_width + 2,\n      m_width + 5\n    ).style('cursor', 'pointer')\n      .style('pointer-events', 'none')\n      .select('path')\n      .datum({\n        fill: 'black',\n        stroke: null\n      });\n\n    // Create the - zoom button\n    m_minus = svg.append('g');\n    m_minus.append('circle')\n      .datum({\n        fill: 'white',\n        stroke: null\n      })\n      .classed('geo-zoom-out', true)\n      .attr('cx', m_xscale(0))\n      .attr('cy', m_yscale(1.0) + m_width - 2)\n      .attr('r', m_width / 2)\n      .style({\n        'cursor': 'pointer'\n      })\n      .on('click', function () {\n        var z = map.zoom();\n        map.transition({\n          zoom: z - 1,\n          ease: d3.ease('cubic-in-out'),\n          duration: 500\n        });\n      })\n      .on('mousedown', function () {\n        d3.event.stopPropagation();\n      });\n\n    put_icon(\n      m_minusIcon,\n      m_minus,\n      m_xscale(0),\n      m_yscale(1) + m_width - 2,\n      m_width + 5\n    ).style('cursor', 'pointer')\n      .style('pointer-events', 'none')\n      .select('path')\n      .datum({\n        fill: 'black',\n        stroke: null\n      });\n\n    // Respond to a mouse event on the widget\n    function respond(evt, trans) {\n      var z = m_yscale.invert(d3.mouse(m_this.layer().node()[0])[1]),\n          zrange = map.zoomRange();\n      z = (1 - z) * (zrange.max - zrange.min) + zrange.min;\n      if (trans) {\n        map.transition({\n          zoom: z,\n          ease: d3.ease('cubic-in-out'),\n          duration: 500,\n          done: m_this._update()\n        });\n      } else {\n        map.zoom(z);\n        m_this._update();\n      }\n      evt.stopPropagation();\n    }\n\n    // Create the track\n    m_track = svg.append('rect')\n      .datum({\n        fill: 'white',\n        stroke: 'black'\n      })\n      .classed('geo-zoom-track', true)\n      .attr('x', m_xscale(0) - m_width / 6)\n      .attr('y', m_yscale(0))\n      .attr('rx', m_width / 10)\n      .attr('ry', m_width / 10)\n      .attr('width', m_width / 3)\n      .attr('height', m_height)\n      .style({\n        'cursor': 'pointer'\n      })\n      .on('click', function () {\n        respond(d3.event, true);\n      });\n\n    // Create the nub\n    m_nub = svg.append('rect')\n      .datum({\n        fill: 'black',\n        stroke: null\n      })\n      .classed('geo-zoom-nub', true)\n      .attr('x', m_xscale(-4))\n      .attr('y', m_yscale(0.5) - m_nubSize / 2)\n      .attr('rx', 3)\n      .attr('ry', 3)\n      .attr('width', m_width)\n      .attr('height', m_nubSize)\n      .style({\n        'cursor': 'pointer'\n      })\n      .on('mousedown', function () {\n        d3.select(document).on('mousemove.geo.slider', function () {\n          respond(d3.event);\n        });\n        d3.select(document).on('mouseup.geo.slider', function () {\n          respond(d3.event);\n          d3.select(document).on('.geo.slider', null);\n        });\n        d3.event.stopPropagation();\n      });\n\n    var mouseOver = function () {\n      d3.select(this).attr('filter', 'url(#geo-highlight)');\n      m_group.selectAll('rect,path,circle').transition()\n        .duration(m_highlightDur)\n        .style('fill', function (d) {\n          return d.fill || null;\n        })\n        .style('stroke', function (d) {\n          return d.stroke || null;\n        });\n\n    };\n\n    var mouseOut = function () {\n      d3.select(this).attr('filter', null);\n      m_group.selectAll('circle,rect,path').transition()\n        .duration(m_highlightDur)\n        .style('fill', function (d) {\n          return m_lowContrast[d.fill] || null;\n        })\n        .style('stroke', function (d) {\n          return m_lowContrast[d.stroke] || null;\n        });\n    };\n\n    m_group.selectAll('*')\n      .on('mouseover', mouseOver)\n      .on('mouseout', mouseOut);\n\n    // Update the nub position on zoom\n    m_this.layer().geoOn(geo.event.zoom, function () {\n      m_this._update();\n    });\n\n    mouseOut();\n    m_this._update();\n  };\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Removes the slider element from the map and unbinds all handlers.\n *\n * @function\n * @returns {geo.gui.sliderWidget}\n * @private\n */\n//////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    m_group.remove();\n    m_this.layer().geoOff(geo.event.zoom);\n    s_exit();\n  };\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Update the slider widget state in reponse to map changes.  I.e. zoom\n * range changes.\n *\n * @function\n * @returns {geo.gui.sliderWidget}\n * @private\n */\n//////////////////////////////////////////////////////////////////////////////\n  this._update = function (obj) {\n    var map = m_this.layer().map(),\n        zoomRange = map.zoomRange(),\n        zoom = map.zoom(),\n        zoomScale = d3.scale.linear();\n\n    obj = obj || {};\n    zoom = obj.value || zoom;\n    zoomScale.domain([zoomRange.min, zoomRange.max])\n      .range([1, 0])\n      .clamp(true);\n\n    m_nub.attr('y', m_yscale(zoomScale(zoom)) - m_nubSize / 2);\n  };\n};\n\ninherit(geo.gui.sliderWidget, geo.gui.widget);\n\ngeo.registerWidget('d3', 'slider', geo.gui.sliderWidget);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class legendWidget\n *\n * @class\n * @extends geo.gui.widget\n * @returns {geo.gui.legendWidget}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.gui.legendWidget = function (arg) {\n  'use strict';\n  if (!(this instanceof geo.gui.legendWidget)) {\n    return new geo.gui.legendWidget(arg);\n  }\n  geo.gui.widget.call(this, arg);\n\n  /** @private */\n  var m_this = this,\n      m_categories = [],\n      m_top = null,\n      m_group = null,\n      m_border = null,\n      m_spacing = 20, // distance in pixels between lines\n      m_padding = 12; // padding in pixels inside the border\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get or set the category array associated with\n   * the legend.  Each element of this array is\n   * an object: ::\n   *     {\n   *         name: string,\n   *         style: object,\n   *         type: 'point' | 'line' | ...\n   *     }\n   *\n   * The style property can contain the following feature styles:\n   *     * fill: bool\n   *     * fillColor: object | string\n   *     * fillOpacity: number\n   *     * stroke: bool\n   *     * strokeColor: object | string\n   *     * strokeWidth: number\n   *     * strokeOpacity: number\n   *\n   * The type controls how the element is displayed, point as a circle,\n   * line as a line segment.  Any other value will display as a rounded\n   * rectangle.\n   *\n   * @param {object[]?} categories The categories to display\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.categories = function (arg) {\n    if (arg === undefined) {\n      return m_categories.slice();\n    }\n    m_categories = arg.slice().map(function (d) {\n      if (d.type === 'line') {\n        d.style.fill = false;\n        d.style.stroke = true;\n      }\n      return d;\n    });\n    m_this.draw();\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get the widget's size\n   * @return {{width: number, height: number}} The size in pixels\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.size = function () {\n    var width = 1, height;\n    var test =  m_this.layer().renderer().canvas().append('text')\n      .style('opacity', 1e-6);\n\n    m_categories.forEach(function (d) {\n      test.text(d.name);\n      width = Math.max(width, test.node().getBBox().width);\n    });\n    test.remove();\n\n    height = m_spacing * (m_categories.length + 1);\n    return {\n      width: width + 50,\n      height: height\n    };\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Redraw the legend\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.draw = function () {\n\n    m_this._init();\n    function applyColor(selection) {\n      selection.style('fill', function (d) {\n          if (d.style.fill || d.style.fill === undefined) {\n            return d.style.fillColor;\n          } else {\n            return 'none';\n          }\n        })\n        .style('fill-opacity', function (d) {\n          if (d.style.fillOpacity === undefined) {\n            return 1;\n          }\n          return d.style.fillOpacity;\n        })\n        .style('stroke', function (d) {\n          if (d.style.stroke || d.style.stroke === undefined) {\n            return d.style.strokeColor;\n          } else {\n            return 'none';\n          }\n        })\n        .style('stroke-opacity', function (d) {\n          if (d.style.strokeOpacity === undefined) {\n            return 1;\n          }\n          return d.style.strokeOpacity;\n        })\n        .style('stroke-width', function (d) {\n          if (d.style.strokeWidth === undefined) {\n            return 1.5;\n          }\n          return d.style.strokeWidth;\n        });\n    }\n\n    m_border.attr('height', m_this.size().height + 2 * m_padding)\n      .style('display', null);\n\n    var scale = m_this._scale();\n\n    var labels = m_group.selectAll('g.geo-label')\n      .data(m_categories, function (d) { return d.name; });\n\n    var g = labels.enter().append('g')\n      .attr('class', 'geo-label')\n      .attr('transform', function (d, i) {\n        return 'translate(0,' + scale.y(i) + ')';\n      });\n\n    applyColor(g.filter(function (d) {\n        return d.type !== 'point' && d.type !== 'line';\n      }).append('rect')\n        .attr('x', 0)\n        .attr('y', -6)\n        .attr('rx', 5)\n        .attr('ry', 5)\n        .attr('width', 40)\n        .attr('height', 12)\n    );\n\n    applyColor(g.filter(function (d) {\n        return d.type === 'point';\n      }).append('circle')\n        .attr('cx', 20)\n        .attr('cy', 0)\n        .attr('r', 6)\n    );\n\n    applyColor(g.filter(function (d) {\n        return d.type === 'line';\n      }).append('line')\n        .attr('x1', 0)\n        .attr('y1', 0)\n        .attr('x2', 40)\n        .attr('y2', 0)\n    );\n\n    g.append('text')\n      .attr('x', '50px')\n      .attr('y', 0)\n      .attr('dy', '0.3em')\n      .text(function (d) {\n        return d.name;\n      });\n\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get scales for the x and y axis for the current size.\n   * @private\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this._scale = function () {\n    return {\n      x: d3.scale.linear()\n        .domain([0, 1])\n        .range([0, m_this.size().width]),\n      y: d3.scale.linear()\n        .domain([0, m_categories.length - 1])\n        .range([m_padding / 2, m_this.size().height - m_padding / 2])\n    };\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Private initialization.  Creates the widget's DOM container and internal\n   * variables.\n   * @private\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this._init = function () {\n    var w = m_this.size().width + 2 * m_padding,\n        h = m_this.size().height + 2 * m_padding,\n        nw = m_this.layer().map().node().width(),\n        margin = 20;\n    if (m_top) {\n      m_top.remove();\n    }\n    m_top = m_this.layer().renderer().canvas().append('g')\n        .attr('transform', 'translate(' + (nw - w - margin) + ',' + margin + ')');\n    m_group = m_top\n      .append('g')\n        .attr('transform', 'translate(' + [m_padding - 1.5, m_padding] + ')');\n    m_border = m_group.append('rect')\n      .attr('x', -m_padding)\n      .attr('y', -m_padding)\n      .attr('width', w)\n      .attr('height', h)\n      .attr('rx', 3)\n      .attr('ry', 3)\n      .style({\n        'stroke': 'black',\n        'stroke-width': '1.5px',\n        'fill': 'white',\n        'fill-opacity': 0.75,\n        'display': 'none'\n      });\n    m_group.on('mousedown', function () {\n      d3.event.stopPropagation();\n    });\n    m_group.on('mouseover', function () {\n      m_border.transition()\n        .duration(250)\n        .style('fill-opacity', 1);\n    });\n    m_group.on('mouseout', function () {\n      m_border.transition()\n        .duration(250)\n        .style('fill-opacity', 0.75);\n    });\n  };\n\n  this.geoOn(geo.event.resize, function () {\n    this.draw();\n  });\n\n};\n\ninherit(geo.gui.legendWidget, geo.gui.widget);\n\ngeo.registerWidget('d3', 'legend', geo.gui.legendWidget);\n","/*jscs:disable validateIndentation*/\n(function ($, geo, d3) {\n  'use strict';\n\n  var load = function () {\n\n  // This requires jquery ui, which we don't want to make a\n  // hard requirement, so bail out here if the widget factory\n  // is not available and throw a helpful message when the\n  // tries to use it.\n  if (!$.widget) {\n    $.fn.geojsMap = function () {\n      throw new Error(\n        'The geojs jquery plugin requires jquery ui to be available.'\n      );\n    };\n    return;\n  }\n\n  // for multiple initialization detection\n  var initialized = false;\n\n  /**\n   * Takes an option key and returns true if it should\n   * return a color accessor.\n   * @private\n   */\n  function isColorKey(key) {\n    return key.slice(key.length - 5, key.length)\n      .toLowerCase() === 'color';\n  }\n\n  /**\n   * Take an array of data and an accessor for a color property\n   * and return a wrapped accessor mapping to actual color\n   * values.  This allows users to pass arbitrary strings\n   * or numbers as any color property and this will wrap\n   * a categorical scale or linear scale.\n   *\n   * Requires d3\n   * @private\n   * @param {Object[]} data A data array\n   * @param {(string|number|function)} acc A color accessor\n   * @return {function}\n   */\n  function makeColorScale(data, acc) {\n    if (!d3) {\n      console.warn('d3 is unavailable, cannot apply color scales.');\n      return acc;\n    }\n    var domain;\n    var cannotHandle = false;\n    var doNotHandle = true;\n    var categorical = false;\n    var min = Number.POSITIVE_INFINITY;\n    var max = Number.NEGATIVE_INFINITY;\n\n    function wrap(func) {\n      if (geo.util.isFunction(func)) {\n        return function () {\n          return func(acc.apply(this, arguments));\n        };\n      } else {\n        return func(acc);\n      }\n    }\n\n    if (geo.util.isFunction(acc)) {\n      domain = d3.set(data.map(acc)).values();\n    } else {\n      domain = [acc];\n    }\n    domain.forEach(function (v) {\n      if (!(typeof v === 'string' &&\n            typeof geo.util.convertColor(v) === 'object')) {\n        // This is to handle cases when values are css names or\n        // hex strings.  We don't want to apply a categorical\n        // scale.\n        doNotHandle = false;\n      }\n      if (typeof v === 'string') {\n        categorical = true;\n      } else if (!isFinite(v)) {\n        cannotHandle = true;\n      } else if (+v > max) {\n        max = +v;\n      } else if (+v < min) {\n        min = +v;\n      }\n    });\n    if (cannotHandle) {\n      // At least one value is not a string or a numeric value.\n      // Pass the bare accessor back to geojs to handle it.\n      return acc;\n    }\n    if (doNotHandle) {\n      return acc;\n    }\n    if (categorical) {\n      if (domain.length <= 10) {\n        return wrap(d3.scale.category10().domain(domain));\n      } else if (domain.length <= 20) {\n        return wrap(d3.scale.category20().domain(domain));\n      } else {\n        // TODO: sort domain by most used and make an \"other\" category\n        return wrap(d3.scale.category20().domain(domain));\n      }\n    }\n    // http://colorbrewer2.org/?type=diverging&scheme=RdYlBu&n=3\n    return wrap(d3.scale.linear()\n      .range([\n        'rgb(252,141,89)',\n        'rgb(255,255,191)',\n        'rgb(145,191,219)'\n      ])\n      .domain([\n        min,\n        (min + max) / 2,\n        max\n      ]));\n  }\n\n  /**\n   * @class geojsMap\n   * @memberOf jQuery.fn\n   *\n   * @description Generates a geojs map inside an element.\n   *\n   *\n   * Due to current limitations in geojs, only a single map can be instantiated\n   * on a page.  Trying to create a second map will throw an error\n   * (see issue\n   * <a href=\"https://github.com/OpenGeoscience/geojs/issues/154\">#154</a>).\n   *\n   * @example <caption>Create a map with the default options.</caption>\n   * $(\"#map\").geojsMap();\n   * @example <caption>Create a map with a given initial center and zoom</caption>\n   * $(\"#map\").geojsMap({\n   *    longitude: -125,\n   *    latitude: 35,\n   *    zoom: 5\n   * });\n   * @example <caption>Create a map with points</caption>\n   * $(\"#map\").geojsMap({\n   *   data: [...],\n   *   layers: [{\n   *     renderer: 'vgl',\n   *     features: [{\n   *       type: 'point',\n   *       size: 5,\n   *       position: function (d) { return {x: d.geometry.x, y: d.geometry.y} },\n   *       fillColor: function (d, i) { return i < 5 ? 'red' : 'blue' },\n   *       stroke: false\n   *     }]\n   *   }]\n   * };\n   * @example <caption>Create a map with points, lines and multiple layers</caption>\n   * $(\"#map\").geojsMap({\n   *   center: { x: -130, y: 40 },\n   *   zoom: 3,\n   *   layers: [{\n   *     renderer: 'vgl',\n   *     features: [{\n   *       data: [...],\n   *       type: 'point',\n   *       size: 5,\n   *       position: function (d) { return {x: d.geometry.x, y: d.geometry.y} },\n   *       fillColor: function (d, i) { return i < 5 ? 'red' : 'blue' },\n   *       stroke: false\n   *     }]\n   *   },\n   *   {\n   *      renderer: 'd3',\n   *      features[{\n   *        data: [...],\n   *        type: 'line',\n   *        position: function (d) { return { x: d[0], y: d[1] } },\n   *        line: function (d) { return d.coordinates; },\n   *        strokeWidth: 3,\n   *        strokeColor: 'black',\n   *        strokeOpacity: 0.5\n   *      }]\n   *   }]\n   * };\n   */\n  // jscs:disable requireSpaceBetweenArguments\n  $.widget('geojs.geojsMap', /** @lends jQuery.fn.geojsMap */{\n  // jscs:enable requireSpaceBetweenArguments\n    /**\n     * A coordinate object as accepted by geojs to express positions in an\n     * arbitrary coordinate system (geographic, screen, etc).  Coordinates returned by\n     * geojs methods are always expressed with \"x\" and \"y\" properties, but\n     * it will accept any of the aliased properties.\n     * @typedef coordinate\n     * @type {object}\n     * @property {number} longitude Alias: \"x\", \"lng\", or \"lon\"\n     * @property {number} latitude Alias: \"y\" or \"lat\"\n     * @property {number} [elevation=0] Alias: \"z\", \"elev\", or \"height\"\n     */\n\n    /**\n     * Colors can be expressed in multiple ways:\n     * <ul>\n     *   <li>css name (<code>\"steelblue\"</code>)</li>\n     *   <li>24 bit hex value (<code>0xff0051</code>)</li>\n     *   <li>25 bit hex string (<code>\"#ff0051\"</code>)</li>\n     *   <li>rgb object (values from 0-1, <code>{r: 1, g: 0.5, b: 0}</code>)</li>\n     * </ul>\n     * @typedef color\n     * @type {*}\n     */\n\n    /**\n     * Point feature options object.  All styles can be\n     * given as accessor functions or constants.  Accessor\n     * functions are called with the following signature:\n     * <pre>\n     *     function func(d, i) {\n     *         // d    - data object\n     *         // i    - index of d in the data array\n     *         // this - geo.pointFeature\n     *     }\n     * </pre>\n     * Pass null to remove saved options from previous calls.\n     * @typedef pointOptions\n     * @type {Object}\n     * @property {Object[]} data Data array\n     * @property {coordinate} position Location of the point center\n     * @property {number} radius\n     *  Radius of the circle in pixels (ignored when <code>size</code>\n     *  is present)\n     * @property {number} size\n     *   A numerical value mapped affinely to a radius in the range [5,20]\n     * @property {boolean} fill Presence or absence of the fill\n     * @property {color} fillColor Interior color\n     * @property {float} fillOpacity Opacity of the interior <code>[0,1]</code>\n     * @property {boolean} stroke Presence or absence of the stroke\n     * @property {color} strokeColor Stroke color\n     * @property {float} strokeOpacity Opacity of the stroke <code>[0,1]</code>\n     */\n\n    /**\n     * @instance\n     * @description\n     * Map options (not fully implemented).\n     * @example <caption>Get the current map center</caption>\n     * var center=$(\"#map\").geojsMap(\"center\");\n     * @example <caption>Pan the map to a new center</caption>\n     * $(\"#map\").geojsMap(\"center\", {lat: 10, lng: -100});\n     * @property {object[]} [data=[]] The default data array used for\n     * features/layers not already containing data.\n     * @property {coordinate} [center={lat: 0, lng: 0}] The map center\n     * @property {number} [zoom=0] The zoom level (floating point >= 0)\n     * @property {(number|null)} [width=null]\n     *   The width of the map in pixels or null for 100%\n     * @property {(number|null)} [height=null]\n     *   The height of the map in pixels or null for 100%\n     * @property {geo.layer.spec[]} [layers=[]]\n     *   Describes layers added to the map\n     * @property {boolean} [autoresize=true]\n     *   Resize the map on <code>window.resize</code> (initialization only)\n     */\n    options: {\n      center: {latitude: 0, longitude: 0},\n      zoom: 0,\n      width: null,\n      height: null,\n      layers: [],\n      data: [],\n\n      // These options are for future use, but shouldn't\n      // be changed at the moment, so they aren't documented.\n      baseLayer: 'osm',\n      baseRenderer: 'vgl'\n    },\n\n    /**\n     * Internal constructor\n     * @instance\n     * @protected\n     */\n    _create: function () {\n      if (this._map || !this.element.length) {\n        // when called multiple times on a single element, do nothing\n        return;\n      }\n      if (initialized) {\n        // warn when called multiple times on different elements\n        console.warn(\n          'Geojs already initialized in this window.'\n        );\n        // Try to clean up the old gl context, but this doesn't usually work\n        delete window.gl;\n      }\n      // set global initialization state\n      initialized = true;\n\n      // create the map\n      this._map = geo.map({\n        width: this.options.width,\n        height: this.options.height,\n        zoom: this.options.zoom,\n        center: this.options.center,\n        node: this.element.get(0)\n      });\n\n      // create the base layer\n      this._baseLayer = this._map.createLayer(\n        this.options.baseLayer,\n        {\n          renderer: this.options.baseRenderer\n        }\n      );\n\n      // Trigger a resize to a valid size before adding\n      // the feature layer to handle some of the bugs that\n      // occur when initializing onto a node of size 0.\n      this._resize({width: 800, height: 600});\n\n      this._layers = [];\n      this.update();\n    },\n\n    /**\n     * Update the layers and features using a new array of\n     * {@link geo.layer.spec} objects.  All existing layers\n     * and features are deleted.  If only the data has changed,\n     * you can usually just call {@link jQuery.fn.geojsMap#redraw redraw}.\n     * @instance\n     * @param {geo.layer.spec[]} [layers] New map layers\n     * @example <caption>Delete and recreate all existing layers</caption>\n     * $(\"#map\").geojsMap(\"update\");\n     * @example <caption>Remove all existing feature layers.</caption>\n     * $(\"#map\").geojsMap(\"update\", []);\n     */\n    update: function (layers) {\n      var m_this = this;\n      this.options.layers = layers || this.options.layers || [];\n\n      // delete existing layers\n      this._layers.forEach(function (layer) {\n        layer.clear();\n        m_this._map.deleteLayer(layer);\n      });\n\n      // create new layers\n      this._layers = this.options.layers.map(function (layer) {\n        layer.data = layer.data || m_this.options.data;\n\n        // Until auto color scaling gets moved into geojs core, we will\n        // mutate the spec and replace the color and radius options.\n        (layer.features || []).forEach(function (feature) {\n          var data = feature.data || layer.data || [];\n          var scl;\n          if (feature.type === 'point') {\n            if (feature.size) {\n              feature._size = feature.size;\n            } else if (feature.size === null) {\n              delete feature._size;\n            }\n\n            if (data.length && feature._size) {\n              scl = d3.scale.linear()\n                .domain(\n                  d3.extent(data, feature._size)\n                )\n                .range([5, 20]);\n              feature.radius = function () {\n                // TODO: wrong `this` (wait for style refactor)\n                return scl(feature._size.apply(this, arguments));\n              };\n            }\n            delete feature.size;\n          }\n\n          var key;\n          for (key in feature) {\n            if (feature.hasOwnProperty(key) &&\n                isColorKey(key)) {\n              feature[key] = makeColorScale(data, feature[key]);\n            }\n          }\n        });\n        return geo.layer.create(m_this._map, layer);\n      });\n\n      // trigger an initial draw\n      this.redraw();\n\n      return this;\n    },\n\n    /**\n     * Resize the map canvas.\n     * @instance\n     * @protected\n     * @param {object?} size Explicit size or use this.options.\n     */\n    _resize: function (size) {\n      var width = this.options.width,\n          height = this.options.height;\n      if (size) {\n        width = size.width;\n        height = size.height;\n      }\n      if (!width) {\n        width = this.element.width();\n      }\n      if (!height) {\n        height = this.element.height();\n      }\n      this._map.resize(0, 0, width, height);\n    },\n\n    /**\n     * Do a full redraw of the map.  In general, users shouldn't need to\n     * call this method, but it could be useful when accessing lower\n     * level features of the mapping api.\n     * @todo This function may need to go through each feature and call\n     * {@link geo.feature#modified} to properly update.\n     * @instance\n     */\n    redraw: function () {\n      this._resize();\n      return this;\n    }\n  });\n\n  // Some argument type definitions used only by this plugin:\n  /**\n   * A geojs renderer is one of the following:\n   * <ul>\n   *   <li><code>\"vgl\"</code>: Uses webGL</li>\n   *   <li><code>\"d3\"</code>: Uses svg</li>\n   * </ul>\n   * @typedef renderer\n   * @type {string}\n   */\n\n  };\n\n  $(load);\n})($ || window.$, geo || window.geo, d3 || window.d3);\n"]}